@{
    ViewBag.Title = "美容服务包";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}
<div id="div" v-cloak>
    <h2>编辑限购</h2>
    <div>
        <div>
            <div>
                <label>限购次数:</label>
                <select v-model="BeautyServicePackageLimitConfig.CycleType">
                    <option value="">请选择</option>
                    <option value="year">年</option>
                    <option value="month">月</option>
                    <option value="week">周</option>
                    <option value="day">天</option>
                </select>
                <input type="text" v-model="BeautyServicePackageLimitConfig.CycleLimit"/>
                <label>次</label>
            </div>
            <div>
                <label>限购地区:</label>
                <div>
                    <table class="table table-striped table-bordered table-hover dataTables-example">
                        <thead style="width:100%">
                            <tr style="width:100%">
                                <th style="width:33%">
                                    /省/自治区/直辖市
                                </th>
                                <th style="width:33%">
                                    市
                                </th>
                                <th style="width:33%">
                                    <label><button v-on:click="AddRegion">添加</button></label>
                                </th>
                            </tr>
                        </thead>
                        <tr is="region" v-for="province in ProvinceCityList" v-bind:Region="province" v-on:modifyregion="MergeRegion" v-on:removeregion="RemoveRegion"></tr>
                    </table>
                </div>
            </div>
        </div>
        <div slot="footer">
            <button class="modal-default-button" v-on:click="UpsertBeautyServicePackageLimitConfig()">确认</button>
        </div>
    </div>
</div>
<script type="text/x-template" id="region-template">
    <tr>
        <td>
            <select v-on:change="ChangeProvince()" v-model="CurrentProvinceId">
                <option v-for="item in AllProvince" v-bind:value="item.RegionId">{{ item.RegionName }}</option>
            </select>
        </td>
        <td>
            <label v-for="city in Citys">
                <span><input type="checkbox" name="cityName" v-bind:value="city.RegionId" v-model="CityIds" />{{city.RegionName}}</span>
            </label>
        </td>
        <td>
            <button v-on:click="RemoveSelf">删除</button>
        </td>
    </tr>
</script>

@section scripts{

<script type="text/javascript" src="~/Scripts/vue.min.js"></script>
<script type="text/javascript">
    Vue.component("region", {
        template: '#region-template',
        props: ['Region'],
        data: function () {
            return {
                AllProvince: [],
                Citys: [],
                CityIds: [],
                CurrentProvinceId: 0,
                RegionUniqueIndex: 0
            }
        },
        watch: {
            "CityIds": function () {
                var self = this;
                if (self.CurrentProvinceId > 0) {
                    self.$emit('modifyregion', { ProvinceId: self.CurrentProvinceId, CityIds: self.CityIds, RegionUniqueIndex: self.RegionUniqueIndex });
                }
            },
            "CurrentProvinceId": function () {
                var self = this;
                if (self.CurrentProvinceId > 0) {
                    self.$emit('modifyregion', { ProvinceId: self.CurrentProvinceId, CityIds: self.CityIds, RegionUniqueIndex: self.RegionUniqueIndex });
                }
            }
        },
        created: function () {
            this.Load();
        },
        methods: {
            Load: function () {
                var self = this;
                self.AllProvince = self.Region.AllProvince;
                self.CurrentProvinceId = self.Region.ProvinceId;
                self.Citys = self.Region.CityList;
                self.CityIds = self.Region.CityIds;
                self.RegionUniqueIndex = self.Region.RegionUniqueIndex;
            },
            ChangeProvince: function () {
                var self = this;
                if (self.CurrentProvinceId && self.CurrentProvinceId > 0) {
                    self.GetRegionByRegionId(self.CurrentProvinceId, function (region) {
                        self.Citys = region.ChildRegions;
                    });
                }
            },
            GetRegionByRegionId: function (regionId, callBack) {
                $.get("/BankMRActivity/GetRegionByRegionId", { regionId: regionId }, function (region) {
                    return callBack(region);
                });
            },
            RemoveSelf: function () {
                var self = this;
                self.$emit('removeregion', { ProvinceId: self.CurrentProvinceId, CityIds: self.CityIds, RegionUniqueIndex: self.RegionUniqueIndex });
            }
        }
    })
    var RegionUniqueIndex = 0;
    var vue = new Vue({
        el: "#div",
        data: {
            BeautyServicePackageLimitConfig: {
                PKID: 0,
                PackageDetailId: 0,
                CycleType: "",
                CycleLimit: 0,
                ProvinceIds: 0,
                CityIds: 0,
            },
            ProvinceCityList: [],
            ProvinceCity: {
                ProvinceId: 0,
                CityList: [],
            },
            ProvinceIds: [],
            CityIds: [],
            LimitRegion: [],
            AllProvince: [],
            PackageDetailId:@ViewBag.PackageDetailId
        },
        created: function () {
            this.load();
        },
        watch: {
        },
        methods: {
            load: function (callback) {
                var self = this;
                self.GetBeautyServicePackageLimitConfig(self.PackageDetailId);
            },
            GetBeautyServicePackageLimitConfig: function (packageDetailId) {
                var self = this;
                $.get("GetBeautyServicePackageLimitConfig", { packageDetailId: packageDetailId }, function (result) {
                    var data = result.Data;
                    self.GetAllProvince(function () {
                        if (data && data.PKID > 0) {
                            self.BeautyServicePackageLimitConfig = data;
                            if (data.ProvinceIds && data.ProvinceIds != "null") {
                                var provinceIds = data.ProvinceIds.split(',');
                                if (provinceIds && provinceIds.length > 0) {
                                    for (var i = 0; i < provinceIds.length; i++) {
                                        var provinceId = provinceIds[i];
                                        if (provinceId && provinceId != "") {
                                            self.GetRegionByRegionId(provinceId, function (region) {
                                                var childRegionIds = GetChildRegionIdsByRegion(region);
                                                var cityIds = [];
                                                if (data.CityIds) {
                                                    var dataCityId = data.CityIds.split(',');
                                                    if (dataCityId && dataCityId.length > 0) {
                                                        cityIds = childRegionIds.filter(function (v) { return dataCityId.indexOf("" + v + "") > -1 })
                                                    }
                                                }
                                                RegionUniqueIndex++;
                                                self.ProvinceCityList.push({
                                                    ProvinceId: region.RegionId,
                                                    CityIds: cityIds,
                                                    CityList: region.ChildRegions,
                                                    AllProvince: self.AllProvince,
                                                    RegionUniqueIndex: RegionUniqueIndex
                                                })
                                            })
                                        }
                                    }
                                }
                            }
                        } else {
                            self.BeautyServicePackageLimitConfig.PKID = 0;
                            self.BeautyServicePackageLimitConfig.PackageDetailId = packageDetailId;
                            self.BeautyServicePackageLimitConfig.CycleType = "";
                            self.BeautyServicePackageLimitConfig.CycleLimit = 0;
                            self.BeautyServicePackageLimitConfig.ProvinceIds = [];
                            self.BeautyServicePackageLimitConfig.CityIds = [];
                        }
                    })
                })
            },
            UpsertBeautyServicePackageLimitConfig: function () {
                var self = this;
                if (self.BeautyServicePackageLimitConfig.CycleLimit < 0) {
                    alert("限购次数不合法");
                    return;
                }          
                var provinceIds = [];
                var cityIds = [];
                if (self.LimitRegion) {
                    for (var i = 0; i < self.LimitRegion.length; i++) {
                        if (self.LimitRegion[i]) {
                            provinceIds.push(self.LimitRegion[i].ProvinceId);
                            for (var j = 0; j < self.LimitRegion[i].CityIds.length; j++) {
                                if (self.LimitRegion[i].CityIds[j]) {
                                    cityIds.push(self.LimitRegion[i].CityIds[j]);
                                }
                            }
                        }
                    }
                }
                
                self.BeautyServicePackageLimitConfig.ProvinceIds = provinceIds.join(',');
                self.BeautyServicePackageLimitConfig.CityIds = cityIds.join(',');
                $.post("UpsertBeautyServicePackageLimitConfig", { config: self.BeautyServicePackageLimitConfig }, function (result) {
                    if (result && result.Status) {
                        alert("成功");
                        window.location.reload();
                    } else {
                        if (result && result.Msg) {
                            alert(result.Msg);
                        } else {
                            alert("失败");
                        }                       
                    }
                })
            },
            AddRegion: function () {
                var self = this;
                RegionUniqueIndex++;
                self.ProvinceCityList.push({
                    ProvinceId: -1,
                    CityIds: [],
                    CityList: [],
                    AllProvince: self.AllProvince,
                    RegionUniqueIndex: RegionUniqueIndex
                })
            },
            GetRegionByRegionId: function (regionId, callBack) {
                $.get("/BankMRActivity/GetRegionByRegionId", { regionId: regionId }, function (region) {
                    return callBack(region);
                });
            },
            MergeRegion: function (data) {
                console.log(data);
                var self = this;
                if (self.LimitRegion && self.LimitRegion.length > 0) {
                    var isExist = false;
                    for (var i = 0; i < self.LimitRegion.length; i++) {
                        if (data.RegionUniqueIndex == self.LimitRegion[i].RegionUniqueIndex) {
                            self.LimitRegion[i].CityIds = data.CityIds;
                            self.LimitRegion[i].ProvinceId = data.ProvinceId
                            isExist = true;
                            break;
                        }
                    }
                    if (!isExist) {
                        self.LimitRegion.push(data);
                    }
                } else {
                    self.LimitRegion.push(data);
                }
            },
            RemoveRegion: function (data) {
                var self = this;
                if (self.ProvinceCityList) {
                    self.ProvinceCityList = self.ProvinceCityList.filter(function (v) {
                        return v.RegionUniqueIndex != data.RegionUniqueIndex;
                    })
                }
                if (self.LimitRegion) {
                    self.LimitRegion = self.LimitRegion.filter(function (v) {
                        return v.ProvinceId != data.ProvinceId;
                    })
                }
            },
            GetAllProvince: function (callback) {
                var self = this;
                $.get("/BankMRActivity/GetAllProvince", function (data) {
                    self.AllProvince.push({
                        RegionId: -1,
                        RegionName: ""
                    });
                    self.AllProvince = data;
                    self.AllProvince.unshift({
                        RegionId: -1,
                        RegionName: "请选择"
                    });
                    return callback();
                });
            }
        }
    })

    function GetChildRegionIdsByRegion(region) {
        var childRegionIds = [];
        if (region.ChildRegions && region.ChildRegions.length > 0) {
            for (var j = 0; j < region.ChildRegions.length; j++) {
                childRegionIds.push(region.ChildRegions[j].RegionId);
            }
        }

        return childRegionIds;
    }
</script>
}
