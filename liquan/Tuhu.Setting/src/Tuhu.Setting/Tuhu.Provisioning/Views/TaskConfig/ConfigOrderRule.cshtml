@using Tuhu.Provisioning.DataAccess.Entity;
@model List<OrdertaskRuleModel>
    @{
        ViewBag.Title = "购买规则配置";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    <style>
        .configName {
            float: left;
            width: 30%;
        }

        .configValue {
            float: left;
            width: 70%;
            margin: 0;
            padding: 0;
        }

        .configItem {
            margin-top: 10px;
            height: 1.2em;
        }

        #RuleConfig input {
            width: 90%;
        }

        #RuleConfig select {
            width: 50%;
            height: 1.4em;
        }

        .prodectItem {
            height: 1.2em;
            margin-top: 10px;
        }
        .brandone {
            color: blue;
            margin-right: 10px;
            font-size:0.8em;
        }
    </style>
    <link href="~/Styles/zTreeStyle.css" type="text/css" rel="stylesheet" />
    <link href="~/Scripts/jquery-ui-timepicker-addon/jquery-ui-timepicker-addon.min.css" rel="stylesheet" />
    <div class="title" style="margin-bottom:20px;">
        <h1>购买规则配置</h1>
    </div>
    <div id="rules">
        <div><button class="btn btn-primary" onclick="TaskFunc.EditOrderConfig(0)">+新建</button></div>
        <div id="ruleList">
            @if (Model.Any())
            {
                <table style="width:100%;">
                    <thead>
                        <tr>
                            <th>类型</th>
                            <th>条件编号</th>
                            <th>条件名称</th>
                            <th>条件状态</th>
                            <th>创建时间</th>
                            <th>最后更新时间</th>
                            <th>创建人</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.RuleType</td>
                                <td>@item.RuleNo</td>
                                <td>@item.RuleName</td>
                                <td>@(item.RuleStatus ? "启用" : "禁用")</td>
                                <td>@item.CreateDateTime</td>
                                <td>@item.LastUpdateTime</td>
                                <td>@item.Creator</td>
                                <td>
                                    <button class="btn" onclick="TaskFunc.FetchOrderConfig(@item.RuleNo)">编辑</button>
                                    <button class="btn">历史</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <h2>暂无购买规则</h2>
            }
        </div>
    </div>
    <div id="RuleConfig" style="display:none;">
        <div>
            <div class="configItem">
                <div class="configName">达成条件名称</div>
                <div class="configValue">
                    <input type="text" placeholder="必填" id="ruleName" />
                </div>
                <div style="clear:both;"></div>
            </div>
            <div class="configItem">
                <div class="configName">达成条件状态</div>
                <div class="configValue">
                    <select id="ruleStatus">
                        <option value="0" selected="selected">禁用</option>
                        <option value="1">启用</option>
                    </select>
                </div>
                <div style="clear:both;"></div>
            </div>
            <div class="configItem">
                <div class="configName">任务计时及结算状态</div>
                <div class="configValue">
                    <select id="matchType">
                        <option value="0">订单付款完成</option>
                        <option value="1" selected="selected">订单完成</option>
                    </select>
                </div>
                <div style="clear:both;"></div>
            </div>
            <div class="configItem">
                <div class="configName">规则配置</div>
                <div class="configValue">
                    <select id="conditionType">
                        <option value="0" selected="selected">根据产品品类</option>
                        <option value="1">根据产品PID</option>
                    </select>
                </div>
                <div style="clear:both;"></div>
            </div>
            <div id="categoryConfig">
                <div class="configItem">
                    <div class="configName">产品品类</div>
                    <div class="configValue">
                        <div class="area">
                            <div id="category">
                                <ul id="tree1" class="ztree"></ul>
                            </div>
                        </div>
                    </div>
                    <div class="configItem">
                        <div class="configName">产品品牌</div>
                        <div class="configValue">
                            <div style="width:100%">
                                <button class="btn btn-primary" style="width:30%;float:left;" onclick="TaskFunc.GetBrands('');">查询</button>
                                <p style="color:red;font-size:0.7em;float:left;width:65%;margin-left:5%;">*根据所选品类查询包含的品牌</p>
                            </div>
                            <div id="brand">
                                
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="pidsConfig" style="display:none;">
                <div class="configName">单个商品</div>
                <div class="configValue">
                    <button class="btn btn-primary" onclick="TaskFunc.AddProductItem()" style="width:100px;font-size:12px;">+添加单个商品</button>
                </div>
                <div class="configName">商品列表</div>
                <div class="configValue" id="pids">
                    <div class="prodectItem">
                        <input type="text" class="pid" style="float:left;width:30%;margin-right:5%;" onblur="TaskFunc.InputOnBlur(this)" placeholder="输入PID" />
                        <input type="text" class="productName" style="float:left;width:30%;margin-right:5%;" placeholder="根据PID自动填入" />
                        <button class="btn btn-primary" style="float:left;width:15%;font-size:13px;" onclick="$(this).parent().remove();">删除</button>
                        <div style="clear:both;"></div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div style="display:none" id="brand_list">
    </div>

    <script src="~/Scripts/jquery.ztree.all-3.5.min.js"></script>
    <script src="~/Scripts/jquery-ui-timepicker-addon/jquery-ui-timepicker-addon.min.js"></script>
    <script>
        $(function () {
            TaskFunc.GetCategory();
            $("#conditionType").change(function () {
                var item = $("#conditionType").val();
                if (item == 0) {
                    $("#categoryConfig").show();
                    $("#pidsConfig").hide();
                }
                else {
                    $("#categoryConfig").hide();
                    $("#pidsConfig").show();
                }
            });
        })
    </script>
    <script>
        TaskFunc = {
            GetCategory: function () {
                $.get("/TaskConfig/GetCategory", {}, function (result) {
                    if (result != null) {
                        var setting = {
                            check: {
                                enable: true,
                                nocheckInherit: true,
                                chkStyle: "checkbox",
                                chkboxType: { "Y": "s", "N": "ps" }
                            },
                            callback: {
                            }
                        };
                        treeObj = $.fn.zTree.init($("#tree1"), setting, result);
                    }
                });
            },
            AddProductItem: function () {
                html = `<div class="prodectItem">
                        <input type="text" class="pid" onblur="TaskFunc.InputOnBlur(this)" style="float:left;width:30%;margin-right:5%;"/>
                        <input type="text" class="productName" style="float:left;width:30%;margin-right:5%;" />
                        <button class="btn btn-primary" style="float:left;width:15%;font-size:13px;" onclick="$(this).parent().remove();">删除</button>
                        <div style="clear:both;"></div>
                        </div>`;
                $("#pids").append(html);

            },
            FetchOrderConfig: function (index) {
                TaskFunc.InitRuleInfo();
                $.post("/TaskConfig/FetchOrderRuleInfo", {
                    RuleId: index
                }, function (result) {
                    if (result.Code == 0) {
                        alert(result.Info);
                        return;
                    }
                    if (result.Data.RuleNo == 0) {
                        alert("未查询对应规则信息");
                        return;
                    }
                    $("#ruleName").val(result.Data.RuleName);
                    $("#ruleStatus").val(result.Data.RuleStatus ? 1 : 0);
                    $("#matchType").val(result.Data.MatchType);
                    $("#conditionType").val(result.Data.ConditionType);
                    if (result.Data.ConditionType == 0) {
                        if (result.Data.Brand != null) {
                            $("#pidsConfig").hide();
                            $("#categoryConfig").show();
                            var data = result.Data.Brand.split(';');
                            if (data.length > 0) {
                                var html = '';
                                $.each(data, function (k, v) {
                                    html += `<span class="brandone">${v}</span>`;
                                });
                                $("#brand").html(html);
                            }
                        }
                        var data2 = result.Data.CategoryList.split(";");
                        if (data2.length > 0) {
                            var allNodes = treeObj.getNodes();
                            $.each(allNodes,
                                function (i, v) {
                                    if ($.inArray(v.title, data2) > - 1) {
                                        $.each(v.children, function (p, q) {
                                            q.checked = true;
                                            treeObj.updateNode(q);
                                        });
                                        v.checked = true;
                                        treeObj.updateNode(v);
                                    } else {
                                        $.each(v.children, function (p, q) {
                                            if ($.inArray(q.title, data2) > -1) {
                                                q.checked = true;
                                                treeObj.updateNode(q);
                                            }
                                        });
                                    }
                                });
                        }
                    }
                    else if (result.Pids.length > 0) {
                        $("#pidsConfig").show();
                        $("#categoryConfig").hide();
                        var html = '';
                        $.each(result.Pids, function (k, v) {
                            html += `<div class="prodectItem">
                        <input type="text" class="pid" onblur="TaskFunc.InputOnBlur(this)" style="float:left;width:30%;margin-right:5%;" value='${v.PID}' placeholder="输入PID" />
                        <input type="text" class="productName" style="float:left;width:30%;margin-right:5%;" value='${v.DisplayName}' placeholder="根据PID自动填入" />
                        <button class="btn btn-primary" style="float:left;width:15%;font-size:13px;" onclick="$(this).parent().remove();">删除</button>
                        <div style="clear:both;"></div>
                        </div>`
                        });
                        $("#pids").html(html);
                    }
                    TaskFunc.EditOrderConfig(index);
                });
            },
            InitRuleInfo: function () {
                $("#ruleName").val("");
                $("#ruleStatus").val(0);
                $("#matchType").val(1);
                $("#conditionType").val(0);
                $("#brand").empty();
                $("#pids").empty();
                $("#pidsConfig").hide();
                $("#categoryConfig").show();
                var allNodes = treeObj.getNodes();
                $.each(allNodes, function (k, v) {
                    v.check_Child_State = 0;
                    v.checked = false;
                    treeObj.updateNode(v);
                    $.each(v.children, function (p, q) {
                        q.checked = false;
                        treeObj.updateNode(q);
                    })
                })
            },
            EditOrderConfig: function (index) {
                if (index === 0) {
                    TaskFunc.InitRuleInfo();
                    $("#tree1").empty();
                    TaskFunc.GetCategory();
                }
                $("#RuleConfig").dialog({
                    title: '配置购买规则',
                    height: 'auto',
                    width: 700,
                    modal: true,
                    buttons: {
                        "保存": function () {
                            TaskFunc.SaveRuleInfo(index, this);
                        },
                        "关闭": function () {
                            $(this).dialog("close");
                        }
                    }
                });
            },
            SaveRuleInfo: function (index, target) {
                var ruleName = $("#ruleName").val().trim();
                var ruleStatus = $("#ruleStatus").val() == '1';
                var ruleType = "商品购买";
                var matchType = $("#matchType").val().trim();
                var conditionType = $("#conditionType").val().trim();
                var brand = []
                var categoryList = [];
                var pids = [];
                if (conditionType == 0) {
                    $(".brandone").each(function () {
                        var v = $(this).text().trim();
                        if (v != null && v != '') {
                            brand.push(v);
                        }
                    });
                    var allNodes = treeObj.getNodes();
                    $.each(allNodes,
                        function (i, v) {
                            if (v.check_Child_State == 2) {
                                categoryList.push(v.title);
                            } else if (v.check_Child_State == 1) {
                                $.each(v.children,
                                    function (i, v) {
                                        if (v.checked)
                                            categoryList.push(v.title);
                                    });
                            }
                        });
                    if (categoryList.length < 1 && brand.length < 1) {
                        alert("品牌和品类不能同时为空;")
                        return;
                    }
                }
                else {
                    $(".pid").each(function () {
                        var item = $(this).val().trim();
                        pids.push(item);
                    });
                    if (pids.length < 1) {
                        alert("至少制定一个产品PID");
                        return;
                    }
                }
                if (ruleName == '') {
                    alert("规则名称不能为空");
                    return;
                }
                $.post("/TaskConfig/EditOrderRule", {
                    RuleNo: index,
                    RuleName: ruleName,
                    RuleStatus: ruleStatus,
                    RuleType: ruleType,
                    MatchType: matchType,
                    ConditionType: conditionType,
                    CategoryList: categoryList.join(";"),
                    Brand: brand.join(";"),
                    PIDS: pids.join(";")
                }, function (data) {
                    if (data.Code == 0) {
                        alert(data.Info);
                    }
                    else {
                        window.location.reload();
                    }
                    $(target).dialog("close");
                });
            },
            GetBrands: function (idx) {
                var data = [];
                var allNodes = treeObj.getNodes();
                $.each(allNodes, function (i, v) {
                    if (v.check_Child_State == 2) {
                        data.push(v.url);
                    } else if (v.check_Child_State == 1) {
                        $.each(v.children, function (i, v) {
                            if (v.checked)
                                data.push(v.url);
                        });
                    }
                });
                if (data.length < 1) {
                    alert("请至少选中一个类目");
                    return;
                }
                $.post("/TaskConfig/GetBrandsByCategory", {
                    Categorys: data.join(';')
                }, function (result) {
                    if (result.Code == 1) {
                        var html = '';
                        $.each(result.Data, function (k, v) {
                            html += `<div style="margin-left:2px;width:30%;float:left;">
                                    <input type="checkbox" class="brandItem" style="width:15%;float:left;"  data="${v}"/><span style="width:80%;float:left;">${v}</span><div style="clear:both"></div>
                                    </div>`
                        });
                        $("#brand_list").html(html);
                        if (idx != "") {
                            var dat = idx.split(";");
                            $(".brandItem").each(function (k, v) {
                                if ($(this).attr("data").val() == dat) {
                                    $(this).prop("checked", true);
                                }
                            });
                        }
                        $("#brand_list").dialog({
                            title: '选择品牌',
                            height: 'auto',
                            width: 700,
                            modal: true,
                            buttons: {
                                "保存": function () {
                                    var html = '';
                                    $(".brandItem").each(function (k, v) {
                                        if ($(this).is(':checked')) {
                                            //result.push($(this).attr('data'));
                                            html += `<span class="brandone">${$(this).attr('data')}</span>`
                                        }
                                    });
                                    $("#brand").html(html);
                                    $(this).dialog("close");
                                },
                                "关闭": function () {
                                    $(this).dialog("close");
                                }
                            }
                        });
                    }
                });
            },
            InputOnBlur: function (target) {
                var pid = $(target).val();
                if (pid == '' || pid == null) {
                    return;
                }
                $.post("/TaskConfig/FetchProductNameByPID", {
                    PID: pid
                }, function (data) {
                    if (data.Code === 0) {
                        alert(data.Info);
                        $(target).val('');
                    }
                    else {
                        $(target).next().val(data.Data);
                    }
                })
            }
        }
    </script>
