@{
    ViewBag.Title = "塞券记录";
}
@section head{
    <link href="~/css/beautyPackage.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="~/Content/iview/iview.css" />
    <style type="text/css">
        .ui-dialog {
            width: auto;
        }

        .select2-selection__choice {
            color: black;
        }

        label.dialoglable {
            width: 20%;
            display: inline-block;
            font-weight: 900;
        }

        div.dialogdiv {
            width: 60%;
            display: inline-block;
        }

        .strike {
            display: block;
            text-align: center;
            overflow: hidden;
            white-space: nowrap;
            margin-top: 10px;
        }

        .strike > span {
            position: relative;
            display: inline-block;
        }

        .strike > span:before,
        .strike > span:after {
            content: "";
            position: absolute;
            top: 50%;
            width: 9999px;
            height: 1px;
            background: #808080;
        }

        .strike > span:before {
            right: 100%;
            margin-right: 15px;
        }

        .strike > span:after {
            left: 100%;
            margin-left: 15px;
        }

        body {
            background-color: #71d6f3;
            /*font-size: 75%;*/
            font-family: Verdana, Tahoma, Arial, "Helvetica Neue", Helvetica, Sans-Serif;
            margin: 0;
            padding: 0;
            color: #696969;
        }

        .form-item-width {
            width: 93%;
        }
    </style>
}

<div id="div" v-cloak>
    <h2 style="margin:20px 0;">
        <a href="/VipBaoYangPackage/VipBaoYangPackage" style="color: #08c;">保养套餐配置</a>
        <a href="/VipBaoYangPackage/VipPromotionOperation" style="color: #08c;margin-left:30px">给用户塞券</a>
        <a href="/VipBaoYangPackage/PromotionOperationRecord" style="color: #08c;margin-left:30px">塞券记录</a>
        <a href="/VipBaoYangPackage/VipBaoYangPackageSmsConfig" style="color: #08c;margin-left:30px">短信配置</a>
    </h2>
    <row type="flex" justify="start" v-bind:align="'middle'" style="margin-bottom:20px">
        <i-col span="4">
            <i-input type="text" placeholder="请输入批次号" v-model="filterCondition.batchCode"></i-input>
        </i-col>
        <i-col span="1"></i-col>
        <i-col span="4">
            <i-input type="text" placeholder="请输入手机号" v-model="filterCondition.mobilePhone"></i-input>
        </i-col>
        <i-col span="1"></i-col>
        <i-col span="5">
            <i-input type="text" placeholder="请输入套餐PID" v-model="filterCondition.pid"></i-input>
        </i-col>
        <i-col span="1"></i-col>
        <i-col span="5">
            <i-select filterable v-model="filterCondition.vipUserId">
                <i-option value="00000000-0000-0000-0000-000000000000" key="00000000-0000-0000-0000-000000000000">请选择</i-option>
                <i-option :value="item.VipUserId" :key="item.VipUserId" v-for="item in users">{{item.VipUserName}}</i-option>
            </i-select>
        </i-col>
        <i-col span="1"></i-col>
        <i-col span="2">
            <i-button type="success" v-on:click="pager.currentPage=0;">查询</i-button>
        </i-col>
    </row>
    <table class="tableContainer" style="margin-top:30px">
        <thead>
            <tr>
                <th>批次号</th>
                <th>套餐PID</th>
                <th>套餐名称</th>
                <th>大客户名称</th>
                <th>已上传</th>
                <th>塞券成功</th>
                <th>塞券人</th>
                <th>塞券时间</th>
                <th>短信配置</th>
                <th>操作</th>
            </tr>
        </thead>
        <tr v-if="list.length<=0&&!loading">
            <td colspan="8">无数据</td>
        </tr>
        <tr v-if="loading">
            <td colspan="8"><img src="/Images/loading.gif" /></td>
        </tr>
        <tr v-for="item in list">
            <td>{{item.BatchCode}}</td>
            <td>{{item.PID}}</td>
            <td><a v-on:click="showDetail(item.PackageId)" style="cursor:pointer"><span>{{item.PackageName}}</span></a></td>
            <td>{{item.VipUserName}}</td>
            <td>{{item.WaitCount}}</td>
            <td>{{item.SuccessCount}}</td>
            <td>{{item.CreateUser}}</td>
            <td>{{item.CreateDateTime | formatDate}}</td>
            <td v-if="item.IsSendSms==true"><span style="color:green;font-weight:bolder">发送</span></td>
            <td v-if="item.IsSendSms==false"><span style="color:red;font-weight:bolder">不发送</span></td>
            <td>
                <a :href="'/VipBaoYangPackage/ExportCreatePromotionRecord?packageId='+item.PackageId+'&batchCode='+item.BatchCode">下载</a>
                <a :href="'/VipBaoYangPackage/PromotionDetail?batchcode='+item.BatchCode">详情</a>
            </td>
        </tr>
    </table>
    <div style="margin-top:20px;">
        <span>
            每页显示:
            <select v-model="pager.size">
                <option v-for="size in sizes" v-bind:value="size">{{size}}</option>
            </select>
            条
        </span>
        <span>
            <button type="button" v-on:click="pager.currentPage=1" v-bind:disabled="pager.currentPage<=1">首页</button>
            <button type="button" v-on:click="pager.currentPage-=1" v-bind:disabled="pager.currentPage<=1">上一页</button>
            <button type="button" v-on:click="pager.currentPage+=1" v-bind:disabled="pager.currentPage>=pager.pages">下一页</button>
            <button type="button" v-on:click="pager.currentPage=pager.pages" v-bind:disabled="pager.currentPage>=pager.pages">尾页</button>
        </span>
        <span style="float:right">
            <span>当前第{{pager.currentPage}}页/共{{pager.pages}}页&nbsp;&nbsp;转到<input style="width:30px" type="text" v-model="pager.inputPage">页</span>
            <button type="button" v-on:click="pager.currentPage=pager.inputPage" v-bind:disabled="pager.inputPage<=0 || pager.inputPage>pager.pages">确定</button>
        </span>
    </div>
    <form-modal :brands="brands" :users="users" :show.sync="show" :packageid="packageId"></form-modal>
</div>

<script type="text/x-template" id="form-modal">
    <div>
        <modal v-model="showModal" title="套餐产品详情页" width="750"
               :loading="true"
               :closable="!loading"
               :mask-closable="false">
            <i-form ref="packageForm" :rules="rules" :model="data" :label-width="160">
                <form-item label="套餐所属大客户：" prop="VipUserId" class="form-item-width">
                    <i-select transfer filterable v-model="data.VipUserId">
                        <i-option value="00000000-0000-0000-0000-000000000000" key="00000000-0000-0000-0000-000000000000">请选择套餐所属大客户</i-option>
                        <i-option :value="item.VipUserId" :key="item.VipUserId" v-for="item in users">{{item.VipUserName}}</i-option>
                    </i-select>
                </form-item>
                <form-item label="套餐名称：" prop="PackageName" class="form-item-width">
                    <i-input v-model="data.PackageName" placeholder="显示给用户的套餐名称"></i-input>
                </form-item>

                <form-item label="选择机油品牌：" prop="OilBrands" class="form-item-width">
                    <oil-select-list :brands="brands" v-model="data.OilBrands" ref="select"></oil-select-list>
                </form-item>
                <form-item label="填写机油升数：" prop="Volume" class="form-item-width">
                    <i-input v-model="data.Volume"></i-input>
                </form-item>
                <form-item label="套餐价格：" prop="Price" class="form-item-width">
                    <i-input v-model="data.Price"></i-input>
                </form-item>
                <form-item label="结算方式：" prop="SettlementMethod" class="form-item-width">
                    <radio-group v-model="data.SettlementMethod">
                        <radio label="PreSettled"><span>买断制</span></radio>
                        <radio label="ByPeriod"><span>据实结算制</span></radio>
                    </radio-group>
                </form-item>
            </i-form>
            <div slot="footer">
                <i-button type="text" v-on:click="showModal=false">取消</i-button>
                @*<i-button type="primary" :loading="loading" v-on:click="handleSubmit" :disabled="disabled">确认</i-button>*@
            </div>
        </modal>
    </div>
</script>

<script type="text/x-template" id="oil-select">
    <div>
        <row type="flex" justify="space-between" v-bind:align="'middle'">
            <i-col span="7">
                <i-select transfer filterable v-model="brand" placeholder="请选择机油品牌">
                    <i-option :value="item.Brand" :key="item.Brand" v-for="item in options">{{item.Brand}}</i-option>
                </i-select>
            </i-col>
            <i-col span="13">
                <i-select transfer multiple v-model="grades" placeholder="请选择机油等级">
                    <i-option :value="3" key="FullySyntheticOil">全合成</i-option>
                    <i-option :value="2" key="SemiSyntheticOil">半合成</i-option>
                    <i-option :value="1" key="MineralOil">矿物油</i-option>
                </i-select>
            </i-col>
            <i-col span="3">
                <i-button type="ghost" v-on:click="$emit('on-remove')">删除</i-button>
            </i-col>
        </row>
    </div>
</script>

<script type="text/x-template" id="oil-select-list">
    <div>
        <oil-select v-for="(item,index) in list"
                    :brand.sync="list[index].Brand"
                    :grades.sync="list[index].Grades"
                    :brands="brands"
                    :selects="list"
                    :key="list[index].Key"
                    style="margin-bottom:10px;"
                    v-on:on-remove="clickRemove(index)">
        </oil-select>
        <row>
            <i-col span="6">
                <i-button long type="dashed" icon="plus-round" v-on:click="clickAppend">新增机油品牌</i-button>
            </i-col>
        </row>
    </div>
</script>

@section scripts{
    <script type="text/javascript" src="~/Scripts/vue.min.js"></script>
    <script type="text/javascript" src="~/Scripts/iview/iview.min.js"></script>
    <script type="text/javascript" src="~/Content/My97DatePicker/WdatePicker.js"></script>
    <script src="~/Scripts/vue.common.js"></script>
    <script type="text/javascript">
        function formatValue(value) {
            var result = value;
            if (value == "" || value == null || value == undefined) {
                result = "/"
            }
            return result;
        }

        Array.prototype.any = function (callback) {
            var array = this;
            for (var i = 0; i < array.length; i++) {
                var value = array[i];
                if (callback(value, i)) {
                    return true;
                }
            }
            return false;
        }

        Vue.filter('formatValue', formatValue);

        Vue.component('oil-select', {
            template: "#oil-select",
            props: {
                brand: {
                    type: String,
                    default: '',
                },
                grades: {
                    type: Array,
                    default: [],
                },
                brands: {
                    type: Array,
                    default: [],
                },
                selects: {
                    type: Array,
                    default: [],
                }
            },
            watch: {
                "brand": function (value) {
                    var vm = this;
                    vm.$nextTick(function () {
                        vm.grades = [];
                    });
                    vm.$emit('update:brand', value);
                },
                "grades": function (value) {
                    var vm = this;
                    vm.$emit('update:grades', value);
                }
            },
            computed: {
                options: function () {
                    var vm = this;
                    return vm.brands.filter(function (brand) {
                        return vm.brand == brand.Brand || !vm.selects.any(function (select) {
                            return select.Brand == brand.Brand;
                        });
                    });
                }
            },
        });
        Vue.component('oil-select-list', {
            template: "#oil-select-list",
            props: {
                value: {
                    type: Array,
                    default: [],
                },
                brands: {
                    type: Array,
                    default: [],
                }
            },
            data: function () {
                return {
                    list: [],
                    sequence: 0,
                };
            },
            mounted: function () {
                var vm = this;
                vm.list = [];
                if (!vm.value || vm.value.length <= 0) {
                    vm.sequence += 1;
                    vm.list.push({ Brand: '', Grades: [], Key: vm.sequence.toString() });
                }
                else {
                    vm.value.forEach(function (item) {
                        vm.sequence += 1;
                        vm.list.push({ Brand: item.Brand, Grades: item.Grades, Key: vm.sequence.toString() })
                    });
                }
            },
            watch: {
                value: function () {
                    var vm = this;
                    var list = vm.list
                        .filter(function (item) { return !!item.Brand || (!!item.Grades && item.Grades.length > 0); })
                        .map(function (item) { return { Brand: item.Brand, Grades: item.Grades.sort() }; })
                        .sort(function (x, y) { return x.Brand > y.Brand });

                    var value = vm.value
                        .map(function (item) { return { Brand: item.Brand, Grades: item.Grades.sort() }; })
                        .sort(function (x, y) { return x.Brand > y.Brand });

                    var listStr = JSON.stringify(list), valueStr = JSON.stringify(value);

                    if (listStr !== valueStr) {
                        if (!vm.value || !(vm.value instanceof Array) || vm.value.length <= 0) {
                            vm.sequence += 1;
                            vm.list = [{ Brand: '', Grades: [], Key: vm.sequence.toString() }];
                        } else {
                            vm.list = [];
                            vm.value.forEach(function (item) {
                                vm.sequence += 1;
                                vm.list.push({ Brand: item.Brand, Grades: item.Grades, Key: vm.sequence.toString() })
                            });
                        }
                    }
                },
                list: function () {
                    var vm = this;

                    var list = vm.list
                        .filter(function (item) { return !!item.Brand || (!!item.Grades && item.Grades.length > 0); })
                        .map(function (item) { return { Brand: item.Brand, Grades: item.Grades.sort() }; })
                        .sort(function (x, y) { return x.Brand > y.Brand });

                    var value = vm.value
                        .map(function (item) { return { Brand: item.Brand, Grades: item.Grades.sort() }; })
                        .sort(function (x, y) { return x.Brand > y.Brand });

                    var listStr = JSON.stringify(list), valueStr = JSON.stringify(value);
                    if (listStr !== valueStr) {
                        vm.$emit('input', list);
                    }
                }
            },
            methods: {
                clickRemove: function (index) {
                    var vm = this;
                    vm.list.splice(index, 1);
                },
                clickAppend: function () {
                    var vm = this;
                    if (vm.list.length < vm.brands.length) {
                        vm.sequence += 1;
                        vm.list.push({ Brand: '', Grades: [], Key: vm.sequence.toString() });
                    } else {
                        vm.$Message.warning("机油品牌数量已达上限");
                    }
                },
            },
        });
        Vue.component('form-modal', {
            template: '#form-modal',
            props: {
                show: {
                    type: Boolean,
                    default: false,
                },
                packageid: {
                    type: Number,
                    default: 0,
                },
                users: {
                    type: Array,
                    default: [],
                },
                brands: {
                    type: Array,
                    default: [],
                }
            },
            data: function () {
                return {
                    showModal: false,
                    loading: false,
                    disabled: false,
                    data: {
                        PKID: 0,
                        VipUserId: '00000000-0000-0000-0000-000000000000',
                        PackageName: '',
                        Price: '',
                        Volume: '',
                        OilBrands: [],
                        SettlementMethod: '',
                        OilGrades: []
                    },
                    rules: {
                        VipUserId: [{
                            validator: function (rule, value, callback) {
                                if (value === '' || value === '00000000-0000-0000-0000-000000000000') {
                                    callback(new Error('所属大客户是必选的'));
                                    return;
                                }
                                callback();
                            },
                            trigger: 'change',
                        }],
                        PackageName: [{ required: true, message: "套餐名称是必填的", trigger: 'blur' }],
                        Price: [{ required: true, message: "价格不能为空", trigger: 'blur' }, {
                            validator: function (rule, value, callback) {
                                if (!/^\d+(\.\d+)?$/.test(value.trim())) {
                                    callback(new Error('价格必须是大于0的数字'));
                                    return;
                                }
                                callback();
                            },
                            trigger: 'blur',
                        }],
                        Volume: [{
                            validator: function (rule, value, callback) {
                                if (value && !/^\d+(\.\d+)?$/.test(value.trim())) {
                                    callback(new Error('升数可不填或者必须是大于0的数字'));
                                    return;
                                }
                                callback();
                            },
                            trigger: 'blur',
                        }],
                        SettlementMethod: [{ required: true, message: "结算方式不能为空", trigger: 'blur' }],
                    }
                };
            },
            watch: {
                show: function (value) {
                    var vm = this;
                    if (value) {
                        vm.getVipBaoYangPackageById(vm.packageid);
                    }
                    if (!value && vm.showModal) {
                        vm.showModal = false;
                    }
                    vm.$emit('update:show', value);
                },
                showModal: function (value) {
                    var vm = this;
                    if (value && !vm.show) {
                        vm.show = true;
                    } else if (!value) {
                        vm.handleReset();
                        if (vm.show) {
                            vm.show = false;
                        }
                    }
                }
            },
            methods: {
                getVipBaoYangPackageById: function (pkid) {
                    var vm = this;
                    if (pkid > 0) {
                        vm.disabled = true;
                        $.get("SelectVipBaoYangPackageByPKID", { pkid: pkid }, function (result) {
                            vm.data.PKID = pkid;
                            vm.data.VipUserId = result.VipUserId.toUpperCase();
                            vm.data.PackageName = result.PackageName;
                            vm.data.Price = result.Price;
                            vm.data.Volume = result.Volume;
                            vm.data.OilBrands = result.Brands;
                            vm.data.SettlementMethod = result.SettlementMethod;
                            vm.showModal = true;
                        });
                    }
                    else {
                        vm.disabled = false;

                        vm.showModal = true;
                    }
                },
                submit: function () {
                    var vm = this;
                    var formData = {
                        PKID: vm.data.PKID,
                        VipUserId: vm.data.VipUserId,
                        PackageName: vm.data.PackageName,
                        Price: vm.data.Price,
                        Volume: vm.data.Volume,
                        Brands: vm.data.OilBrands,
                        SettlementMethod: vm.data.SettlementMethod,
                    };
                    var content = formData.PKID > 0 ? '确认修改此套餐?' : '确认添加此套餐?';
                    vm.$Modal.confirm({
                        title: "操作确认",
                        content: content,
                        loading: true,
                        onOk: function () {
                            $.post("InsertVipBaoYangPackage", formData, function (result) {
                                if (result.status) {
                                    vm.$Message.info("操作成功！");
                                    vm.showModal = false;
                                    vm.$emit('submit', true);
                                } else {
                                    vm.$Message.warning("操作失败！" + (result.msg || ""));
                                    vm.$emit('submit', false);
                                }
                            }).complete(function () {
                                vm.$Modal.remove();
                                vm.loading = false;
                            });
                        },
                        onCancel: function () {
                            vm.loading = false;
                        }
                    });
                },
                handleReset: function () {
                    var vm = this;
                    vm.data.PKID = 0;
                    vm.data.VipUserId = '00000000-0000-0000-0000-000000000000';
                    vm.data.PackageName = '';
                    vm.data.Price = '';
                    vm.data.Volume = '';
                    vm.data.OilBrands = [];
                    vm.data.OilGrades = [];
                    vm.data.SettlementMethod = '';
                    vm.$refs['packageForm'].resetFields();
                },
                handleSubmit() {
                    var vm = this;
                    vm.loading = true;
                    vm.$refs['packageForm'].validate(function (valid) {
                        if (valid) {
                            vm.submit();
                            return;
                        }
                        vm.loading = false;
                    });
                },
            }
        });

        var vue = new Vue({
            el: "#div",
            data: {
                pager: {
                    total: 0,
                    pages: 0,
                    currentPage: 1,
                    size: 20,
                    inputPage: 0,
                },
                packages: [],
                brands: [],
                loading: false,
                list: [],
                sizes: [5, 10, 20, 40, 50, 100, 200],
                filterCondition: {
                    vipUserId: "00000000-0000-0000-0000-000000000000",
                    pid: "",
                    mobilePhone: "",
                    batchCode: ""
                },
                showdialog: false,
                data: {
                    vipUserId: "00000000-0000-0000-0000-000000000000",
                    packagename: "",
                    price: "",
                    oilBrands: "",
                    volume: "",
                    SettlementMethod: ""
                },
                options: [],
                packageId: 0,
                show: false,
                users: [],
                brands: [],
            },
            watch: {
                "pager.total": function () {
                    var self = this;
                    self.pager.pages = Math.ceil(self.pager.total / self.pager.size);
                },
                "pager.size": function () {
                    var self = this;
                    if (self.pager.size <= 0) {
                        self.pager.size = 1;
                        return;
                    }
                    if (self.pager.size > 200) {
                        self.pager.size = 200;
                        return;
                    }
                    self.pager.pages = Math.ceil(self.pager.total / self.pager.size);
                    this.Init();
                },
                "pager.currentPage": function () {
                    var self = this;
                    if (self.pager.currentPage <= 0) {
                        self.pager.currentPage = 1;
                        return;
                    }
                    if (self.pager.pages > 1 && self.pager.currentPage > self.pager.pages) {
                        self.pager.currentPage = self.pager.pages;
                        return;
                    }
                    self.Init();
                },
            },
            created: function () {
                this.GetAllBaoYangPackageUser();
                this.GetOilBrands();
                this.Init();
            },
            methods: {
                Init: function () {
                    var self = this;
                    //self.loading = true;
                    //self.list = [];
                    $.get("SelectOperationRecord", {
                        batchcode: self.filterCondition.batchCode, pid: self.filterCondition.pid, vipUserId: self.filterCondition.vipUserId, mobilePhone: self.filterCondition.mobilePhone,
                        pageIndex: self.pager.currentPage, pageSize: self.pager.size
                    }, function (result) {
                        //self.loading = false;
                        self.list = result;
                        self.pager.total = result.length > 0 ? result[0].Total : 0;
                    });
                },
                GetAllBaoYangPackageUser: function () {
                    var vm = this;
                    $.get("GetAllBaoYangPackageUser", function (result) {
                        vm.packages = result || [];
                        vm.users = vm.packages.map(function (package) {
                            return { VipUserId: package.VipUserId.toUpperCase(), VipUserName: package.VipUserName };
                        });
                    });
                },
                GetOilBrands: function () {
                    var vm = this;
                    $.get("GetOilBrands", function (result) {
                        vm.brands = (result || []).map(function (brand) { return { Brand: brand } });
                    });
                },
                showDetail: function (pkid) {
                    var vm = this;
                    vm.packageId = pkid;
                    vm.show = false;
                    vm.$nextTick(function () {
                        vm.show = true;
                    });
                },
            },
        });
        //setInterval(function () {
        //    vue.Init();
        //}, 5000);
    </script>
}