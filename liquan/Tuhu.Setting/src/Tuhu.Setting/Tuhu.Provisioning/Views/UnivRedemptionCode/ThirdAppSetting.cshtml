
@{
    ViewBag.Title = "第三方OpenApp配置【这里只提供大客户来源的编辑】";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}
<head>
    <meta charset="utf-8">
    <title>iview example</title>
    <link href="~/Content/iview/iview.css" rel="stylesheet" />
    <script src="~/Scripts/vue.min.js"></script>
    <script src="~/Scripts/iview/iview.min.js"></script>
    <style>
        .ivu-table .demo-table-info-row td {
            background-color: #2db7f5;
            color: #fff;
        }

        .ivu-table .demo-table-error-row td {
            background-color: #ff6600;
            color: #fff;
        }

        .ivu-table td.demo-table-info-column {
            background-color: #2db7f5;
            color: #fff;
        }

        .ivu-table .demo-table-info-cell-name {
            background-color: #2db7f5;
            color: #fff;
        }

        .ivu-table .demo-table-info-cell-age {
            background-color: #ff6600;
            color: #fff;
        }

        .ivu-table .demo-table-info-cell-address {
            background-color: #187;
            color: #fff;
        }

        [v-cloak] {
            display: none;
        }
    </style>
</head>

@section title{
    <a href="/UnivRedemptionCode/GroupSetting">套餐分组配置</a>&nbsp;&nbsp;&gt;&nbsp;&nbsp;@ViewBag.Title
}
<body>

    <div id="app" style="margin-left:10px;margin-right:10px;" v-cloak>
        <br />
        <i-input v-model="searchKey" placeholder="OpenApp名称" style="width:200px;"></i-input> <i-button type="primary" shape="circle" icon="ios-search" v-on:click="GetDataList">查询</i-button>
        <i-Button type="primary" v-on:click="editSetting()">新增</i-Button>
        <br /><br />
        @*<i-table :data="tabledata" :columns="tableColumns" :loading="loading"></i-table>
        <div style="margin: 10px;overflow: hidden">
            <div style="float: right;">
                <Page :total="totalCount" :current="currentPage" :page-size="pageSize" show-total v-on:on-change="changePage"></Page>
            </div>
        </div>*@
        <table class="table table-striped table-bordered table-hover dataTables-example" style="margin-top:20px">
            <thead>
                <tr>
                    <th>AppId</th>
                    <th>AppName</th>
                    <th>OrderChannel</th>
                    <th>手机号</th>
                    <th>用户名称</th>
                    <th>公司名称</th>
                    <th>创建时间</th>
                    <th>操作</th>
                </tr>
            </thead>
            <tr v-for="item in list">
                <td>{{item.AppId}}</td>
                <td>{{item.AppName}}</td>
                <td>{{item.OrderChannel}}</td>
                <td>{{item.Mobile}}</td>
                <td>{{item.CompanyUserName}}</td>
                <td>{{item.CompanyName}}</td>
                <td>{{item.CreateTimeString}}</td>
                <td>
                    <a href="javascript:void(0)" v-on:click="editSetting(item)" v-bind:disabled="item.OrderChannel!='大客户'">编辑</a>
                </td>
            </tr>
        </table>
        <div style="margin-top:20px;">
            <span>
                每页显示:
                <select v-model="pager.size">
                    <option v-for="size in sizes" v-bind:value="size">{{size}}</option>
                </select>
                条
            </span>
            <span>
                <button type="button" v-on:click="pager.currentPage=1" v-bind:disabled="pager.currentPage==1">首页</button>
                <button type="button" v-on:click="pager.currentPage-=1" v-bind:disabled="pager.currentPage==1">上一页</button>
                <button type="button" v-on:click="pager.currentPage+=1" v-bind:disabled="pager.currentPage==pager.pages">下一页</button>
                <button type="button" v-on:click="pager.currentPage=pager.pages" v-bind:disabled="pager.currentPage==pager.pages">尾页</button>
            </span>
            <span style="float:right">
                <span>当前第{{pager.currentPage}}页/共{{pager.pages}}页&nbsp;&nbsp;转到<input style="width:30px" type="text" v-model="pager.inputPage">页</span>
                <button type="button" v-on:click="pager.currentPage=pager.inputPage" v-bind:disabled="pager.inputPage<=0 || pager.inputPage>pager.pages">确定</button>
            </span>
        </div>
        <div>
            <Modal title="添加OpenApp配置" v-model="showModal" width="600"
                   :mask-closable="false"
                   v-on:on-ok="saveSetting"
                   v-on:on-cancel="cancelSetting">
                <row type="flex" justify="space-around" v-bind:align="'middle'" class="modal-row">
                    <i-col span="5">
                        <div class="modal-label">AppId:</div>
                    </i-col>
                    <i-col span="16">
                        <i-input v-model="editData.AppId" readonly="readonly" placeholder="AppId由服务端自动生成" style="color:red"></i-input>
                    </i-col>
                    <i-col span="5">
                        <div class="modal-label">AppSecret:</div>
                    </i-col>
                    <i-col span="16">
                        <i-input v-model="editData.AppSecret" readonly="readonly" placeholder="AppSecret由服务端自动生成"></i-input>
                    </i-col>
                    <i-col span="5">
                        <div class="modal-label">第三方名称:</div>
                    </i-col>
                    <i-col span="16">
                        <i-input v-model="editData.AppName" placeholder="第三方app名称"></i-input>
                    </i-col>
                    <i-col span="5">
                        <div class="modal-label">私匙:</div>
                    </i-col>
                    <i-col span="16">
                        <i-input v-model="editData.PrivateKey" placeholder="私匙"></i-input>
                    </i-col>
                    <i-col span="5">
                        <div class="modal-label">获取大客户用户地址:</div>
                    </i-col>
                    <i-col span="16">
                        <i-input v-model="editData.BigCustomerUrlInstanse.GetUserUrl" placeholder="获取大客户用户地址"></i-input>
                    </i-col>
                    <i-col span="5">
                        <div class="modal-label">核销通知大客户地址:</div>
                    </i-col>
                    <i-col span="16">
                        <i-input v-model="editData.BigCustomerUrlInstanse.VerifyUrl" placeholder="核销通知大客户地址"></i-input>
                    </i-col>
                    <i-col span="5">
                        <div class="modal-label">选择订单来源:</div>
                    </i-col>
                    <i-col span="16">
                        <i-select filterable style="width:70%" v-model="editData.OrderChannel">
                            <i-option v-for="channel in OrderChannels" :value="channel" :key="channel">{{channel}}</i-option>
                        </i-select>
                    </i-col>
                    <i-col span="5">
                        <div class="modal-label">选择签名类型:</div>
                    </i-col>
                    <i-col span="16">
                        <i-select filterable style="width:70%" v-model="editData.SignType">
                            <i-option v-for="sType in SignTypes" :value="sType" :key="sType">{{sType}}</i-option>
                        </i-select>
                    </i-col>
                    <i-col span="5">
                        <div class="modal-label">选择加密类型:</div>
                    </i-col>
                    <i-col span="16">
                        <i-select filterable style="width:70%" v-model="editData.EncryptType">
                            <i-option v-for="eType in EncryptTypes" :value="eType" :key="eType">{{eType}}</i-option>
                        </i-select>
                    </i-col>
                    <i-col span="5">
                        <div class="modal-label">选择大客户状态:</div>
                    </i-col>
                    <i-col span="16">
                        <i-select filterable style="width:70%" v-model="editData.BigCustomerStatus">
                            <i-option v-for="bcStatus in BigCustomerStatusList" :value="bcStatus.Id" :key="bcStatus.Id">{{bcStatus.Name}}</i-option>
                        </i-select>
                    </i-col>
                    <i-col span="5">
                        <div class="modal-label">选择大客户公司:</div>
                    </i-col>
                    <i-col span="16">
                        <i-select filterable style="width:70%" v-model="editData.CompanyId">
                            <i-option v-for="bcStatus in companyOptions" v-bind:value="bcStatus.id">{{bcStatus.text}}</i-option>
                        </i-select>
                    </i-col>
                    <i-col span="5">
                        <div class="modal-label">选择大客户用户:</div>
                    </i-col>
                    <i-col span="16">
                        <i-select filterable style="width:70%" v-model="editData.CompanyUserId">
                            <i-option v-for="bcStatus in accountOptions" v-bind:value="bcStatus.id">{{bcStatus.text}}</i-option>
                        </i-select>
                    </i-col>

                </row>
            </Modal>
        </div>

    </div>
</body>
@section scripts{
    <script>
        var vue = new Vue({
            el: '#app',
            data: {
                list: [],
                pager: {
                    total: 0,
                    pages: 0,
                    currentPage: 1,
                    size: 20,
                    inputPage: 0,
                },
                sizes: [5, 10, 20, 40, 50, 100, 200],
                editData: {
                    AppId: "",
                    AppName: "",
                    AppSecret: "",
                    BigCustomerStatus: "",
                    BigCustomerUrl: "",
                    CompanyId: 0,
                    CompanyUserId: "",
                    EncryptType: "",
                    InputCharset: "",
                    OrderChannel: "",
                    PrivateKey: "",
                    SignType: "",
                    BigCustomerUrlInstanse: {
                        GetUserUrl: '',
                        VerifyUrl: ''
                    }
                },
                companyOptions: [],
                accountOptions: [],
                showModal: false,
                searchKey: '',
                loading: false,
                EncryptTypes: [
                    "RSA"
                ],
                SignTypes: [
                    "Sha256"
                ],
                OrderChannels: [
                    "大客户"
                ],
                BigCustomerStatusList: [
                    { Id: "Informal", Name: "测试" },
                    { Id: "formal", Name: "正式" }
                ]
            },
            created: function () {
                this.GetDataList();
                this.GetAllVipCompany();
            },
            watch: {
                "pager.total": function () {
                    var self = this;
                    var pager = self.pager;
                    pager.pages = Math.ceil(pager.total / pager.size);
                },
                "pager.size": function () {
                    var self = this;
                    if (self.pager.size <= 0) {
                        self.pager.size = 1;
                        return;
                    }
                    if (self.pager.size > 200) {
                        self.pager.size = 200;
                        return;
                    }
                    self.pager.pages = Math.ceil(self.pager.total / self.pager.size);
                    this.load();
                },
                "pager.currentPage": function () {
                    var self = this;
                    if (self.pager.currentPage <= 0) {
                        self.pager.currentPage = 1;
                        return;
                    }
                    if (self.pager.pages > 0 && self.pager.currentPage > self.pager.pages) {
                        self.pager.currentPage = self.pager.pages;
                        return;
                    }
                    self.GetDataList();
                },
                "editData.CompanyId": function () {
                    var self = this;
                    self.accountOptions = [];
                    self.SelectVipUserByCompanyId();
                }
            },
            methods: {
                GetDataList() {
                    var self = this;

                    $.ajax({
                        url: "/UnivRedemptionCode/GetThirdAppSettings",
                        type: "POST",
                        data: {
                            PageIndex: self.pager.currentPage,
                            PageSize: self.pager.size,
                            KeyWord: self.searchKey
                        },
                        success: function (data) {
                            self.pager.total = data.total;
                            self.list = data.result || [];
                        },
                        error: function () {
                            alert("服务端异常！");
                            self.list = [];
                        }
                    });
                },
                changePage(page) {
                    // The simulated data is changed directly here, and the actual usage scenario should fetch the data from the server
                    this.currentPage = page;
                    this.GetDataList();
                },
                GetAllVipCompany() {
                    var self = this;
                    $.get("/BeautyServicePackage/GetAllVipCompany", function (data) {
                        self.companyOptions = [{
                            id: 0,
                            text: '-请选择-'
                        }];
                        (data || []).forEach(function (v) {
                            self.companyOptions.push({
                                id: v.Id,
                                text: v.Name
                            })
                        })
                    })
                },
                SelectVipUserByCompanyId() {
                    var self = this;
                    self.accountOptions = [{
                        id: '00000000-0000-0000-0000-000000000000',
                        text: '-请选择-'
                    }];
                    if (self.editData.CompanyId > 0) {
                        $.get("/BeautyServicePackage/GetUsersByCompanyId", { companyId: self.editData.CompanyId }, function (data) {
                            (data || []).forEach(function (v) {
                                self.accountOptions.push({
                                    id: v.UserId,
                                    text: v.UserMobile
                                })
                            })
                        })
                    }
                },
                editSetting(item) {
                    var self = this;
                    self.editData.CompanyUserId = "00000000-0000-0000-0000-000000000000";
                    self.accountOptions = [{
                        id: '00000000-0000-0000-0000-000000000000',
                        text: '-请选择-'
                    }];
                    if (item) {
                        self.showModal = true;
                        $.post("/UnivRedemptionCode/GetThirdAppSettingsDetail", { pkid: item.Id }, function (data) {
                            (data.accountUsers || []).forEach(function (v) {
                                self.accountOptions.push({
                                    id: v.UserId,
                                    text: v.UserMobile
                                })
                            })
                            self.editData.Id = data.result.Id;
                            self.editData.AppId = data.result.AppId;
                            self.editData.AppName = data.result.AppName;
                            self.editData.AppSecret = data.result.AppSecret;
                            self.editData.BigCustomerStatus = data.result.BigCustomerStatus;
                            self.editData.BigCustomerUrl = data.result.BigCustomerUrl;
                            self.editData.CompanyId = data.result.CompanyId;                           
                            self.editData.EncryptType = data.result.EncryptType;
                            self.editData.InputCharset = data.result.InputCharset;
                            self.editData.OrderChannel = data.result.OrderChannel;
                            self.editData.PrivateKey = data.result.PrivateKey;
                            self.editData.SignType = data.result.SignType;
                            self.editData.BigCustomerUrlInstanse.GetUserUrl = data.result.BigCustomerUrlInstanse.GetUserUrl;
                            self.editData.BigCustomerUrlInstanse.VerifyUrl = data.result.BigCustomerUrlInstanse.VerifyUrl;
                            setTimeout(function () {
                                self.editData.CompanyUserId = data.result.CompanyUserId;
                            }, 500);
                        });
                    } else {
                        self.editData.AppId = "";
                        self.editData.AppName = "";
                        self.editData.AppSecret = "";
                        self.editData.BigCustomerStatus = "";
                        self.editData.BigCustomerUrl = "";
                        self.editData.CompanyId = "";
                        self.editData.CompanyUserId = "";
                        self.editData.EncryptType = "";
                        self.editData.InputCharset = "";
                        self.editData.OrderChannel = "";
                        self.editData.PrivateKey = "";
                        self.editData.SignType = "";
                        self.editData.BigCustomerUrlInstanse.GetUserUrl = "";
                        self.editData.BigCustomerUrlInstanse.VerifyUrl = "";
                        self.showModal = true;
                    }
                },
                saveSetting() {
                    var self = this;
                    var name = self.editData.AppName;
                    if (!name) {
                        self.$Notice.warning({
                            title: '第三方名称:不能为空！',
                            desc: '第三方名称:不能为空！'
                        });
                        return;
                    }
                    var orderChannel = self.editData.OrderChannel;
                    if (!orderChannel) {
                        self.$Notice.warning({
                            title: '订单来源:不能为空！',
                            desc: '订单来源:不能为空！'
                        });
                        return;
                    }
                    var signType = self.editData.SignType;
                    if (!signType) {
                        self.$Notice.warning({
                            title: '签名类型:不能为空！',
                            desc: '签名类型:不能为空！'
                        });
                        return;
                    }
                    var encryptType = self.editData.EncryptType;
                    if (!encryptType) {
                        self.$Notice.warning({
                            title: '加密类型:不能为空！',
                            desc: '加密类型:不能为空！'
                        });
                        return;
                    }
                    var bigCustomerStatus = self.editData.BigCustomerStatus;
                    if (!bigCustomerStatus) {
                        self.$Notice.warning({
                            title: '大客户状态:不能为空！',
                            desc: '大客户状态:不能为空！'
                        });
                        return;
                    }
                    if (self.editData.CompanyId <= 0) {
                        self.$Notice.warning({
                            title: '大客户公司:不能为空！',
                            desc: '大客户公司:不能为空！'
                        });
                        return;
                    }
                    if (self.editData.CompanyUserId === "00000000-0000-0000-0000-000000000000") {
                        self.$Notice.warning({
                            title: '大客户用户:不能为空！',
                            desc: '大客户用户:不能为空！'
                        });
                        return;
                    }
                    $.ajax({
                        url: "/UnivRedemptionCode/SaveThirdAppSetting",
                        type: "POST",
                        async: true,
                        data: { model: self.editData },
                        success: function (data) {
                            if (data.result) {
                                window.location.href = '/UnivRedemptionCode/ThirdAppSetting';
                            }
                            else {
                                alert(data.msg);
                            }
                        },
                        error: function () {
                            alert("服务端异常！");
                        }
                    });
                },
                cancelSetting() {
                    var self = this;
                },
                removeSetting(item) {
                    var self = this;
                    if (!confirm("确认要删除该条分组配置？")) {
                        return;
                    }
                    $.ajax({
                        url: "/UnivRedemptionCode/DeleteThirdAppSetting",
                        type: "POST",
                        //async: false,
                        data: { pkid: item.Id },
                        success: function (data) {
                            if (data.result) {
                                self.GetDataList();
                            }
                            else {
                                alert(data.msg);
                            }
                        },
                        error: function () {
                            alert("服务端异常！");
                        }
                    });

                },
            },
        });


    </script>
}