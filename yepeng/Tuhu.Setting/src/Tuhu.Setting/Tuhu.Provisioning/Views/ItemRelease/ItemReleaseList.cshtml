@using Tuhu.Provisioning.DataAccess.Entity;
@using Tuhu.Provisioning;
@model Tuhu.Component.Common.Models.ListModel<ReleaseItemModel>
    @{
        Layout = null;
        var selectModel = ViewBag.Select as ReleaseItemModel;
    }

    @functions
                                               {
        public string GetStatusText(short status)
        {
            string statustext = "<font style='color:red;'>进行中</font>";
            switch (status)
            {
                case 1:
                    statustext = "<font style='color:green;'>已完成</font>";
                    break;
                case 2:
                    statustext = "<font style='color:green;'>取消发布</font>";
                    break;
            }
            return statustext;
        }
    }



    <table data-count="@Model.Pager.TotalItem" width="100%">
        <tr>
            <th>发布项</th>
            <th>发布内容</th>
            <th>开发者</th>
            <th>测试者</th>
            <th>验收者</th>
            <th>发布时间</th>
            <th>发布状态</th>
            <th>操作</th>
            <th>取消发布原因</th>
        </tr>
        @foreach (var item in Model.Source)
        {

            var json = new
            {
                PKID = item.PKID,
                //Name = "<label>Tuhu.Service.ThirdParty<input type=checkbox value=Tuhu.Service.ThirdParty/></label>" +
                //"<label>Tuhu.Service.Member< input type = checkbox value = Tuhu.Service.Member checked= true /></label>",
                Name = item.Name ?? "",
                Status = item.Status,
                Content = item.Content ?? "",
                Developer = item.Developer ?? "",
                Tester = item.Tester ?? "",
                Checker = item.Checker ?? "",
                ReleaseTime = item.ReleaseTime == null ? "" : item.ReleaseTime.Value.ToString("yyyy-MM-dd"),
                IsValid = item.IsValid
            };
            <tr>
                <td>@item.Name</td>
                <td>@item.Content</td>
                <td>@(string.IsNullOrWhiteSpace(item.Developer) ? "-" : item.Developer)</td>
                <td>@(string.IsNullOrWhiteSpace(item.Tester) ? "-" : item.Tester)</td>
                <td>@(string.IsNullOrWhiteSpace(item.Checker) ? "-" : item.Checker)</td>
                <td>@(item.ReleaseTime == null ? "-" : item.ReleaseTime.Value.ToString("yyyy-MM-dd"))</td>
                <td>@Html.Raw(GetStatusText(item.Status))</td>

                <td>
                    @if (item.Status == 0)
                    {
                        <a href="javascript:void(0)" name="operate" data-pkid="@item.PKID" data-status="1">发布完成</a>
                            <span>|</span>
                            <a href="javascript:void(0)" name="operate" data-pkid="@item.PKID" data-status="2">取消发布</a>
                            <span>|</span>
                            <a href="javascript:void(0)" onclick="Func.UpdateOrAdd('@(Newtonsoft.Json.JsonConvert.SerializeObject(json))')">修改</a>
                            <span>|</span>
                            <a href="javascript:void(0)" onclick="Func.Delete('@item.PKID')">删除</a>
                    }


                </td>
                <td>@Html.Raw(item.Reason)</td>

            </tr>
        }

    </table>
    @Html.Pager(Model.Pager, true, id => Url.Action("ReleaseItemList", new { Name = selectModel.Name, Content = selectModel.Content, Developer = selectModel.Developer, Tester = selectModel.Tester, Checker = selectModel.Checker, ReleaseTime = selectModel.ReleaseTime, IsValid = selectModel.IsValid, Status = selectModel.Status, pageSize = Model.Pager.PageSize, pageIndex = id }))


