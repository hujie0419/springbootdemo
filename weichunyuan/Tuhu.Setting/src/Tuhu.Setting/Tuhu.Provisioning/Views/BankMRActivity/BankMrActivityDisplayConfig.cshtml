@{
    ViewBag.Title = "银行活动展示列表";
    //Layout = "~/Views/Shared/_LayoutNew.cshtml";
    var dev = System.Configuration.ConfigurationManager.AppSettings["env"] == "dev" ? 1 : 0;
}
@section head{
    <link href="~/css/bankMRActivity.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/iview/iview.css" rel="stylesheet" />
    <style type="text/css">
        .vertical-group .floatCenter {
            margin-left: 30%;
        }

        [v-cloak] {
            display: none;
        }
    </style>
}
<div id="APP" v-cloak>
    <br />
    <div>
        <i-select v-model="active" style="width:200px;">
            <i-option value="-1">全部</i-option>
            <i-option value="1">启用</i-option>
            <i-option value="0">禁用</i-option>
        </i-select>
        <i-button type="info" v-on:click="Search()">查询</i-button>
        <i-button type="info" v-on:click="Edit()">新建</i-button>
    </div>
    <br />
    <i-table :data="tableDataList"
             :columns="tableColumns"
             stripe>
    </i-table>
    <div style="margin: 10px; overflow: hidden">
        <div style="float: right;">
            <Page :total="totalCount" :current="currentPage" :page-size="pageSize" show-total v-on:on-change="ChangePage"></Page>
        </div>
    </div>
    <div>
        <Modal title="银行活动展示列表配置" v-model="detailModel.showModal" width="600"
               :mask-closable="false"
               v-on:on-ok="SaveSetting"
               v-on:on-cancel="CancelSetting">
            <row type="flex" justify="space-around" v-bind:align="'middle'" class="modal-row">
                <i-col span="3">
                    <div class="modal-label">标题:</div>
                </i-col>
                <i-col span="20">
                    <i-input v-model="detailModel.Title" placeholder="标题"></i-input>
                </i-col>
                <i-col span="3">
                    <div class="modal-label">描述:</div>
                </i-col>
                <i-col span="20">
                    <i-input v-model="detailModel.Description" placeholder="描述" type="textarea" :rows="5"></i-input>
                </i-col>
                <i-col span="3">
                    <div class="modal-label">APP跳转:</div>
                </i-col>
                <i-col span="20">
                    <i-input v-model="detailModel.AppJumpUrl" placeholder="APP跳转"></i-input>
                </i-col>
                <i-col span="3">
                    <div class="modal-label">H5跳转:</div>
                </i-col>
                <i-col span="20">
                    <i-input v-model="detailModel.H5JumpUrl" placeholder="H5跳转"></i-input>
                </i-col>
                <i-col span="3">
                    <div class="modal-label">上传图片:</div>
                </i-col>
                <i-col span="20">
                    <img :src="detailModel.ImageUrl" style="width:200px;height:100px;" /><i-input v-model="detailModel.ImageUrl" readonly="true" placeholder="URL"></i-input>
                    <Upload action="/BeautyYearCardConfig/UploadBeautyYearCardImage"
                            :format="['jpg','jpeg','png']"
                            :on-format-error="handleFormatError"
                            :max-size="10000"
                            :on-exceeded-size="handleMaxSize"
                            :on-success="handleSuccess"
                            :show-upload-list="false">
                        <i-Button type="ghost" icon="ios-cloud-upload-outline">上传</i-Button>
                    </Upload>
                </i-col>
                <i-col span="3">
                    <div class="modal-label">展示开始时间:</div>
                </i-col>
                <i-col span="20">
                    <Date-Picker v-model="detailModel.DisplayBeginTime" type="datetime" format="yyyy-MM-dd HH:mm" placeholder="展示开始时间" style="width: 150px"></Date-Picker>
                </i-col>
                <i-col span="3">
                    <div class="modal-label">展示结束时间:</div>
                </i-col>
                <i-col span="20">
                    <Date-Picker v-model="detailModel.DisplayEndTime" type="datetime" format="yyyy-MM-dd HH:mm" placeholder="展示结束时间" style="width: 150px"></Date-Picker>
                </i-col>
                <i-col span="3">
                    <div class="modal-label">排序:</div>
                </i-col>
                <i-col span="20">
                    <i-input v-model="detailModel.Sort" placeholder="排序"></i-input>
                </i-col>
                <i-col span="3">
                    <div class="modal-label">银行活动Id:</div>
                </i-col>
                <i-col span="20">
                    <i-input v-model="detailModel.ActivityId" placeholder="银行活动Id"></i-input>
                </i-col>
                <i-col span="3">
                    <div class="modal-label">是否生效:</div>
                </i-col>
                <i-col span="20">
                    <Radio-Group v-model="detailModel.IsActive">
                        <Radio :label=1>
                            <span>是</span>
                        </Radio>
                        <Radio :label=0>
                            <span>否</span>
                        </Radio>
                    </Radio-Group>
                </i-col>
            </row>
        </Modal>
    </div>
</div>





@section scripts{
    <script type="text/javascript" src="~/Scripts/vue.min.js"></script>
    <script type="text/javascript" src="~/Scripts/iview/iview.min.js"></script>
    <script type="text/javascript">
        var vm = new Vue({
            el: '#APP',
            data() {
                return {
                    tableDataList: this.GetDataList(),
                    tableColumns: [
                        {
                            title: 'PKID',
                            key: 'PKID',
                        },
                        {
                            title: '标题',
                            key: 'Title',
                        },
                        {
                            title: '展示开始时间',
                            key: 'DisplayBeginTimeString'
                        },
                        {
                            title: '展示结束时间',
                            key: 'DisplayEndTimeString'
                        },
                        {
                            title: '排序',
                            key: 'Sort'
                        },
                        {
                            title: '是否启用',
                            key: 'IsActive',
                            render: (h, p) => {
                                if (p.row.IsActive) {
                                    return "是";
                                }
                                else {
                                    return "否";
                                }
                            }
                        },
                        {
                            title: '创建人',
                            key: 'CreatedUser'
                        },
                        {
                            title: '操作',
                            key: 'action',
                            width: 260,
                            align: 'center',
                            render: (h, params) => {
                                return h('div',
                                    [
                                        h('Button',
                                            {
                                                props: {
                                                    type: 'primary',
                                                    size: 'small'
                                                },
                                                style: {
                                                    marginRight: '5px'
                                                },
                                                on: {
                                                    click: () => {
                                                        this.Edit(params.index);
                                                    }
                                                }
                                            },
                                            '编辑'),
                                    ]);
                            }
                        }
                    ],
                    currentPage: 1,
                    pageSize: 10,
                    detailModel: {
                        showModal: false,
                        PKID: '',
                        ActivityId: '',
                        Title: '',
                        Description: '',
                        AppJumpUrl: '',
                        H5JumpUrl: '',
                        ImageUrl: '',
                        DisplayBeginTime: '',
                        DisplayEndTime: '',
                        Sort: '',
                        IsActive: 0,
                    },
                    provinceDatas: [],
                    cityDatas: [],
                    areaData: [],
                    active: "-1",
                }
            },
            mounted: function () {
                this.getProvinceDatas();
            },
            methods: {
                Search() {
                    this.tableDataList = this.GetDataList();
                },
                GetDataList() {
                    var resultData = [];
                    var _this = this;
                    var pageindex = _this.currentPage;
                    if (!pageindex) {
                        pageindex = 1;
                    }
                    var pagesize = _this.pageSize;
                    if (!pagesize) {
                        pagesize = 10;
                    }
                    var active1 = _this.active;
                    console.log(active1);
                    if (!active1) {
                        active1 = "-1";
                    }
                    var postData = {
                        pageIndex: pageindex,
                        pageSize: pagesize,
                        active: active1
                    };
                    $.ajax({
                        url: "/BankMRActivity/GetBankMrActivityDisplayConfigs",
                        type: "post",
                        async: false,
                        data: postData,
                        success: function (data) {
                            if (data != null && data.Success) {
                                resultData = data.Result;
                                _this.totalCount = data.Total;
                            }
                            else {
                                alert(data.Msg);
                            }
                        },
                        error: function () {
                            alert("服务端异常！");
                        }
                    });
                    return resultData;
                },
                ChangePage(page) {
                    var _this = this;
                    _this.currentPage = page;
                    _this.tableDataList = _this.GetDataList();
                },
                Edit(a) {
                    console.log(a);
                    var self = this;
                    var item = this.tableDataList[a];
                    var _this = this.detailModel;
                    _this.showModal = true;
                    var pkid = 0;

                    if (!item) {
                    }
                    else {
                        pkid = item.PKID;
                    }
                    var postData = {
                        pkid: pkid
                    };

                    $.ajax({
                        url: "/BankMRActivity/GetBankMrActivityDisplayDetail",
                        type: "post",
                        async: false,
                        data: postData,
                        success: function (data) {
                            if (data != null && data.Success) {
                                console.log(data);
                                _this.PKID = data.Result.PKID;
                                _this.ActivityId = data.Result.ActivityId;
                                _this.Title = data.Result.Title;
                                _this.Description = data.Result.Description;
                                _this.AppJumpUrl = self.FormatValue(data.Result.AppJumpUrl);
                                _this.H5JumpUrl = self.FormatValue(data.Result.H5JumpUrl);
                                _this.ImageUrl = data.Result.ImageUrl;
                                _this.DisplayBeginTime = self.getDates(data.Result.DisplayBeginTime);
                                _this.DisplayEndTime = self.getDates(data.Result.DisplayEndTime);
                                _this.Sort = data.Result.Sort;
                                _this.IsActive = data.Result.IsActive ? 1 : 0;
                            }
                            else {
                                alert(data.Msg);
                            }
                        },
                        error: function () {
                            alert("服务端异常！");
                        }
                    });
                },
                FormatValue(value) {
                    if (value == "null" || value==null || !value)
                        value = "";
                },
                SaveSetting() {
                    var _this = this.detailModel;
                    var isactive = _this.IsActive == 0 ? false : true;
                    var description = _this.Description;
                    var title = _this.Title;
                    var activityId = _this.ActivityId;
                    var pkid = _this.PKID;
                    var sort = _this.Sort;
                    var imageUrl = _this.ImageUrl;
                    var appJumpUrl = _this.AppJumpUrl;
                    var h5JumpUrl = _this.H5JumpUrl;
                    var displayEndTime = this.getTimeSpan(_this.DisplayEndTime);
                    var displayBeginTime = this.getTimeSpan(_this.DisplayBeginTime);
                    var regionData = [];
                    var postData = {
                        PKID: pkid,
                        ActivityId: activityId,
                        Title: title,
                        Description: description,
                        AppJumpUrl: appJumpUrl,
                        H5JumpUrl: h5JumpUrl,
                        ImageUrl: imageUrl,
                        DisplayBeginTime: displayBeginTime,
                        DisplayEndTime: displayEndTime,
                        Sort: sort,
                        IsActive: isactive,
                        Region: regionData
                    };

                    $.ajax({
                        url: "/BankMRActivity/SaveBankMrActivityDisplayConfig",
                        type: "post",
                        async: false,
                        data: {
                            config: postData
                        },
                        success: function (data) {
                            if (data != null && data.Success) {
                                window.location.href = '/BankMRActivity/BankMrActivityDisplayConfig';
                            }
                            else {
                                alert("保存失败！" + data.Msg);
                            }
                        },
                        error: function () {
                            alert("服务端异常！");
                        }
                    });

                },
                CancelSetting() {
                    window.location.href = '/BankMRActivity/BankMrActivityDisplayConfig';
                },
                getTimeSpan(time) {
                    var year = time.getFullYear();
                    var day = time.getDate();
                    var month = time.getMonth() + 1;
                    var hours = time.getHours();
                    var minutes = time.getMinutes();
                    var seconds = time.getSeconds();
                    return year + '-' + month + '-' + day + ' ' + hours + ':' + minutes;
                },
                getDates(e) {
                    var time = e instanceof Date ? e : eval('new ' + e.toString().replace(/\//g, ""));
                    console.log(time);
                    if (time < new Date(2018, 1, 1, 0, 0))
                        time = new Date();
                    return time;

                },
                handleFormatError(file) {
                    this.$Notice.warning({
                        title: '文件格式不正确',
                        desc: "请选择 .jpg  or .png  or .jpeg图片"
                    });
                },
                handleMaxSize(file) {
                    this.$Notice.warning({
                        title: '文件大小不符合要求',
                        desc: "请选择不超过100KB的图片"
                    });
                },
                handleSuccess(res, file) {
                    if (res != null) {
                        if (res.Item1) {
                            this.detailModel.ImageUrl = res.Item2;
                        }
                        else {
                            this.$Notice.warning({
                                title: '上传图片失败',
                                desc: res.Item2
                            });
                        }
                    }
                    else {
                        this.$Notice.warning({
                            title: '上传图片异常',
                            desc: "服务端异常"
                        });
                    }
                },
                addLimitArea() {
                    var _this = this;
                    _this.areaData.push({
                        'provinceId': '',
                        'provinceData': _this.provinceDatas,
                        'cityData': _this.cityDatas,
                        'cityId': '',
                        'indeterminate': false,
                        'checkallgroup': [],
                    });
                },
                getProvinceDatas() {
                    var _this = this;
                    $.ajax({
                        url: "/BeautyYearCardConfig/GetAllProvinces",
                        type: "post",
                        async: false,
                        data: {},
                        success: function (data) {
                            if (data != null && data.length > 0) {
                                $(data).each(function (i, e) {
                                    _this.provinceDatas.push({
                                        name: e.name,
                                        id: e.id,
                                    })
                                })
                            }
                            else {
                                _this.$Notice.warning({
                                    title: '获取省市信息异常！',
                                    desc: '获取省市信息异常！',
                                });
                            }
                        },
                        error: function () {
                            alert("服务端异常！");
                        }
                    });

                },
                deleteLAComponent(i) {
                    var n = this.areaData.indexOf(i);
                    vm.areaData.splice(n, 1);
                },
                provinceChange(e, edit) {
                    var _this = this;
                    var exist = this.areaData.filter(function (x) { return x.provinceId == e.provinceId; });
                    if (exist.length <= 1) {
                        $.ajax({
                            url: "/BeautyYearCardConfig/GetAllCitys",
                            type: "post",
                            async: false,
                            data: {
                                ProvinceId: e.provinceId
                            },
                            success: function (data) {
                                if (data != null && data.length > 0) {
                                    e.cityData = data;
                                    e.cityIds = [];
                                    data.forEach(function (x) {
                                        e.cityIds.push(x.id);
                                    });
                                    if (edit == 1) {
                                        e.checkall = false;
                                        e.checkallgroup = [];
                                    }
                                    if (e.checkall) {
                                        e.checkallgroup = e.cityIds;
                                    }
                                }
                                else {
                                    _this.$Notice.warning({
                                        title: '获取省市信息异常！',
                                        desc: '获取省市信息异常！',
                                    });
                                }
                            },
                            error: function () {
                                alert("服务端异常！");
                            }
                        });

                    }
                    else {
                        this.$Notice.warning({
                            title: '重复省份',
                            desc: '选择的省份/直辖市已经存在，清重新选择！',
                        });
                        e.cityData = [];
                        return;
                    }


                },
            }
        })


    </script>
}