
@{
    ViewBag.Title = "券所属业务";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}

@section css{
    <link rel="stylesheet" href="~/Content/iview/iview.css" />
    <style type="text/css">
        [v-cloak] {
            display: none;
        }
        /*修改受影响的样式*/
        body {
            background-color: #2f4050;
        }

        .select {
            width: 100px;
        }

        .modal-element-width {
            width: 90%;
        }

        .modal-row {
            margin-bottom: 15px;
        }

        .modal-label {
            font-size: small;
            font-weight: 600;
            text-align: right;
        }

        .row-margin {
            margin-bottom: 15px;
        }
    </style>
}

<div id="app">
    <coupon-business></coupon-business>
</div>

<script type="text/template" id="coupon-select">
    <div>
        <row type="flex" justify="space-between">
            <i-col span="7">
                <label>优惠券:</label>
                <div>
                    <i-select filterable remote :remote-method="search" :loading="loading" v-model="coupon.RuleID" placeholder="请输入内容搜索">
                        <i-option v-for="item in filterRules" :key="item.RuleID" :value="item.RuleID">{{item.Text}}</i-option>
                    </i-select>
                </div>
            </i-col>
            <i-col span="7">
                <label>领取规则:</label>
                <div>
                    <i-select filterable v-model="coupon.GetRuleGUID">
                        <i-option key="00000000-0000-0000-0000-000000000000" value="00000000-0000-0000-0000-000000000000">请选择</i-option>
                        <i-option v-for="item in couponGetRules" :key="item.GetRuleGUID" :value="item.GetRuleGUID">{{item.Text}}</i-option>
                    </i-select>
                </div>
            </i-col>
            <i-col span="7">
                <label>名称:</label>
                <div>
                    <i-input placeholder="名称" v-model="coupon.Name"></i-input>
                </div>
            </i-col>
        </row>
    </div>
</script>

<script type="text/x-template" id="coupon-business">
    <div>
        <row class="row-margin">
            <i-col span="6">
                <label>业务类型:</label>
                <div>
                    <i-select filterable v-model="config.BusinessType">
                        @*<i-option value="GeneralBaoYang" key="GeneralBaoYang">通用保养流程</i-option>*@
                        <i-option value="BaoYangPackage" key="BaoYangPackage">保养套餐流程</i-option>
                        @*<i-option value="GeneralPaint" key="GeneralPaint">喷漆通用流程</i-option>*@
                        <i-option value="PaintPackage" key="PaintPackage">喷漆套餐流程</i-option>
                        @*<i-option value="GeneralAnnualInspection" key="GeneralAnnualInspection">年检通用流程</i-option>
                        <i-option value="AnnualInspectionPackage" key="AnnualInspectionPackage">年检套餐流程</i-option>*@
                    </i-select>
                </div>
            </i-col>
        </row>
        <row class="row-margin" type="flex" justify="space-between" v-bind:align="'bottom'">
            <i-col span="21">
                <coupon-select v-model="config.GetRule"></coupon-select>
            </i-col>
            <i-col span="2">
                <i-button type="primary" v-on:click="submit">添加</i-button>
            </i-col>
        </row>

        <i-table :stripe="true"
                 :data="configs"
                 :columns="columns"
                 :loading="loading"
                 :size="'large'"
                 highlight-row
                 style="margin-bottom:15px;">
        </i-table>

    </div>
</script>



@section scripts{
    <script type="text/javascript" src="~/Scripts/vue.min.js"></script>
    <script type="text/javascript" src="~/Scripts/iview/iview.min.js"></script>
    <script type="text/javascript">
        Array.prototype.all = function (func) {
            var result = true;
            for (var index = 0; index < this.length; index++) {
                var value = this[index];
                if (!func(value, index)) {
                    result = false;
                    break;
                }
            }
            return result;
        };
        Array.prototype.any = function (func) {
            var exists = false;
            for (var index = 0; index < this.length; index++) {
                if (func(this[index])) {
                    exists = true;
                    break;
                }
            }
            return exists;
        };

        Vue.component('coupon-select', {
            props: {
                value: {
                    type: Object,
                    default: {},
                }
            },
            template: "#coupon-select",
            data: function () {
                return {
                    couponRules: [],
                    couponGetRules: [],
                    coupon: {
                        RuleID: '',
                        GetRuleGUID: "00000000-0000-0000-0000-000000000000",
                        Name: "",
                    },
                    filterRules: [],
                    loading:false,
                };
            },
            created: function () {
                this.getCouponRules();
                this.getCouponGetRules(0);
            },
            watch: {
                "coupon.RuleID": function (value) {
                    this.getCouponGetRules(value);
                    vm.$emit('input', vm.coupon);
                },
                "coupon.GetRuleGUID": function (value) {
                    var vm = this;
                    vm.coupon.Name = "";
                    var rule = (vm.couponGetRules.filter(function (item) {
                        return item.GetRuleGUID === value;
                    }))[0];
                    if (rule) {
                        vm.coupon.Name = (rule.Text.split('-')[1] || "").trim();
                    }
                },
                "coupon.Name": function (value) {
                    var vm = this;
                    vm.$emit('input', { GetRuleGUID: vm.coupon.GetRuleGUID, Name: value, RuleID: vm.coupon.RuleID });
                },
                value: function (value) {
                    this.coupon.GetRuleGUID = value.GetRuleGUID;
                    this.coupon.Name = value.Name;
                },
            },
            methods: {
                getCouponRules: function () {
                    var vm = this;
                    $.get("/VipBaoYangPackage/GetAllCouponRules", function (rsp) {
                        var data = rsp.data || [];
                        var couponRules = data.map(function (item) {
                            var id = item.RuleID,
                                text = item.RuleID.toString() + '-' + (item.Name || "");
                            return { RuleID: id, Text: text };
                        });
                        vm.couponRules = couponRules;
                    });
                },
                getCouponGetRules: function (couponRuleID) {
                    var vm = this;
                    if (couponRuleID <= 0) {
                        vm.couponGetRules = [];
                        return;
                    }
                    $.post("/VipBaoYangPackage/GetCouponGetRules", {
                        ruleId: couponRuleID
                    }, function (rsp) {
                        var data = rsp.data || [];
                        var couponGetRules = data.map(function (item) {
                            var id = item.GetRuleGUID,
                                text = item.GetRuleID.toString() + '-' + (item.PromtionName || "") + '-' + (item.Description || "");
                            return { GetRuleGUID: id, Text: text };
                        });
                        vm.couponGetRules = couponGetRules;
                    });
                },
                search: function (query) {
                    var vm = this;
                    query = (query || '').toString();
                    console.log(query);
                    if (query !== '') {
                        vm.loading = true;
                        setTimeout(function () {
                            vm.loading = false;
                            vm.filterRules = vm.couponRules.filter(function (item) {
                                return item.Text.toLowerCase().indexOf(query.toLowerCase()) > -1;
                            });
                        }, 50);
                    } else {
                        vm.filterRules = [];
                    }
                },
            }
        });

        Vue.component('coupon-business', {
            template: '#coupon-business',
            data: function () {
                return {
                    configs: [],
                    loading: false,
                    columns: [],
                    data: [],
                    config: {
                        BusinessType: "",
                        GetRule: { GetRuleID: "", Name: "", RuleID:'' },
                    }
                };
            },
            created: function () {
                var vm = this;
                vm.columns = [
                    { type: 'index', width: 60, align: 'center' },
                    {
                        title: '业务类型', key: 'BusinessType', align: 'center',
                        render: function (createElement, params) {
                            var type = (params.row.BusinessType || '');
                            var text = '';
                            switch (type) {
                                case "GeneralBaoYang":
                                    text = "通用保养流程";
                                    break;
                                case "BaoYangPackage":
                                    text = "保养套餐流程";
                                    break;
                                case "GeneralPaint":
                                    text = "通用喷漆流程";
                                    break;
                                case "PaintPackage":
                                    text = "喷漆套餐流程";
                                    break;
                                case "GeneralAnnualInspection":
                                    text = "通用年检流程";
                                    break;
                                case "AnnualInspectionPackage":
                                    text = "年检套餐流程";
                                    break;
                            }
                            return createElement('span', text);
                        }
                    },
                    { title: '名称', key: 'Name', align: 'center' },
                    { title: '优惠券领取GUID', key: 'GetRuleGuid', align: 'center' },
                    { title: '描述', key: 'Description', align: 'center' },
                    { title: '创建人', key: 'CreateUser', align: 'center' },
                    {
                        title: '操作',
                        width: 200,
                        render: function (createElement, params) {
                            return createElement('div', [
                                createElement('Button', {
                                    on: {
                                        click: function () {
                                            vm.remove(params.row.PKID);
                                        }
                                    },
                                }, "删除"),
                            ]);
                        }
                    },
                ],
                    vm.getCouponBusinessConfigs();
            },
            watch: {
                "config.BusinessType": function () {
                    this.getCouponBusinessConfigs();
                }
            },
            methods: {
                submit: function () {
                    var vm = this;
                    if (!vm.config.BusinessType || !vm.config.GetRule.GetRuleGUID || !vm.config.GetRule.Name) {
                        vm.$Message.warning('优惠券规则、名称不能为空');
                        return;
                    }
                    vm.$Modal.confirm({
                        title: "确认添加?",
                        content: "<p>确认添加此配置？</p>",
                        loading: true,
                        onOk: function () {
                            $.post("AddCouponBusinessConfig", {
                                BusinessType: vm.config.BusinessType,
                                GetRuleGUID: vm.config.GetRule.GetRuleGUID,
                                Name: vm.config.GetRule.Name,
                                RuleId: vm.config.GetRule.RuleID
                            }, function (rsp) {
                                if (rsp.status) {
                                    vm.$Message.info('添加成功！');
                                    vm.getCouponBusinessConfigs();
                                }
                                else {
                                    vm.$Message.info('添加失败！' + (rsp.msg || ""));
                                }
                            }).error(function () {
                                vm.$Message.info('添加失败！');
                            }).complete(function () {
                                vm.$Modal.remove()
                            });
                        }
                    });
                },
                remove: function (id) {
                    var self = this;
                    vm.$Modal.confirm({
                        title: "确认删除",
                        content: "<p>删除此配置？</p>",
                        loading: true,
                        onOk: function () {
                            $.post("RemoveCouponBusinessConfig", { id: id }, function (rsp) {
                                vm.$Modal.remove();
                                if (rsp.status) {
                                    vm.$Message.info('删除成功！');
                                    self.getCouponBusinessConfigs();
                                }
                                else {
                                    vm.$Message.info('删除失败！' + (rsp.msg || ""));
                                }
                            }).error(function () {
                                vm.$Modal.remove();
                                vm.$Message.info('操作失败！');
                            });
                        }
                    });
                },
                getCouponBusinessConfigs: function () {
                    var vm = this;
                    var businessType = this.config.BusinessType;
                    vm.loading = true;
                    $.get('GetCouponBusinessConfigs', {
                        businessType: businessType,
                    }, function (rsp) {
                        var configs = rsp.data || [];
                        vm.configs = configs;
                    }).complete(function () {
                        vm.loading = false;
                    });
                },
            },
        });

        var vm = new Vue({
            el: "#app"
        });
    </script>
}
