@using Tuhu.Provisioning.DataAccess.Entity
@model List<ShareConfigSource>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    var querydata = ViewBag.query as Tuhu.Provisioning.DataAccess.Entity.ShareConfigQuery;
    int PageCount = 1;
    int pageindex = 1;
    if (querydata != null && querydata.TotalCount != 0 && querydata.PageIndex != 0 )
    {
        PageCount = ((querydata.TotalCount - 1) / 50) + 1;
        pageindex = querydata.PageIndex;
    }
    bool hasprev = pageindex > 1;
    bool hasnext = pageindex < PageCount;
}

@section head{
    <link href="~/Content/nfine/js/bootstrap/bootstrap.min.css" rel="stylesheet" />
}

<div class="contact">
    @Html.Hidden("PageCount", PageCount)
    <br />
    <form method="get" class="form-inline">
        @Html.Hidden("PageIndex", pageindex)
        <div class="form-group form-group-sm">
            <label>标签</label>
            <input class="form-control" name="LocationCriterion" type="text" value="@(querydata != null && !string.IsNullOrEmpty(querydata.LocationCriterion) ? querydata.LocationCriterion : "")" />
        </div>
        <div class="form-group form-group-sm">
            <label>ID</label>
            <input class="form-control" name="IdCriterion" type="text" value="@(querydata != null && querydata.IdCriterion.HasValue ? querydata.IdCriterion.ToString() : "")" />
        </div>
        <div class="form-group form-group-sm">
            <label>描述</label>
            <input class="form-control" name="DescriptionCriterion" type="text" value="@(querydata != null && !string.IsNullOrEmpty(querydata.DescriptionCriterion) ? (querydata.DescriptionCriterion.Length > 25 ? querydata.DescriptionCriterion.Substring(0,25) + "..." : querydata.DescriptionCriterion) : "")" />
        </div>
        <div class="form-group form-group-sm">
            <label>推送状态</label>
            @Html.DropDownList("StatusCriterion",
                                               new[]
                                               {
                                                   new SelectListItem() {Selected = (querydata == null || querydata.StatusCriterion.GetValueOrDefault() == 0), Text = "全部"},
                                                   new SelectListItem() {Selected = (querydata != null && querydata.StatusCriterion.GetValueOrDefault() == 1), Value = "1", Text = "启用"},
                                                   new SelectListItem() {Selected = (querydata != null && querydata.StatusCriterion.GetValueOrDefault() == 2), Value = "2", Text = "禁用"}
                                               },
                                               new
                                               {
                                                   id = "StatusCriterion",
                                                   @class = "form-control"
                                               })
        </div>
        <br />
        <div class="form-group form-group-sm">
            <label>创建日期</label>
            <input type="text" class="form-control" id="MinTimeCriterion" name="MinTimeCriterion" autocomplete="off" value="@(querydata != null && querydata.MinTimeCriterion.HasValue ? querydata.MinTimeCriterion.Value.ToString() : "")" />
            <input class="form-control" type="text" id="MaxTimeCriterion" name="MaxTimeCriterion" autocomplete="off" value="@(querydata != null && querydata.MaxTimeCriterion.HasValue ? querydata.MaxTimeCriterion.Value.ToString() : "")" />
            @*@Html.Hidden("PageIndex", pageindex)*@
        </div>
        <div class="form-group form-group-sm">
            <label>创建人</label>
            <input class="form-control" name="CreatorCriterion" type="text" value="@(querydata != null && !string.IsNullOrEmpty(querydata.CreatorCriterion) ? querydata.CreatorCriterion : "")" />
        </div>
        <div class="form-group form-group-sm">
            <label>分享类型</label>
            @Html.DropDownList("ShareTypeCriterion",
                                               new[]
                                               {
                                                   new SelectListItem() {Selected = (querydata == null || querydata.ShareTypeCriterion == null ), Text = "全部"},
                                                   new SelectListItem() {Selected = (querydata != null && querydata.ShareTypeCriterion.HasValue && querydata.ShareTypeCriterion.Value == 0), Value = "0", Text = "链接"},
                                                   new SelectListItem() {Selected = (querydata != null && querydata.ShareTypeCriterion.GetValueOrDefault() == 1), Value = "1", Text = "图片"},
                                                   new SelectListItem() {Selected = (querydata != null && querydata.ShareTypeCriterion.GetValueOrDefault() == 2), Value = "2", Text = "文字"},
                                                   new SelectListItem() {Selected = (querydata != null && querydata.ShareTypeCriterion.GetValueOrDefault() == 3), Value = "3", Text = "小程序"}
                                               },
                                               new
                                               {
                                                   id = "ShareTypeCriterion",
                                                   @class = "form-control"
                                               })
        </div>
        <input id="submit" class="btn btn-primary btn-small" type="submit" value="搜索" />
        <input id="clearinput" class="btn btn-primary btn-small" type="button" onclick="window.location.href='/shareconfig/index'" value="清空" />
        <br />
    </form>
    <br />
    <input type="button" class="btn btn-info" value="新增" onclick="window.open('@Url.Action("TemplateEdit")')" />
    <input type="button" class="btn btn-info" value="弹窗缓存刷新" onclick="CacheUpdate()" formtarget="_blank"/>
    <br />
    <table id="tbShareConfig" style="background: #ffffff; font-size: 12px; width: 100%; text-align:center" border="1" class="table">
        <tr>
            <th style="text-align: center">标签</th>
            <th style="text-align: center">ID</th>
            <th style="text-align: center">特殊参数</th>
            <th style="text-align: center">描述（内部使用）</th>
            <th style="text-align: center">状态</th>
            <th style="text-align: center">分享场景</th>
            <th style="text-align: center">分享类型</th>
            <th style="text-align: center">创建日期</th>
            <th style="text-align: center">创建人</th>
            <th style="text-align: center" colspan="4">操作</th>
        </tr>
        @if (Model.Any())
        {
            foreach (var share in Model)
            {
                <tr>
                    <td name="sharesLocation">@share.Location</td>
                    <td name="sharesPKID">@share.PKId</td>
                    <td name="sharesSpcParam">@share.SpecialParam</td>
                    <td name="sharesDescription">@((!string.IsNullOrWhiteSpace(share.Description) && share.Description.Length > 25) ? share.Description.Substring(0, 25) + "..." : share.Description)</td>
                    <td name="sharesStatus">@(share.Status == 1 ? "启用" : "禁用")</td>
                    <td name="sharesScene"></td>
                    <td name="sharesType"></td>
                    <td name="sharesCreateTime">@share.CreateDateTime.ToString()</td>
                    <td name="sharesCreator">@share.Creator</td>
                    <td><input type="button" class="btn btn-primary" value="编辑" onclick="OperateConfigs.UpdateExistingShare(@share.PKId);" /></td>
                    <td><input type="button" class="btn btn-primary" value="复制" onclick="OperateConfigs.CopyShare(@share.PKId);" /></td>
                    <td><input type="button" class="btn btn-primary" value="历史" onclick="OperateConfigs.CheckShareHistory(@share.PKId);" /></td>
                    <td><input type="button" class="btn btn-primary" value="删除" onclick="OperateConfigs.DeleteShare('@share.Location', '@share.SpecialParam');" /></td>
                </tr>
            }
        }
    </table>
    <br />
    <button type="button" @(hasprev ? "" : "disabled") class="btn btn-primary btn-small" style="float:left" onclick="NextPage('prev')">上一页</button>
    <!--<span>@pageindex</span>-->
    <input class="form-control" style="width:60px;text-align:center;margin:0 6px 0 6px;float:left" type="text" id="PageIndexCriterion" name="PageIndexCriterion" value="@pageindex" />
    <button type="button" class="btn btn-primary btn-small" onclick="NextPage('jump')">跳转</button>
    <button type="button" @(hasnext ? "" : "disabled") class="btn btn-primary btn-small" onclick="NextPage('next')">下一页</button>
    <span>共 @PageCount 页</span>
</div>
<script src="/Scripts/ajaxfileupload.js" type="text/javascript"></script>
<script type="text/javascript" src="/Scripts/TimeObjectUtil.js"></script>
<link href="/Scripts/jquery-ui-timepicker-addon/jquery-ui-timepicker-addon.css" rel="stylesheet" type="text/css" />
<link href="/Scripts/ztree/css/zTreeStyle/zTreeStyle.css" rel="stylesheet" type="text/css" />
<script src="/Scripts/jquery-ui-timepicker-addon/jquery-ui-sliderAccess.js" type="text/javascript"></script>
<script src="/Scripts/jquery-ui-timepicker-addon/jquery-ui-timepicker-addon.js" type="text/javascript"></script>
<script src="/Scripts/zTree/js/jquery.ztree.core-3.5.min.js" type="text/javascript"></script>
<script src="/Scripts/zTree/js/jquery.ztree.excheck-3.5.min.js" type="text/javascript"></script>

<div id="ShareHistoryModule" style="display:none;"></div>

<script type="text/javascript">
    $(function () {
        var datepicker_CurrentInput;
        $.datepicker.setDefaults({ showButtonPanel: true, closeText: '清除', beforeShow: function (input, inst) { datepicker_CurrentInput = input; } });
        $(".ui-datepicker-close").live("click", function () {
            datepicker_CurrentInput.value = "";
        });
        $("#MinTimeCriterion").prop("readonly", true).datepicker({
            controlType: 'select',
            dateFormat: "yy-mm-dd",
            showButtonPanel: true,
            onClose: function (selectedDate) {
                $("#MaxTimeCriterion").datepicker("option", "minDate", selectedDate);
            }
        });
        $("#MaxTimeCriterion").prop("readonly", true).datepicker({
            controlType: 'select',
            dateFormat: "yy-mm-dd",
            showButtonPanel: true,
            onClose: function (selectedDate) {
                $("#MinTimeCriterion").datepicker("option", "maxDate", selectedDate);
                $("#MaxTimeCriterion").val($(this).val());
            }
        });
    });
    function CacheUpdate() {
        if (confirm("确定要刷新缓存吗？") == true) {
            $.post('/ShareConfig/CacheUpdate', function (data) {
                if (parseInt(data) == -1)
                    alert("刷新缓存失败！")
                else
                    alert("刷新缓存成功！")
            });
        }
    }
    $(function () {
        var tbshareconfig = document.getElementById("tbShareConfig");
        var rows = tbshareconfig.rows.length;
        for (var i = 1; i < rows; i++) {
            var jumpId = tbshareconfig.rows[i].cells[1].innerHTML;
            $.ajax({
                url: "/ShareConfig/GetShareSConfigByJumpId",
                type: "POST",
                data: {
                    jumpId: jumpId },
                dataType: "json",
                async: false,
                success: function (data) {
                    var sharescenes = "";
                    var sharetypes = "";
                    var j;
                    for (j = 0; j < data.length; j++) {
                        switch (data[j].ShareScene) {
                            case 1: sharescenes += "微信好友</br>"; break;
                            case 2: sharescenes += "朋友圈</br>"; break;
                            case 4: sharescenes += "新浪微博</br>"; break;
                            case 8: sharescenes += "QQ好友</br>"; break;
                            case 16: sharescenes += "QQ空间</br>"; break;
                            case 32: sharescenes += "复制链接</br>"; break;
                            case 64: sharescenes += "短信</br>"; break;
                        }
                        switch (data[j].ShareType) {
                            case 0: sharetypes += "链接</br>"; break;
                            case 1: sharetypes += "图片</br>"; break;
                            case 2: sharetypes += "文字</br>"; break;
                            case 3: sharetypes += "小程序</br>"; break;
                        }
                    }
                    tbshareconfig.rows[i].cells[5].innerHTML = sharescenes;
                    tbshareconfig.rows[i].cells[6].innerHTML = sharetypes;
                },
                error: function () {
                    alert('请求失败！');
                },
            })
        }
    }); 
    function NextPage(type) {
        var pageindex = $("#PageIndex").val();
        var result = parseInt(pageindex);
        if (type == 'prev') {
            result -= 1;
        } else if (type == 'next') {
            result += 1;
        } else {
            var re = parseInt($("#PageIndexCriterion").val());
            var pagecount = parseInt($("#PageCount").val());
            if (re >= 1 && re <= pagecount) {
                result = re;
            } else {
                alert("页码超出范围！");
            }
        }
        $("#PageIndex").val(result);
        $("#submit").click();
    }
    var OperateConfigs = {
        UpdateExistingShare: function (id) {
            window.open("/ShareConfig/TemplateEdit?id=" + id);
        },
        CopyShare: function (id) {
            var copyid = -id;
            window.open("/ShareConfig/TemplateEdit?id=" + copyid);
        },
        CheckShareHistory: function (id) {
            $("#ShareHistoryModule").html("").load("/ShareConfig/HistoryModule?id=" + id);
            $("#ShareHistoryModule").dialog({
                title: "历史",
                width: 400,
                height: "auto",
                modal: true,
                resizable: false
            });
        },
        DeleteShare: function (location, specParam) {
            if (confirm("确定要删除吗？") == true) {
                $.ajax({
                    url: "/ShareConfig/DelShareConfig",
                    type: "POST",
                    data: {
                        location: location,
                        specialParam: specParam
                    },
                    dataType: "text",
                    async: false,
                    success: function (data) {
                        if (data == "True") {
                            alert("删除成功！");
                            window.location.reload();
                        }
                        else {
                            alert("删除失败！");
                        }
                    },
                    error: function () {
                        alert('请求失败！');
                    },
                })
            }
        }
    };
</script>
