@model Tuple<List<Tuhu.Provisioning.Models.GroupBuyingV2.GroupBuyingListModel>, string>
@{
    var labelList = new List<string> { "优惠券团", "抽奖团", "1分团", "低价团", "精品团" };
    var groupTypes = new List<Tuple<int, string>> {
new Tuple<int, string>(0,"普通团"),
new Tuple<int, string>(1,"新人团"),
new Tuple<int, string>(2,"团长特价"),
new Tuple<int, string>(3,"团长免单")
};
    var groupCategories = new List<Tuple<int, string>> {
new Tuple<int, string>(0,"普通拼团"),
new Tuple<int, string>(1,"抽奖拼团"),
new Tuple<int, string>(2,"优惠券拼团")
};
    var groupStatus = new List<Tuple<int, string>> {
new Tuple<int, string>(1,"进行中"),
new Tuple<int, string>(2,"已结束")
};

    var searchTypes = new List<Tuple<int, string>> {
new Tuple<int, string>(3,"商品名称"),
new Tuple<int, string>(4,"商品PID"),
new Tuple<int, string>(1,"创建人"),
new Tuple<int, string>(5,"groupId")
};
    var ckLabels = new List<string>();
    if (Request["groupLabel"] != null)
    {
        string cklabelsStr = Request["groupLabel"].ToString();
        ckLabels = cklabelsStr.Split(new char[] { ',' },StringSplitOptions.RemoveEmptyEntries).ToList();
        ckLabels = ckLabels ?? new List<string>();
    }
}
    <head>

    </head>
    <body>
        <div class="title" style="margin-bottom:20px;">
            <h2>拼团商品配置</h2>
        </div>
        <fieldset>
            <legend>筛选条件</legend>

            <select id="selectType">
@foreach (var item in searchTypes)
{
    if (Request["searchType"] != null && Request["searchType"].ToString() == item.Item1.ToString())
    {
        <option selected="selected" value="@item.Item1">@item.Item2</option>
    }
    else
    {
        <option value="@item.Item1">@item.Item2</option>
    }
}

            </select>
            <input type="text" id="keyWord" value="@(Request["keyWord"] != null ? Request["keyWord"].ToString() : "")" />
            &nbsp; &nbsp;

            <span>活动状态</span>
            <select id="selectStatus">
            <option value="-1">全部</option>
            @foreach (var item in groupStatus)
            {
                if (Request["isFinishGroup"] != null && Request["isFinishGroup"].ToString() == item.Item1.ToString())
                {
                    <option selected="selected" value="@item.Item1">@item.Item2</option>
                }
                else
                {
                    <option value="@item.Item1">@item.Item2</option>
                }
            }
            </select>
            &nbsp; &nbsp;
            <span>拼团类型</span>
            <select id="selectGroupType">
            <option value="-1">全部</option>
            @foreach (var item in groupTypes)
            {
                if (Request["groupType"] != null && Request["groupType"].ToString() == item.Item1.ToString())
                {
                    <option selected="selected" value="@item.Item1">@item.Item2</option>
                }
                else
                {
                    <option value="@item.Item1">@item.Item2</option>
                }
            }
            </select>
            &nbsp; &nbsp;
            <span>拼团种类</span>
            <select id="selectGroupCategory">
            <option value="-1">全部</option>
            @foreach (var item in groupCategories)
            {
                if (Request["groupCategory"] != null && Request["groupCategory"].ToString() == item.Item1.ToString())
                {
                    <option selected="selected" value="@item.Item1">@item.Item2</option>
                }
                else
                {
                    <option value="@item.Item1">@item.Item2</option>
                }
            }
            </select>
            &nbsp; &nbsp;
            <input type="button" value="搜索" id="btnSearch" onclick="Search()" />
            &nbsp; &nbsp;
            <input type="button" value="重置" id="btnSearch" onclick="ReStart()" />
            </fieldset>
        <fieldset>
            <legend>运营标签</legend>
            @foreach (var item in labelList)
            {
                if (ckLabels.Any(x => x == item))
                {
                    <input type="checkbox" checked="checked" name="checkLabel" value="@item" />
                    <span>@item</span>
                }
                else
                {
                     <input type="checkbox" name="checkLabel" value="@item" />
                     <span>@item</span>
                }

             }
        </fieldset>
            <div>
            <div style="float: right; width: 20%; text-align: right;">
            <a class="button" href="/GroupBuyingV2/DownloadGroupLotteryGuide">拼团抽奖活动配置手册</a>
            </div>
            <div style="float: right; width: 80%;">
            <input type="button" value="+创建" id="btnCreate" onclick="Edit('', 0)" />
            <button type="button" onclick="RefreshCache()">刷新缓存</button>
            <a href="/GroupBuyingV2/ExportFile">导出</a>
            <a class="button" href="/GroupBuyingV2/Lottery" target="_blank">拼团抽奖</a>
            </div>

            <div style="clear: both;"></div>
            </div>
            <fieldset>
            <legend>拼团配置列表</legend>

            <table>
            <tr>
            <th>ProductGroupId</th>
            <th>团类型</th>
            <th>宣传图</th>
            <th>商品名称</th>
            <th>商品PID</th>
            <th>实际库存</th>
            <th>活动价</th>
            <th>是否显示</th>
            <th>上架时间</th>
            <th>下架时间</th>
            <th>创建人</th>
            <th>上海可用库存</th>
            <th>上海在途库存</th>
            <th>上海库存成本</th>
            <th>武汉可用库存</th>
            <th>武汉在途库存</th>
            <th>武汉库存成本</th>
            <th>总可用库存</th>
            <th>总在途库存</th>
            <th>操作</th>
            </tr>
            @{

                if (Model.Item1 != null && Model.Item1.Count > 0)
                {
                    foreach (var item in Model.Item1)
                    {
                        <tr>
                        <td>@item.ProductGroupId</td>
                        <td>
                        @switch ((int)item.GroupType)
                        {
                            case 1:
                                <span>新人团</span>
                                break;
                            case 2:
                                <span>团长特价</span>
                                break;
                            case 3:
                                <span>团长免单</span>
                                break;
                            default:
                                <span>普通团</span>
                                break;
                        }
                        </td>
                        <td><img src="@item.Image" style="width: 150px; height: 50px;" /></td>
                        <td>@item.ProductName</td>
                        <td>@item.PID</td>
                        <td>@(item.TotalGroupCount - (item.CurrentGroupCount ?? 0))</td>
                        <td>@item.FinalPrice</td>
                        <td>@(item.IsShow ? "显示" : "不显示")</td>
                        <td>@item.BeginTime</td>
                        <td>@item.EndTime</td>
                        <td>@item.Creator</td>
                        <td>@(item.GroupStockInfo == null ? "-" : item.GroupStockInfo.SHAvailableStockQuantity.ToString())</td>
                        <td>@(item.GroupStockInfo == null ? "-" : item.GroupStockInfo.SHZaituStockQuantity.ToString())</td>
                        <td>@(item.GroupStockInfo == null ? "-" : item.GroupStockInfo.SHStockCost.ToString("#0.00"))</td>
                        <td>@(item.GroupStockInfo == null ? "-" : item.GroupStockInfo.WHAvailableStockQuantity.ToString())</td>
                        <td>@(item.GroupStockInfo == null ? "-" : item.GroupStockInfo.WHZaituStockQuantity.ToString())</td>
                        <td>@(item.GroupStockInfo == null ? "-" : item.GroupStockInfo.WHStockCost.ToString("#0.00"))</td>
                        <td>@(item.GroupStockInfo == null ? "-" : item.GroupStockInfo.TotalAvailableStockQuantity.ToString())</td>
                        <td>@(item.GroupStockInfo == null ? "-" : item.GroupStockInfo.TotalZaituStockQuantity.ToString())</td>
                        <td><a onclick="Edit('@item.ProductGroupId', 1, @item.TotalGroupCount)">编辑</a>|<a onclick="Edit('@item.ProductGroupId', 2)">复制</a>|<a onclick="ShowHisory('@item.ProductGroupId')">历史</a>@*|<a onclick="Delete('@item.ProductGroupId')">删除</a>*@</td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="10"> 暂无数据！</td></tr>
                }

            }
            </table>

            @MvcHtmlString.Create(Model.Item2)

            </fieldset>
            <div id="EditDialog">

            </div>

            <div id="HistoryListDialog" hidden="hidden">
            </div>
            </body>
         
    <script>


        function Edit(groupId, type, totalGroupCount) {
            var totalGroupStoreCount = null;
            var title = "";
            if (type == 0) {
                title = "拼团商品配置(新增)";
            } else if (type == 1) {
                title = "拼团商品配置(编辑)";
                totalGroupStoreCount = totalGroupCount;
            }
            else {
                title = "拼团商品配置(复制)";
            }

            $("#EditDialog").load('/GroupBuyingV2/EditGroupBuyingSetting?groupId=' + groupId + '&operatorType=' + type);
            $("#EditDialog").dialog({
                title: name,
                autoOpen: true,
                height: 800,
                width: 'auto',
                modal: true,
                title: title,
                buttons: [
                {
                    text: "保存",
                    click: function () {
                        var canSave = true;
                        //参数校验
                        //基本配置
                        $(".tip").remove();
                        var productGroupId = $("#ProductGroupId").val();

                        var beginTime = $("#BeginTime").val();
                        if (!beginTime) {
                            ShowWrongTit($("#BeginTime"), '(必选)');
                            canSave = false;
                        }
                        var endTime = $("#EndTime").val();
                        if (!endTime) {
                            ShowWrongTit($("#EndTime"), '(必选)');
                            canSave = false;
                        }
                        var groupNum = $("#GroupNum").val();
                        if (!groupNum) {
                            ShowWrongTit($("#GroupNum"), '(必填)');
                            canSave = false;
                        }
                        else if (groupNum < 2 || groupNum > 8) {
                            ShowWrongTit($("#GroupNum"), '(2-8的正整数)');
                            canSave = false;
                        }
                        var groupType = $("#GroupType").val();
                        if (!groupType) {
                            ShowWrongTit($("#GroupType"), '(必选)');
                            canSave = false;
                        }
                        var currentGroupCount = $("#CurrentGroupCount").val();
                        if (!currentGroupCount) {
                            currentGroupCount = 0;
                        }
                        var totalGroupCount = $("#TotalGroupCount").val();
                        if (!totalGroupCount) {
                            ShowWrongTit($("#TotalGroupCount"), '(必填)');
                            canSave = false;
                        }
                        if (totalGroupCount - currentGroupCount < 0) {
                            alert("库存上限应大于等于已消耗库存");
                            return;
                        }
                        @*if (totalGroupCount - totalGroupStoreCount < 0) {
                            ShowWrongTit($("#TotalGroupCount"), '(库存上限只能增加不能减少)');
                            canSave = false;
                        }*@
                        //显示配置ShareId
                        var shareId = $("#ShareId").val();
                        if (!shareId) {
                            ShowWrongTit($("#ShareId"), '(必填)');
                            canSave = false;
                        }
                        var sequence = $("#Sequence").val();
                        if (!sequence) {
                            ShowWrongTit($("#Sequence"), '(必填)');
                            canSave = false;
                        }
                        var image = $("#Image").attr("src");
                        if (!image) {
                            //ShowWrongTit($("#Image"), '(必填)');
                            //canSave = false;
                            image = '';
                        }
                        var label = $("#Label").val();
                        if(label==""){
                            alert("请选择运营标签！");
                            return;
                        }
                        var shareImage=$("#ShareImage").attr("src");
                        var isShow = $('#IsShow').prop("checked");
                        var applyCoupon = $('#ApplyCoupon').prop("checked");
                        var groupCategory = $('#groupCategory').val();
                        var groupDescription = $('#groupDescription').val().trim();
                        if (groupCategory === 1 && groupDescription == '') {
                            ShowWrongTit('拼团抽奖必须有描述');
                            canSave = false;
                        }
                        //商品配置//
                        var pid_1 = $("#pid_1").val();
                        if (!pid_1) {
                            ShowWrongTit($("#pid_1"), '(必填)');
                            canSave = false;
                        }

                        var channelList=[];
                        $(".Channel").each(function(){
                            if ($(this).is(':checked')) {
                                var channel = $(this).val();
                                channelList.push(channel);
                            }
                        });
                        if(channelList.length<1){
                            alert("请至少选择一个渠道");
                            return;
                        }
                        var SpecialUserTag = $("#SpecialUserTag").val();
                        var Data1 = {
                            "ProductGroupId": type == 1 ? productGroupId : "",
                            "GroupType": groupType,
                            "BeginTime": beginTime,
                            "EndTime": endTime,
                            "MemberCount": groupNum,
                            "Label": label,
                            //"Label":"",
                            "Image": image,
                            "Sequence": sequence,
                            "TotalGroupCount": totalGroupCount,
                            "CurrentGroupCount": currentGroupCount,
                            "ShareId": shareId,
                            "SpecialUserTag": SpecialUserTag,
                            "IsShow": isShow,
                            "ApplyCoupon": applyCoupon,
                            "GroupCategory": groupCategory,
                            "GroupDescription": groupDescription,
                            "ShareImage":shareImage,
                            "Channel":channelList.join(";")
                        };
                        var Data = [];
                        var prodsNum = $("[name=showDetail]").length;//商品个数
                        var mustPid = false;
                        for (var i = 1; i <= prodsNum; i++) {
                            var OriginalPrice = $("#OriginalPrice_" + i).val();
                            if (!OriginalPrice) {
                                ShowWrongTit($("#OriginalPrice_" + i), '(必填)');
                                canSave = false;
                            }
                            var FinalPrice = $("#FinalPrice_" + i).val();
                            if (!FinalPrice) {
                                ShowWrongTit($("#FinalPrice_" + i), '(必填)');
                                canSave = false;
                            }
                            var SpecialPrice = $("#SpecialPrice_" + i).val();
                            if (!SpecialPrice) {
                                ShowWrongTit($("#SpecialPrice_" + i), '(必填)');
                                canSave = false;
                            }
                            var useCoupon = $('#ApplyCoupon_' + i).prop("checked");
                            if (groupType == 0) {//普通团 团长价=活动价
                                if (FinalPrice != SpecialPrice) {
                                    ShowWrongTit($("#SpecialPrice_" + i), '(团长价应等于活动价)');
                                    canSave = false;
                                }
                            }
                            var buyLimitCount = $('#buyLimit_' + i).val();
                            if (buyLimitCount < 0) {
                                alert("限购单数不能小于0");
                                return;
                            }
                            var allowShow = $('#allowShow_' + i).prop("checked");
                            var disPlay=$("#DisPlay_" + i).prop("checked");
                            if (disPlay && !allowShow) {
                                alert("默认显示商品不能配置为隐藏"); return;
                            }
                            var upperLimit=$("#upperLimit_" + i).val();
                            if (groupCategory != 0 && upperLimit > 1) {
                                alert("优惠券拼团和拼团抽奖每单限购一件商品");return;
                            }

                            if (upperLimit < 1) {
                                alert("每单限购数量不能小于1");
                                return;
                            }
                            mustPid = $("#DisPlay_" + i).attr("checked") == "checked" ? true : mustPid;
                            Data.push({
                                "PID": $("#pid_" + i).val(),
                                "ProductName": $("#productName_" + i).val(),
                                "OriginalPrice": $("#OriginalPrice_" + i).val(),
                                "FinalPrice": $("#FinalPrice_" + i).val(),
                                "SpecialPrice": $("#SpecialPrice_" + i).val(),
                                "UpperLimitPerOrder":$("#upperLimit_"+i).val(),
                                "UseCoupon":useCoupon,
                                "IsShow":allowShow,
                                "BuyLimitCount":buyLimitCount,
                                "DisPlay": $("#DisPlay_" + i).attr("checked") == "checked" ? 1 : 0
                            });
                        }
                        if (mustPid == false) {
                            ShowWrongTit($("#DisPlay_1"), '(至少勾选一个)');
                            canSave = false;
                        }
                        if (canSave) {
                            $.ajax({
                                url: "/GroupBuyingV2/SaveGroupBuyingSetting",
                                type: "post",
                                dataType: "json",
                                data: {
                                    groupSettingJson: JSON.stringify(Data1),
                                    productSettingJson: JSON.stringify(Data)
                                },
                                success: function (data) {
                                    if (data.Item1) {
                                        alert("操作成功！");
                                        $("#EditDialog").dialog("close");
                                        location.reload();
                                    }
                                    else {
                                        alert(data.Item2);
                                    }
                                },
                                error: function () { alert("网络异常！"); }
                            });
                        }
                    }
                },
                {
                    text: "取消",
                    click: function () {
                        $(this).dialog("close");
                    }
                }

                ]

            });
            $("#EditDialog").dialog('open');
        }

        function Delete(item) {
            if (!confirm("确定要删除？"))
                return;
            var groupId = item
            $.ajax({
                url: "/GroupBuyingV2/DeleteGroupBuyingSetting",
                type: "post",
                dataType: "json",
                data: { "groupId": groupId },
                success: function (data) {
                    if (data) {
                        alert("删除成功！");
                        location.reload();
                    }
                    else {
                        alert("删除失败！");
                    }
                }
            });

        }

        function ShowHisory(item) {
            var groupId = item;
            $("#HistoryListDialog").load('/GroupBuyingV2/GetGroupBuyingModifyLogByGroupId?&groupId=' + groupId);
            $("#HistoryListDialog").dialog({
                autoOpen: false,
                height: 300,
                width: 'auto',
                modal: true,
                title: "历史记录",
                buttons: [
                {
                    text: "关闭",
                    click: function () {
                        $(this).dialog("close");
                    }
                }]
            });
            $("#HistoryListDialog").dialog("open");
        }

        function Search(pageIndex) {
            var ckedLabels = [];
            var ckedLabels_str = '';
            $.each($('input[type=checkbox]:checked'), function () {
                ckedLabels.push($(this).val());
            });
           
            if (ckedLabels.length > 0) {
                ckedLabels_str = ckedLabels.join();
            } 
            //groupCategory, groupType, groupLabel, isFinishGroup
            var searchType = $("#selectType").val();
            var keyWord = $("#keyWord").val();
            var groupCategory = $("#selectGroupCategory").val();
            var groupType = $("#selectGroupType").val();
            //var groupLabel = $("#selectGroupLabel").val();
            var isFinishGroup = $("#selectStatus").val();

            if (pageIndex == undefined) {
                pageIndex = 1;
            }

            window.location.href = "/GroupBuyingV2/Index?pageIndex=" + pageIndex
            + "&searchType=" + searchType
            + "&keyWord=" + keyWord
            + "&groupCategory=" + groupCategory
            + "&groupType=" + groupType
            + "&groupLabel=" + ckedLabels_str
            + "&isFinishGroup=" + isFinishGroup;
        }
  
        function ShowWrongTit(target, titText) {
            target.after('<span class="tip" style="color:red">' + titText + '</span>');
        }

        function ToPage(curPage) {
            
            if (curPage != undefined && curPage != null) {
                Search(curPage);
            }else if(curPage != undefined && curPage != null && event.keyCode == 13){
                var index = $("#ToPage").val();
                Search(index);
            }
        }

        function ReStart(){
            $("#keyWord").val('');
            $("#selectGroupCategory").val('-1');
            $("#selectGroupType").val('-1');
            $("#selectStatus").val('-1');
            $.each($('input[type=checkbox]:checked'), function () {
                $(this).prop('checked',false);
            });
        } 

    </script>
<script>
    function RefreshCache() {
        $.post("/GroupBuyingV2/RefreshTaskCache", function (data) {
            if (data.length > 0) {
                alert('缓存刷新成功');
                return true;
            }
            alert("缓存刷新失败");
            return false;
        })
    }
</script>