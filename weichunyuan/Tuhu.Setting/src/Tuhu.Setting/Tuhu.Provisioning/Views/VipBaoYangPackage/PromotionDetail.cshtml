
@{
    ViewBag.Title = "塞券详情";
}
@section head{
    <link rel="stylesheet" href="/Scripts/artDialog6.0.4/css/ui-dialog.css" />
    <style type="text/css">
        [v-cloak]{
            display:none;
        }
        .ui-dialog {
             width: auto; 
        }

        .tableContainer {
            width: 100%;
        }

        .tableContainer th {
            background: #66ABEF;
            color: #F3F7FA;
            border: 1px solid #559BD0;
            font-weight: 600;
            font-family: "Microsoft Yahei";
            text-align: center;
        }

        .tableContainer td {
            font-size: 75%;
            padding: 8px 3px 8px 3px;
            font-family: "Microsoft Yahei";
            text-align: center;
            border: 1px solid #eee;
        }

        .package-info {
            font-size: 14px;
            margin: 5px 0;
        }

        .package-info > div > div {
            width: 45%;
            display: inline-block;
            vertical-align: top;
        }
        .package-info span {
            width: 60%;
            font-weight: 700;
        }

        .package-info label {
            width: 22%;
            display: inline-block;
            text-align:center;
        }
        .package-info > div {
            margin-bottom: 5px;
        }
    </style>
}
<h2>
    <a href="/VipBaoYangPackage/VipBaoYangPackage">保养套餐配置</a>
    <a href="/VipBaoYangPackage/VipPromotionOperation" style="margin-left:30px">给用户塞券</a>
    <a href="/VipBaoYangPackage/PromotionOperationRecord" style="margin-left:30px">塞券记录</a>
    <a href="/VipBaoYangPackage/VipBaoYangPackageSmsConfig" style="margin-left:30px">短信配置</a>
</h2>
<h2>塞券详情</h2>
<div id="div" v-cloak>
    <div class="package-info">
        <div>
            <div>
                <label>批号:</label>
                <span>{{package.BatchCode}}</span>
            </div>
            <div>
                <label>所属大客户:</label>
                <span>{{package.VipUserName}}</span>
            </div>
        </div>
        <div>
            <div>
                <label>套餐名称:</label>
                <span>{{package.PackageName}}</span>
            </div>
            <div>
                <label>套餐PID:</label>
                <span>{{package.PID}}</span>
            </div>

        </div>
        <div>
            <div>
                <div v-for="(brand,index) in formatBrands(package.Brands)">
                    <label :style="{'visibility':(index === 0?'visible':'hidden')}">机油品牌:</label>
                    <div style="display:inline-block">
                        <span style="display:inline-block;width:150px;">{{brand.Brand}}</span>
                        <span>{{brand.Grades.join(', ')}}</span>
                    </div>
                </div>
            </div>

            <div>
                <label>机油升数:</label>
                <span>{{package.Volume || '/'}}</span>
            </div>
        </div>
        <div>
            <div>
                <label>套餐价格:</label>
                <span>{{package.Price}}</span>
            </div>

            <div>
                <label>结算方式:</label>
                <span>{{package.SettlementMethod === 'PreSettled' ? '买断制':'据实制'}}</span>
            </div>
        </div>
        <div>
            <div>
                <label>短信配置:</label>
                <span>{{package.IsSendSms?'发送短信':'不发送短信'}}</span>
            </div>
            <div>
                <label>领券规则:</label>
                <span>{{package.RulesGUID || '/'}}</span>
            </div>
        </div>
    </div>
    <div is="pager" :total="total" v-model="pager">
        <table class="tableContainer">
            <thead>
                <tr>
                    <th v-if="status == 'Repaired' || status == 'Success'"><input type="checkbox" :checked="validCount > 0 && checkedIds.length == validCount" v-on:click="checkall" /></th>
                    <th>#</th>
                    <th>手机号</th>
                    <th>车牌号</th>
                    <th>优惠券</th>
                    <th>优惠券开始时间</th>
                    <th>优惠券截止时间</th>
                    <th>状态</th>
                    <th>备注</th>
                    <th>操作</th>
                </tr>
            </thead>
            <tbody v-if="loading">
                <tr><td colspan="7"><img src="/Images/loading.gif" />玩命加载中，请稍候...</td></tr>
            </tbody>
            <tbody v-else-if="(details||[]).length==0">
                <tr><td colspan="7">暂无数据</td></tr>
            </tbody>
            <tbody v-else>
                <tr v-for="it,i in details">
                    <td v-if="status == 'Repaired' || status == 'Success'"><input type="checkbox" :disabled="it.PromotionStatus != 0" :checked="checkedIds.indexOf(it.PKID)>=0" v-on:click="check(it.PKID)" /></td>
                    <td>{{i+1 +(pager.index - 1)*pager.size}}</td>
                    <td>{{it.MobileNumber}}</td>
                    <td>{{it.Carno}}</td>
                    <td>{{it.PromotionId}}</td>
                    <td>{{formate(it.StartTime)||'/'}}</td>
                    <td>{{formate(it.EndTime)||'/'}}</td>
                    <td>
                        <template v-if="it.PromotionId > 0">
                            <template v-if="it.PromotionStatus == 0">
                                <span>可用</span>
                            </template>
                            <template v-else-if="it.PromotionStatus == 1">
                                <span>已使用</span>
                            </template>
                            <template v-else-if="it.PromotionStatus == 3">
                                <span>已作废</span>
                            </template>
                            <template v-else>
                                <span>不可用</span>
                            </template>
                        </template>
                        <template v-else-if="it.Status === 'SUCCESS'">
                            <span style="color:#2ed721">成功</span>
                        </template>
                        <template v-else>
                            <span style="color:#FF0000">失败</span>
                        </template>
                    </td>
                    <td>                       
                        <template v-if="it.PromotionStatus == 1">
                            <span>于{{formate(it.PromotionUsedTime)}}已使用</span>
                        </template>
                        <template v-else>
                            <span style="color:#FF0000">{{it.Remarks}}</span>
                        </template>
                    </td>
                    <td>
                        <template v-if="it.PromotionId > 0 && it.PromotionStatus == 0">
                            <a href="javascript:void(0)" v-on:click="confirmInvalid(it.PromotionId)">作废</a>
                        </template>
                        <template v-else-if="it.Status!=='SUCCESS'">
                            <a href="javascript:void(0)" v-on:click="showdialog(it)">编辑</a>
                        </template>
                        <template v-else>
                            /
                        </template>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <artdialog v-if="show" ref="artdialog" v-on:save="updatePromotionDetail"
               v-on:close="show=false" :width="500" :height="'auto'" :title="'修改手机号'">
        <div style="width:100%; font-size:15px;">
            <div>
                <label style="display:inline-block; width:20%">手机号:</label>
                <input type="text" v-model="item.MobileNumber" style="height: 30px; width: 65%; margin: 5px 0; font-size: 15px;" />
            </div>
            <div>
                <label style="display:inline-block; width:20%">车牌号:</label>
                <input type="text" v-model="item.Carno" style="height: 30px; width: 65%; margin: 5px 0; font-size: 15px;" disabled="disabled" />
            </div>
        </div>
    </artdialog>
    <artdialog v-if="invalidDialog.show" v-on:save="invalidCodes"
               v-on:close="invalidDialog.show=false" :width="500" :height="'auto'" :title="'确认提醒'">
        <div style="width:100%; font-size:15px;">
            <span>确认作废选中的优惠券吗？</span>
        </div>
    </artdialog>
    <div style="width: 100%; text-align: center; margin-top: 20px;">
        <template v-if="status === 'Repaired'">
            <button type="button" style="height:30px;" v-on:click="confirmInvalid()" :disabled="checkedIds.length == 0">作废塞成功的优惠券</button>
            <p style="color:#d5d737">正在导入中...请耐心等待</p>
        </template>
        <template v-else-if="status === 'Success'">
            <button type="button" style="height:30px;" v-on:click="confirmInvalid()" :disabled="checkedIds.length == 0">作废塞成功的优惠券</button>
            <p style="color:#62dd20">全部导入成功, 无需操作</p>
        </template>
        <template v-else>
            <button type="button" style="height:30px;" v-on:click="approve" :disabled="disabled">对以上发券失败的手机号重试</button>
            <button type="button" style="height:30px;" v-on:click="confirmInvalid()" :disabled="checkedIds.length == 0">作废塞成功的优惠券</button>
            <p style="color:#FF0000">导入失败, 请根据提示修改然后点击上方按钮对发券失败的重试</p>
        </template>
    </div>
</div>
@section scripts{
    <script type="text/javascript" src="~/Scripts/vue.min.js"></script>
    <script src="/Scripts/artDialog6.0.4/dist/dialog-min.js"></script>
    <script src="/Scripts/artDialog6.0.4/dist/dialog-plus-min.js"></script>
    <script src="~/Scripts/vue.common.js"></script>
    <script type="text/javascript">
        var vm = new Vue({
            el: "#div",
            data: {
                checkedIds: [],
                isCheckAll: false,
                package: {},
                batchcode: "",
                total: 0,
                details: [],
                validCount: 0,
                pager: { index: 1, size: 20 },
                item: {},
                show: false,
                invalidDialog: {
                    show: false,
                    codes: []
                },
                loading: false,
                disabled: false,
                status: "",
                timer: ""
            },
            created: function () {
                this.batchcode = getQueryStringByName('batchcode');
                this.getPackageConfigSimpleInfo();
                this.getPromotionDetails();
            },
            mounted: function () {
                this.getExistsNotSuccessDataResult();
            },
            watch: {
                "pager.size": function () {
                    var vm = this;
                    if (vm.pager.index === 1) {
                        this.getPromotionDetails();
                    } else {
                        vm.pager.index = 1;
                    }
                },
                "pager.index": function () {
                    this.getPromotionDetails();
                },
                status: function () {
                    var vm = this;
                    if (vm.status === 'Repaired') {
                        vm.timer = setInterval(vm.getExistsNotSuccessDataResult, 10000);
                    }
                    else if (vm.timer) {
                        clearInterval(vm.timer);
                    }
                },
                details: function () {
                    var vm = this;
                    var count = 0;
                    vm.details.forEach(function (item, index) {
                        if (item.PromotionStatus == 0) {
                            count++;
                        }
                    });
                    vm.validCount = count;
                }
            },
            methods: {
                getPromotionDetails: function () {
                    var vm = this;
                    vm.loading = true;
                    $.get("GetPromotionDetails", {
                        index: vm.pager.index,
                        size: vm.pager.size,
                        batchcode: vm.batchcode
                    }, function (rsp) {
                        vm.total = rsp.total || 0;
                        vm.details = rsp.data || [];
                        setTimeout(function () {
                            vm.loading = false;
                        }, 200)
                    }).error(function (rsp) {
                        vm.details = [];
                        setTimeout(function () {
                            vm.loading = false;
                        }, 200)
                    });
                },
                showdialog: function (it) {
                    var vm = this;
                    vm.item.MobileNumber = it.MobileNumber;
                    vm.item.Carno = it.Carno;
                    vm.item.PKID = it.PKID;
                    vm.show = true;
                },
                updatePromotionDetail: function () {
                    var vm = this;
                    if (!confirm("确认修改手机号?")) {
                        return;
                    }
                    $.post("UpdatePromotionDetail", {
                        pkid: vm.item.PKID,
                        mobileNumber: vm.item.MobileNumber
                    }, function (result) {
                        if (result.status) {
                            alert("操作成功!");
                            vm.$refs.artdialog.close();
                            vm.item.MobileNumber = "";
                            vm.item.Carno = "";
                            vm.item.PKID = "";
                            vm.getPromotionDetails();
                        }
                        else {
                            alert("操作失败!" + (result.msg || ""));
                        }
                    }).error(function (response) {
                        alert("操作失败!");
                    });
                    
                },
                getPackageConfigSimpleInfo: function () {
                    var vm = this;
                    $.get("GetPackageConfigSimpleInfo", { batchcode: vm.batchcode }, function (rsp) {
                        vm.package = rsp.data || {};
                    });
                },
                approve: function () {
                    var vm = this;
                    if (!confirm("是否确认操作?")) {
                        return;
                    }
                    vm.disabled = true;
                    $.post("UpdateFileTaskStatus", {
                        batchcode: vm.batchcode,
                    }, function (result) {
                        if (result.status) {
                            alert("操作成功!请耐心等待");
                            vm.status = 'Repaired';
                        }
                        else {
                            alert("操作失败!");
                        }
                        vm.disabled = false;
                    }).error(function (response) {
                        alert("操作失败!");
                        vm.disabled = false;
                    });
                },
                getExistsNotSuccessDataResult: function () {
                    var vm = this;
                    $.get("GetFileTaskStatus", {
                        batchcode: vm.batchcode
                    }, function (rsp) {
                        vm.status = rsp.data;
                    });
                },
                checkall: function () {
                    console.log(this.checkedIds);
                    this.isCheckAll = !this.isCheckAll;
                    var isCheckAll = this.isCheckAll;
                    var checkedIds = this.checkedIds;
                    this.details.forEach(function (item, index) {
                        if (item.PromotionStatus == 0) {
                            var index = checkedIds.indexOf(item.PKID);
                            if (index >= 0) {
                                if (!isCheckAll) {
                                    checkedIds.splice(index, 1);
                                }
                            } else {
                                if (isCheckAll) {
                                    checkedIds.push(item.PKID);
                                }

                            }
                        }
                    });
                    console.log(this.checkedIds);
                },
                check: function (id) {
                    var index = this.checkedIds.indexOf(id);

                    if (index >= 0) {
                        this.checkedIds.splice(index, 1);
                    } else {
                        this.checkedIds.push(id);
                    }
                    this.isCheckAll = this.checkedIds.length == this.validCount;
                },
                confirmInvalid: function (id) {
                    console.log(1);
                    var ids = [];
                    if (id) {
                        ids.push(id);
                    } else {
                        var vm = this;
                        vm.details.forEach(function (detail) {
                            if (vm.checkedIds.indexOf(detail.PKID) >= 0) {
                                ids.push(detail.PromotionId);
                            }
                        });
                    }

                    this.invalidDialog.show = true;
                    this.invalidDialog.codes = ids;
                    console.log(ids);
                },
                invalidCodes: function () {
                    var vm = this;
                    $.post("InvalidCodes", {
                        codeStr: JSON.stringify(vm.invalidDialog.codes)
                    }, function (result) {
                        if (result.status) {
                            alert("操作成功!");
                            vm.invalidDialog.show = false;
                            vm.checkedIds = [];
                            vm.isCheckAll = false;
                            vm.getPromotionDetails();
                        }
                        else {
                            alert("操作失败!" + (result.msg || ""));
                            vm.invalidDialog.show = false;
                            vm.checkedIds = [];
                            vm.isCheckAll = false;
                            vm.getPromotionDetails();
                        }
                    }).error(function (response) {
                        alert("操作失败!");
                        vm.invalidDialog.show = false;
                        vm.checkedIds = [];
                        vm.isCheckAll = false;
                        vm.getPromotionDetails();
                    });
                },
                formate: function (dateStr) {
                    if (!dateStr) {
                        return "";
                    }
                    var date = eval('new ' + dateStr.substr(1, dateStr.length - 2));
                    var year = date.getFullYear();
                    var month = date.getMonth() + 1;
                    var day = date.getDate();
                    var hour = date.getHours();
                    if (hour < 10)
                        hour = '0' + hour;
                    var minutes = date.getMinutes();
                    if (minutes<10)
                        minutes = '0' + minutes;

                    return year + "年" + month + "月" + day + "日" + " " + hour + ":" + minutes;
                }
            }
        });

        function getQueryStringByName(name) {
            var result = location.search.match(new RegExp("[\?\&]" + name + "=([^\&]+)", "i"));
            if (result == null || result.length < 1) {
                return "";
            }
            return result[1];
        }
        function formatBrands(brands) {
            var oilBrands = [];
            if (brands) {
                if (brands.indexOf('[') > -1) {
                    //JOSN Str
                    oilBrands = JSON.parse(brands).map(function (item) {
                        var obj = {};
                        obj.Brand = item.Brand;
                        obj.Grades = (item.Grades || []).map(function (grade) {
                            switch (grade) {
                                case 1:
                                    return '矿物油';
                                case 2:
                                    return '半合成';
                                case 3:
                                    return '全合成';
                                default:
                                    return '';
                            }
                        });
                        return obj;
                    });
                }
                else {
                    //old data
                    oilBrands = brands.split(',').filter(function (x) {
                        return !!x;
                    }).map(function (x) {
                        return { Brand: x, Grades: ['矿物油', '半合成', '全合成'] };
                    });
                }
            }
            return oilBrands;
        }

    </script>
}
