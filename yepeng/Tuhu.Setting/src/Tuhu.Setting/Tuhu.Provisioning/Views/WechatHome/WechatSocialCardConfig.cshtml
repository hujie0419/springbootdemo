@{
    ViewBag.Title = "社交立减金代金券配置";
    Layout = "~/Views/Shared/_Index.cshtml";
}
@section link{
    <style>
        .tabEdit th {
            text-align: right;
        }

        input[readonly],
        input[disabled],
        button[disabled],
        textarea[disabled],
        select[disabled] {
            cursor: not-allowed !important;
        }

        .invalid, .ng-invalid {
            border: 1px solid red !important;
        }
    </style>
}
<div ng-app="MainModule" ng-controller="MainCtrl" id="divMain" style="padding: 1em;">
    <header>
        <div style="float: right">
            <button type="button" class="btn btn-primary" ng-click="load(1)"><span class="glyphicon glyphicon-refresh"></span></button> &nbsp;&nbsp;&nbsp;
            <button type="button" class="btn btn-primary" ng-click="viewLog()">查看日志</button>&nbsp;&nbsp;
            <button type="button" ng-click="onAdd()" class="btn btn-primary">创建代金券</button>
        </div>
    </header>
    <section style="clear: both;margin-top:1em; padding-top: 1em;">
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>卡券ID</th>
                    <th>卡券名称</th>
                    <th>卡券面额（分）</th>
                    <th>使用条件（分）</th>
                    <th>卡券有效期</th>
                    <th>每人可领取数量</th>
                    <th>操作</th>
                </tr>
            </thead>
            <tbody>
                <tr ng-repeat="item in list">
                    <td ng-bind="::item.CardId"></td>
                    <td ng-bind="::item.CardName"></td>
                    <td ng-bind="::item.CardAmount"></td>
                    <td ng-bind="::item.CardCondition"></td>
                    <td ng-bind="item.FixedTerm > 0?'自领取之后 '+item.FixedTerm+' 天内有效':'从 '+item.BeginTime+' 到 '+item.EndTime"></td>
                    <td ng-bind="::item.CardGetLimit"></td>
                    <td>
                        <button type="button" ng-click="onView($index)" class="btn btn-primary">查看</button> &nbsp;
                        <button type="button" class="btn btn-primary" ng-click="onEdit($index)">复制</button>
                    </td>
                </tr>
            </tbody>
        </table>
    </section>
    <footer style="line-height: 1.8em;font-size:1.2em;">
        <ul class="pagination" style="display: inline;">
            <li ng-class="{disabled:pageIndex===1}">
                <a href="javascript:void(0)" ng-click="loadData(pageIndex-1)" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            <li>
                <a href="javascript:void(0)" ng-bind="pageIndex">
                    <span class="sr-only" ng-bind="pageIndex"></span>
                </a>
            </li>
            <li ng-class="{disabled:list.length<pageSize}">
                <a href="javascript:void(0)" ng-click="loadData(pageIndex+1)" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
        &nbsp;&nbsp;
        <label for="ddlPageSize">
            每页卡券数
        </label>&nbsp;
        <select id="ddlPageSize" ng-model="pageSize" convert-to-number>
            <option value="10">10</option>
            <option value="20">20</option>
            <option value="50">50</option>
        </select>
    </footer>
    <div id="hiddenEditPanel" style="display: none; padding: 1em;">
        <div>
            <table class="tabEdit table table-bordered">
                <tr>
                    <th>商户Logo(300*300)</th>
                    <td>
                        <img style="width:100px" ng-show="editItem.LogoUrl && editItem.LogoUrl !== ''" ng-src="{{editItem.LogoUrl}}" alt="logo" /> &nbsp;
                        <button ng-show="editItem.IsNew" type="button" class="btn btn-default btnUploadImage">上传图片</button>
                    </td>
                </tr>
                <tr>
                    <th>商户名称</th>
                    <td>
                        <input ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" ng-model="editItem.MerchantName" required="required" maxlength="12" type="text" />
                    </td>
                </tr>
                <tr>
                    <th>卡券名称</th>
                    <td>
                        <input ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" ng-model="editItem.CardName" required="required" type="text" maxlength="16" placeholder="最多9个汉字，如满20减5代金券" />
                    </td>
                </tr>
                <tr>
                    <th>卡券背景颜色</th>
                    <td>
                        <span style="width: 50px; height: 20px; display: inline-block;background-color:{{getColorFromDic(editItem.CardColor)}}"></span>
                        <select required="required" id="ddlColor" ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" ng-model="editItem.CardColor" ng-change="onColorSelected()">
                            <option value="">请选择颜色</option>
                            <option style="width: 100px; height: 20px;background-color:{{item.value}}" ng-repeat="item in colorDic" ng-value="item.key">{{item.key}}</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <th>卡券说明</th>
                    <td>
                        <textarea required="required" ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" ng-model="editItem.CardDescription"></textarea>
                    </td>
                </tr>
                <tr>
                    <th>客服电话</th>
                    <td>
                        <input required="required" ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" type="text" ng-model="editItem.CutomerServiceTelphone" />
                    </td>
                </tr>
                <tr>
                    <th>卡券面额</th>
                    <td>
                        <input required="required" ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" convertToNumber type="number" min="1" ng-model="editItem.CardAmount" /> 分
                    </td>
                </tr>
                <tr>
                    <th>使用条件</th>
                    <td>
                        <input ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" convertToNumber type="number" min="1" ng-model="editItem.CardCondition" /> 分
                    </td>
                </tr>
                <tr>
                    <th>卡券有效期</th>
                    <td>
                        <div>
                            有效期类型：
                            <input required="required" ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" type="radio" ng-model="editItem.CardDateInfoType" value="DATE_TYPE_FIX_TIME_RANGE" />固定日期区间 &nbsp;&nbsp;
                            <input required="required" ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" type="radio" ng-model="editItem.CardDateInfoType" value="DATE_TYPE_FIX_TERM" />固定时长（自领取之后按天算）<br />
                        </div>
                        <div>
                            开始时间 <input ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" ng-model="editItem.BeginTime" id="beginTime" class="beginTime" type="text" onfocus="WdatePicker({dateFmt:'yyyy-MM-dd HH:mm:ss',minDate:'%y-%M-%d %H:%m:%s'})" /> --
                            结束时间 <input ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" type="datetime" ng-model="editItem.EndTime" class="endTime" type="text" onfocus="WdatePicker({dateFmt:'yyyy-MM-dd HH:mm:ss',minDate:'#F{$dp.$D(\'beginTime\',{d:0})}'})" />
                        </div>
                        <div ng-show="editItem.CardDateInfoType === 'DATE_TYPE_FIX_TERM'">
                            <span style="color:red">*</span>自领取之后
                            <input ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" string-to-number type="number" ng-model="editItem.FixedTerm" min="1" /> 天内有效 <br />
                            <span style="color:red">*</span>自领取后 <input ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" type="number" string-to-number ng-model="editItem.FixedBeginTerm" min="0" value="0" /> 天后生效
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>按钮文字</th>
                    <td>
                        <input ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" required="required" type="text" ng-model="editItem.CardButtonText" placeholder="如：立即使用" />
                    </td>
                </tr>
                <tr>
                    <th>按钮跳转小程序</th>
                    <td>
                        <select required="required" ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" ng-model="editItem.CardButtonToWxApp">
                            <option value="">请选择小程序</option>
                            <option ng-repeat="item in wxAppList" value="{{item.OriginalId}}@Html.Raw("@app")">{{item.DisplayName}}</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <th>小程序跳转路径</th>
                    <td>
                        <input required="required" ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" type="text" ng-model="editItem.CardButtonToPath" />
                    </td>
                </tr>
                <tr>
                    <th>卡券是否可以转增</th>
                    <td>
                        <input ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" type="checkbox" ng-model="editItem.IsCanGiveToFriend" />
                    </td>
                </tr>
                <tr>
                    <th>卡券是否可以分享</th>
                    <td>
                        <input ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" type="checkbox" ng-model="editItem.IsCanShare" />
                    </td>
                </tr>
                <tr>
                    <th>是否可与其他优惠共享</th>
                    <td>
                        <input ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" type="checkbox" ng-model="editItem.IsCanUseWithOtherDiscount" />
                    </td>
                </tr>
                <tr>
                    <th>卡券库存</th>
                    <td>
                        <input convertToNumber required="required" ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" type="number" min="1" max="100000000" ng-model="editItem.CardStockQuantity" placeholder="不超过100000000" />
                    </td>
                </tr>
                <tr>
                    <th>每人可领券数量</th>
                    <td>
                        <input convertToNumber required="required" ng-readonly="!editItem.IsNew" ng-disabled="!editItem.IsNew" type="number" ng-model="editItem.CardGetLimit" min="1" />
                    </td>
                </tr>
            </table>
            <input type="file" style="visibility:hidden" accept="image/*" name="file" id="file" />
        </div>
    </div>
</div>
</div>
@section script{
    <script src="~/Scripts/layer/layer.js"></script>
    <script src="https://cdn.bootcss.com/angular.js/1.6.9/angular.min.js"></script>
    <script src="~/Scripts/ajaxfileupload.js"></script>
    <script src="~/Scripts/My97DatePicker/WdatePicker.js"></script>
    <script type="text/javascript">
        angular.module('MainModule', [])
            .directive('stringToNumber',
                function() {
                    return {
                        require: 'ngModel',
                        link: function(scope, element, attrs, ngModel) {
                            ngModel.$parsers.push(function(value) {
                                return '' + value;
                            });
                            ngModel.$formatters.push(function(value) {
                                return parseInt(value);
                            });
                        }
                    };
                })
            .directive('convertToNumber',
                function() {
                    return {
                        require: 'ngModel',
                        link: function(scope, element, attrs, ngModel) {
                            ngModel.$parsers.push(function(val) {
                                return parseInt(val, 10);
                            });
                            ngModel.$formatters.push(function(val) {
                                return '' + val;
                            });
                        }
                    };
                })
            .controller("MainCtrl",
                [
                    "$scope", "$http", function($scope, $http) {
                        $scope.loading = 0;
                        $scope.pageIndex = 1;
                        $scope.pageSize = 20;
                        $scope.editItem = {};
                        $scope.colorDic = [
                            { "key": "Color010", "value": "#63b359" },
                            { "key": "Color020", "value": "#2c9f67" },
                            { "key": "Color030", "value": "#509fc9" },
                            { "key": "Color040", "value": "#5885cf" },
                            { "key": "Color050", "value": "#9062c0" },
                            { "key": "Color060", "value": "#d09a45" },
                            { "key": "Color070", "value": "#e4b138" },
                            { "key": "Color080", "value": "#ee903c" },
                            { "key": "Color081", "value": "#f08500" },
                            { "key": "Color082", "value": "#a9d92d" },
                            { "key": "Color090", "value": "#dd6549" },
                            { "key": "Color100", "value": "#cc463d" },
                            { "key": "Color101", "value": "#cf3e36" },
                            { "key": "Color102", "value": "#5E6671" }
                        ];
                        $scope.wxAppList = [];
                        $scope.list = [];

                        // onInit
                        this.$onInit = function() {
                            $scope.loading = layer.load();
                            $http.get("/WechatHome/GetSocialWxAppList")
                                .then(function(response) {
                                    if (response.data) {
                                        $scope.wxAppList = response.data;
                                    }
                                });
                            $http.get("/WechatHome/WechatSocialCardConfigList?pageIndex=" +
                                    $scope.pageIndex +
                                    "&pageSize=" +
                                    $scope.pageSize)
                                .then(function(response) {
                                    layer.close($scope.loading);
                                    if (response.data) {
                                        $scope.list = response.data;
                                    }
                                });

                        };
                        $scope.load = function(pIndex) {
                            if (!pIndex) {
                                pIndex = 1;
                            }
                            if (pIndex <= 0) {
                                layer.msg("已经是第一页了");
                                return;
                            }
                            if ($scope.list.length < $scope.pageSize && pIndex > $scope.pageIndex) {
                                layer.msg("已经是最后一页了~");
                                return;
                            }
                            $http.get("/WechatHome/WechatSocialCardConfigList?pageIndex=" +
                                    pIndex +
                                    "&pageSize=" +
                                    $scope.pageSize)
                                .then(function(response) {
                                    layer.close($scope.loading);
                                    if (response.status === 200) {
                                        if (response.data) {
                                            $scope.pageIndex = pIndex;
                                            $scope.list = response.data;
                                        } else {
                                            layer.msg("没有更多数据了");
                                        }
                                    } else {
                                        layer.alert("服务器出错");
                                    }
                                });
                        };

                        $scope.onAdd = function (item) {
                            if (item) {
                                $scope.editItem = item;
                            } else {
                                $scope.editItem = {};
                            }
                            $scope.editItem.IsNew = true;
                            layer.open({
                                type: 1,
                                title: "创建卡券",
                                area: ["720px", "600px"],
                                content: $("#hiddenEditPanel"),
                                btn: ["保存", "取消"],
                                yes: function(lIndex) {
                                    $scope.editItem.BeginTime = $(".beginTime").eq(0).val();
                                    $scope.editItem.EndTime = $(".endTime").eq(0).val();
                                    $scope.editItem.EndDateTime = $(".endDateTime").eq(0).val();
                                    var isValid = $scope.onValidate();
                                    if (!isValid) {
                                        return;
                                    }
                                    layer.close(lIndex);
                                    $scope.onSave();
                                },
                                cancel: function() {
                                }
                            });
                        };
                        $scope.onView = function(index) {
                            $scope.editItem = $scope.list[index];
                            layer.open({
                                type: 1,
                                title: "卡券信息",
                                area: ["720px", "600px"],
                                content: $("#hiddenEditPanel")
                            });
                        }

                        $scope.onEdit = function(index) {
                            $scope.editItem = angular.copy($scope.list[index]);
                            $scope.editItem.IsNew = true;
                            layer.open({
                                type: 1,
                                title: "创建卡券",
                                area: ["720px", "600px"],
                                content: $("#hiddenEditPanel"),
                                btn: ["保存", "取消"],
                                yes: function(lIndex) {
                                    $scope.editItem.BeginTime = $(".beginTime").eq(0).val();
                                    $scope.editItem.EndTime = $(".endTime").eq(0).val();
                                    $scope.editItem.EndDateTime = $(".endDateTime").eq(0).val();
                                    var isValid = $scope.onValidate();
                                    if (!isValid) {
                                        return;
                                    }
                                    layer.close(lIndex);
                                    $scope.onSave();
                                },
                                cancel: function() {
                                }
                            });
                        }

                        $scope.getColorFromDic = function(colorKey) {
                            if (colorKey) {
                                for (var i = 0; i < $scope.colorDic.length; i++) {
                                    if ($scope.colorDic[i].key === colorKey) {
                                        return $scope.colorDic[i].value;
                                    }
                                }
                            }
                            return "#fff";
                        }
                        $scope.viewLog = function() {
                            layer.open({
                                type: 2,
                                title: "操作日志",
                                area: ["800px", "600px"],
                                content: '/CommonConfigLog/ListLoger?objectType=WechatSocialCardConfig',
                                btn: ["确定"],
                                btn1: function(index) {
                                    layer.close(index);
                                }
                            });
                        }
                        // validate input parameters
                        $scope.onValidate = function() {
                            //
                            if (!$scope.editItem.LogoUrl) {
                                layer.alert("Logo不能为空，请上传Logo图片");
                                return false;
                            }
                            if (!$scope.editItem.MerchantName) {
                                layer.alert("商户名称不能为空");
                                return false;
                            }
                            if (!$scope.editItem.CardName) {
                                layer.alert("卡券名称不能为空");
                                return false;
                            }
                            if (!$scope.editItem.CardColor) {
                                layer.alert("卡券背景颜色不能为空");
                                return false;
                            }
                            if (!$scope.editItem.CardDescription) {
                                layer.alert("卡券说明不能为空");
                                return false;
                            }
                            if (!$scope.editItem.CutomerServiceTelphone) {
                                layer.alert("客服电话不能为空");
                                return false;
                            }
                            if (!$scope.editItem.CardAmount) {
                                layer.alert("卡券面额不能为空");
                                return false;
                            } else {
                                if ($scope.editItem.CardAmount != parseInt($scope.editItem.CardAmount)) {
                                    layer.alert("卡券面额只能为整数");
                                    return false;
                                }
                            }
                            if (!$scope.editItem.CardCondition) {
                                layer.alert("卡券使用条件不能为空");
                                return false;
                            } else {
                                if ($scope.editItem.CardCondition != parseInt($scope.editItem.CardCondition)) {
                                    layer.alert("卡券使用条件只能为整数");
                                    return false;
                                } else {
                                    if ($scope.editItem.CardCondition < $scope.editItem.CardAmount) {
                                        layer.alert("卡券使用条件须大于卡券面额");
                                        return false;
                                    }
                                }
                            }

                            if (!$scope.editItem.CardDateInfoType) {
                                layer.alert("卡券有效期类型不能为空");
                                return false;
                            }
                            if (!$scope.editItem.BeginTime) {
                                layer.alert("卡券开始时间不能为空");
                                return false;
                            }

                            if ($scope.editItem.CardDateInfoType === 'DATE_TYPE_FIX_TIME_RANGE') {
                                $scope.editItem.FixedTerm = 0;
                                if (!$scope.editItem.EndTime) {
                                    layer.alert("卡券结束时间不能为空");
                                    return false;
                                }
                            } else {
                                $scope.editItem.EndDateTime = $scope.editItem.EndTime;
                                if (!$scope.editItem.FixedTerm) {
                                    layer.alert("卡券领取后几天后开始有效不能为空");
                                    return false;
                                } else {
                                    if ($scope.editItem.FixedTerm != parseInt($scope.editItem.FixedTerm)) {
                                        layer.alert("卡券领取后几天后开始有效必须是整数");
                                        return false;
                                    } else {
                                        if ($scope.editItem.FixedTerm <= 0) {
                                            layer.alert("卡券领取后几天后开始有效必须大于0");
                                            return false;
                                        }
                                    }
                                }
                            }

                            if (!$scope.editItem.CardButtonText) {
                                layer.alert("按钮文字不能为空");
                                return false;
                            }
                            if (!$scope.editItem.CardColor) {
                                layer.alert("按钮跳转小程序不能为空，请选择");
                                return false;
                            }
                            if (!$scope.editItem.CardButtonToPath) {
                                layer.alert("小程序跳转路径不能为空");
                                return false;
                            }
                            if (!$scope.editItem.CardStockQuantity) {
                                layer.alert("卡券库存不能为空");
                                return false;
                            } else {
                                if ($scope.editItem.CardStockQuantity != parseInt($scope.editItem.CardStockQuantity)) {
                                    layer.alert("卡券库存必须为整数");
                                    return false;
                                } else {
                                    if ($scope.editItem.CardStockQuantity <= 0 ||
                                        $scope.editItem.CardStockQuantity > 100000000) {
                                        layer.alert("卡券库存必须在1~100000000之间");
                                        return false;
                                    }
                                }
                            }
                            if (!$scope.editItem.CardGetLimit) {
                                layer.alert("每人可领券数量不能为空");
                                return false;
                            } else {
                                if ($scope.editItem.CardStockQuantity != parseInt($scope.editItem.CardStockQuantity)) {
                                    layer.alert("每人可领券数量必须为整数");
                                    return false;
                                }
                            }
                            return true;
                        };
                        $scope.onSave = function() {
                            $scope.loading = layer.load();
                            $http.post('@Url.Action("SaveWechatSocialCardConfig")',
                                $.param($scope.editItem),
                                {
                                    headers: {
                                        'content-type': 'application/x-www-form-urlencoded'
                                    }
                                }).then(function(response) {
                                layer.close($scope.loading);
                                if (response.status === 200) {
                                    if (!response.data) {
                                        layer.alert("保存成功",
                                            function() {
                                                location.reload();
                                            });
                                    } else {
                                        layer.alert(response.data, { title: "错误" }, function (index) {
                                            layer.close(index);
                                            $scope.onAdd($scope.editItem);
                                        });
                                    }
                                } else {
                                    layer.alert("服务器出错", { title: "错误" }, function (index) {
                                        layer.close(index);
                                        $scope.onAdd($scope.editItem);
                                    });
                                }
                            });
                        };
                    }
                ]);

        $(".btnUploadImage").click(function() {
            $("#file").click();
        });
        $("#file").change(function() {
            upload();
        });

        function upload() {
            if (!$("#file").val()) {
                return;
            }
            $.ajaxFileUpload(
                {
                    url: '/UserTaskSetting/UploadTaskImage', //需要链接到服务器地址//
                    secureuri: false,
                    fileElementId: 'file', //文件选择框的id属性
                    dataType: 'text', //服务器返回的格式，可以是json
                    async: false,
                    success: function(data, status) {
                        $("#file").change(function() {
                            upload();
                        });
                        if (data == -1) {
                            layer.alert("仅支持jpg, gif, png, jpeg格式");
                        }
                        else if (data == -2 || data == -99) {
                            layer.alert("上传失败");
                        }
                        else if (data == -3) {
                            layer.alert("图片限制100kb以内");
                        }
                        else {
                            var scope = angular.element(document.querySelector("#divMain")).scope();
                            scope.editItem.LogoUrl = data;
                            scope.$apply();
                        }
                    }
                });
        }
    </script>

}