@{
    Layout = null;
}
@using Tuhu.Provisioning.DataAccess.Entity;
@using Tuhu.Component.Common.Models;
@using Tuhu.Provisioning.Models
@using Newtonsoft.Json
@model Tuple<ListModel<ExchangeCodeDetail>, List<DepartmentAndUse>>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
    <style>
        .hint {
            color: red;
        }
        .custom-combobox {
            position: relative;
            display: inline-block;
        }

        .custom-combobox-toggle {
            position: absolute;
            top: 0;
            bottom: 0;
            margin-left: -1px;
            padding: 0;
            /* 支持： IE7 */
            *height: 1.7em;
            *top: 0.1em;
        }

        .custom-combobox-input {
            margin: 0;
            padding: 0.3em;
        }
    </style>
    @*<script src="~/Scripts/jquery-1.7.1.min.js"></script>*@

    <script type="text/javascript">
        var TempArr = [];//存贮option
        function GetUseList(data) {
            var DepartMentId = $("[name=DepartMentId]").val()
            if (!DepartMentId) {
                return;
            }
            var filterDiv = $("#IntentionId");
            filterDiv.empty();
            $.each(data, function (i, row) {
                if (row["ParentSettingId"] == DepartMentId) {
                    filterDiv.append($("<option></option>").val(row["SettingId"]).text(row["DisplayName"]))
                }
            });
        };

        $(function () {
            $("#loadgif").show();
            var typeid = $("#typeid").val();
           
            //debugger
            $.ajax({    
                url: "/Promotion/SelectDropDownList",
                data: "",
                type: "post",
                success: function (data) {
                    var Name = '';
                    var PromotionType = '';
                    var datas = eval("(" + data + ")");
                    var $tdss = $('<option value="请选择">请选择</option>');
                    $("#CodeType").append($tdss);
                    for (var i = 0; i < datas.length; i++) {
                        var $tds = $('<option value="' + datas[i].PKID + '" PromotionType="' + datas[i].PromotionType + '">' + datas[i].Name + '</option>');
                        if (datas[i].PKID == typeid) {
                            Name = datas[i].Name;
                            PromotionType = datas[i].PromotionType;
                        }
                        //else {
                        //    $tds = $('<option value="' + datas[i].PKID + '" PromotionType="' + datas[i].PromotionType + '">' + datas[i].Name + '</option>');
                        //}
                        $("#CodeType").append($tds); 
                    }
                    $("#CodeType").val(typeid);
                    if (Name) {
                        $('.custom-combobox input').val(Name)
                    }
                    if (PromotionType != 3) {
                        $("#MinMoney").attr("disabled", false);
                    }
                    else {
                        $("#MinMoney").attr("disabled", true);
                        $("#MinMoney").val("0");
                    }
                }
            });
            $("#loadgif").hide();
           
            //$("CodeType").find("option[value='" + typeid+"']").attr("selected", true);
            //var isaid = $("#ISAid").val();
            //$("#IsActive").val(isaid);
        });

        $(function () {
            $(document).ready(function () {
                $("#CodeStartTime").datepicker({
                    controlType: 'select',
                    dateFormat: "yy.mm.dd"
                });
                $("#CodeEndTime").datepicker({
                    controlType: 'select',
                    dateFormat: "yy.mm.dd"
                });
            });
        });
        $(function () {
            //if ($("#MinMoney").val() == "0") {
            //    $("#MinMoney").attr("readonly", "readonly");
            //} if ($("#Money").val() == 0) {
            //    $("#Money").attr("readonly", "readonly");
            //}

            //$("#CodeType").change(function () {

            //    if ($("#CodeType").val() == "99") {
            //        $("#MinMoney").val("0");
            //        $("#Money").val("0");
            //        $("#MinMoney").attr("readonly", "readonly");
            //        $("#Money").attr("readonly", "readonly");
            //    } else {
            //        $("#MinMoney").val("");
            //        $("#Money").val("");
            //        $("#MinMoney").removeAttr("readonly", "readonly");
            //        $("#Money").removeAttr("readonly", "readonly");
            //    }
            //});
        });      

        (function ($) {
            $.widget("custom.combobox", {
                _create: function () {
                    this.wrapper = $("<span>")
                        .addClass("custom-combobox")
                        .insertAfter(this.element);

                    this.element.hide();
                    this._createAutocomplete();
                    this._createShowAllButton();
                },

                _createAutocomplete: function () {
                    var selected = this.element.children(":selected"),
                        value = selected.val() ? selected.text() : "";

                    this.input = $("<input>")
                        .appendTo(this.wrapper)
                        .val(value)
                        .attr("title", "")
                        .addClass("custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left")
                        .autocomplete({
                            delay: 0,
                            minLength: 0,
                            source: $.proxy(this, "_source")
                        })
                        /* plugin not present
                        .tooltip({
                            tooltipClass: "ui-state-highlight"
                        })*/
                        ;

                    this.input.bind('autocompleteselect', function (event, ui) {
                        ui.item.option.selected = true;
                        var PromotionType = $(ui.item.option).attr("PromotionType");
                        if (PromotionType != 3) {
                            $("#MinMoney").attr("disabled", false);
                        }
                        else {
                            $("#MinMoney").attr("disabled", true);
                            $("#MinMoney").val("0");
                        }
                        $(this).trigger("select", event, {
                            item: ui.item.option
                        });
                        $(this).trigger("select", event, {
                            item: ui.item.option
                        });
                    });

                    this.input.bind('autocompletechange', function (event, ui) {

                        // Selected an item, nothing to do
                        if (ui.item) {
                            return;
                        }

                        // Search for a match (case-insensitive)
                        var value = this.input.val(),
                            valueLowerCase = value.toLowerCase(),
                            valid = false;
                        this.element.children("option").each(function () {
                            if ($(this).text().toLowerCase() === valueLowerCase) {
                                this.selected = valid = true;
                                return false;
                            }
                        });

                        // Found a match, nothing to do
                        if (valid) {
                            return;
                        }

                        // Remove invalid value
                        this.input.val("")
                            .attr("title", value + " didn't match any item")
                /*.tooltip("open")*/;
                        this.element.val("");
                        this._delay(function () {
                            this.input /*.tooltip("close")*/
                                .attr("title", "");
                        }, 2500);
                        this.input.data("ui-autocomplete").term = "";
                    });

                    /* using delegate instead
                    this._on( this.input, {
                      autocompleteselect: function( event, ui ) {
                        ui.item.option.selected = true;
                        this._trigger( "select", event, {
                          item: ui.item.option
                        });
                      },
        
                      autocompletechange: "_removeIfInvalid"
                    });*/
                },

                _createShowAllButton: function () {
                    var input = this.input,
                        wasOpen = false;

                    $("<a>")
                        .attr("tabIndex", -1)
                        .attr("title", "Show All Items")
                        //.tooltip()
                        .appendTo(this.wrapper)
                        .button({
                            icons: {
                                primary: "ui-icon-triangle-1-s"
                            },
                            text: false
                        })
                        .removeClass("ui-corner-all")
                        .addClass("custom-combobox-toggle ui-corner-right")
                        .mousedown(function () {
                            wasOpen = input.autocomplete("widget").is(":visible");
                        })
                        .click(function () {
                            input.focus();

                            // Close if already visible
                            if (wasOpen) {
                                return;
                            }

                            // Pass empty string as value to search for, displaying all results
                            input.autocomplete("search", "");
                        });
                },

                _source: function (request, response) {
                    var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");
                    response(this.element.children("option").map(function () {
                        var text = $(this).text();
                        if (this.value && (!request.term || matcher.test(text))) return {
                            label: text,
                            value: text,
                            option: this
                        };
                    }));
                },

                _destroy: function () {
                    this.wrapper.remove();
                    this.element.show();
                }
            });
        })(jQuery);

        $(function () {
            $("#CodeType").combobox();
            $("#toggle").click(function () {
                $("#CodeType").toggle();
            });
        });

        function BeforeSubmit() {
            //debugger
            if (parseFloat($("#Validity").val()) == 0) {
                $("#Validity").val("");
            }
            if ($("#Validity").val() == "" && $("#CodeStartTime").val() != "" && $("#CodeEndTime").val() != "") {
                //alert("兑换有效天数与开始生效时间只能选填一项");
                //$("#Validity").val() == "";
                //$("#CodeStartTime").val() == "";
                //$("#CodeEndTime").val() == "";

                if ($("#CodeStartTime").val() == "") {
                    alert("请填写开始生效时间！");
                    return false;
                }
                if ($("#CodeEndTime").val() == "") {
                    alert("请填写结束生效时间！");
                    return false;
                }
                if ($("#CodeType").val() == "-1") {
                    alert("请选择优惠券类型！");
                    return false;
                }
                if ($("#Money").val() == "") {
                    alert("请填写金额！");
                    return false;
                }

                if (isNaN($("#Money").val())) {
                    alert("金额必须为数字！");
                    return false;
                }
                if (isNaN($("#MinMoney").val())) {
                    alert("限制最低金额必须为数字！");
                    return false;
                }
                if ($("#MinMoney").val() == "") {
                    alert("请填写限制最低金额！");
                    return false;
                }
                if ($("#MinMoney").val() > 10000) {
                    alert("限制最低金额最高为10000");
                    return false;
                }
                if ($("#Number").val() == "") {
                    alert("请填写数量！");
                    return false;
                }
                if ($("#IsActive").val() == "Null") {
                    alert("请选择是否生效！");
                    return false;
                }

                if ($("#Number").val() <= 0 || $("#Number").val() % 1 !== 0) {
                    alert("数量必须大于0并为整数！");
                    return false;
                }
                if (isNaN($("#Number").val())) {
                    alert("数量必须为数字！");
                    return false;
                }
                if (!$("#Number").val().match(new RegExp("^[0-9]+$"))) {
                    alert("数量必须为整数！");
                    return false;
                }


                var dateAStr = $("#CodeStartTime").val();

                var arrA = dateAStr.split(".");

                var dateA = new Date(arrA[0], arrA[1], arrA[2]);

                var dateAT = dateA.getTime();

                var dateBStr = $("#CodeEndTime").val();

                var arrB = dateBStr.split(".");

                var dateB = new Date(arrB[0], arrB[1], arrB[2]);

                var dateBT = dateB.getTime();

                if (dateAT >= dateBT) {
                    alert("开始生效时间不能大于等于结束生效时间！");
                    return false;
                }

                if ($("#Describe").val() == "") {
                    alert("请填写优惠券描述！");
                    return false;
                }
                if ($("#CodeType").val() == "请选择") {
                    alert("请选择优惠券类型！");
                    return false;
                }


                var Money = $("#Money").val();
                var MinMoney = $("#MinMoney").val();
                //debugger
                var PromotionType = $('#CodeType').find("option:selected").attr('PromotionType');
                if (PromotionType != 3) {   //非抵扣券
                    if (parseFloat(Money) >= parseFloat(MinMoney)) {
                        alert("金额不能大于等于限制最低金额");
                        return false;
                    }
                    if (MinMoney == 0) {
                        alert("限制最低金额不能为0！");
                        return false;
                    }
                }

                

                //修补Type 没有赋值
                var Rule = $("#CodeType").val();
                var Type = null;
                switch (Rule) {
                    case "23":
                        Type = "2";
                        break;
                    case "25":
                        Type = "1";
                        break;
                    case "27":
                        Type = "6";
                        break;
                    case "30":
                        Type = "8";
                        break;
                    case "32":
                        Type = "5";
                        break;
                    case "36":
                        Type = "7";
                        break;
                    case "40":
                        Type = "13";
                        break;
                    case "42":
                        Type = "3";
                        break;
                    case "44":
                        Type = "15";
                        break;
                    case "46":
                        Type = "99";
                        break;
                    case "87":
                        Type = "11";
                        break;
                    case "90":
                        Type = "12";
                        break;
                    default:
                        Type = null;

                }

                var rest = {
                    PKID: $("#PKID").val(),
                    Name: $("#Describe").val(),
                    CodeChannel: $("#CodeChannel").val(),
                    CodeStartTime: $("#CodeStartTime").val(),
                    CodeEndTime: $("#CodeEndTime").val(),
                    Validity: $("#Validity").val(),
                    RuleId: Rule,
                    CodeType: Type,
                    Money: $("#Money").val(),
                    MinMoney: $("#MinMoney").val(),
                    Number: $("#Number").val(),
                    IsActive: $("#IsActive").val(),
                    DepartmentId: $("#DepartMentId").val(),
                    IntentionId: $("#IntentionId").val()
                };
                $.ajax({
                    url: "/Promotion/UpdatePromotion",
                    type: "post",
                    data: rest,
                    success: function (data) {
                        if (data == "ok") {
                            $("#div_Window2").dialog("close");
                            history.go(0);
                        }
                    }
                });
            } else if ($("#Validity").val() != "" && $("#CodeStartTime").val() == "" && $("#CodeEndTime").val() == "") {


                if ($("#CodeType").val() == "-1") {
                    alert("请选择优惠券类型！");
                    return false;
                }
                if ($("#Money").val() == "") {
                    alert("请填写金额！");
                    return false;
                }
                if (isNaN($("#Money").val())) {
                    alert("金额必须为数字！");
                    return false;
                }
                if (isNaN($("#MinMoney").val())) {
                    alert("限制最低金额必须为数字！");
                    return false;
                }
                if ($("#MinMoney").val() == "") {
                    alert("请填写限制最低金额！");
                    return false;
                }
                if (parseFloat($("#MinMoney").val()) > 10000) {
                    alert("限制最低金额最高为10000");
                    return false;
                }
                if ($("#Number").val() == "") {
                    alert("请填写数量！");
                    return false;
                }
                if ($("#IsActive").val() == "Null") {
                    alert("请选择是否生效！");
                    return false;
                }

                if ($("#Number").val() <= 0 || $("#Number").val() % 1 != 0) {
                    alert("数量必须大于0并为整数！");
                    return false;
                }
                if (isNaN($("#Number").val())) {
                    alert("数量必须为数字！");
                    return false;
                }
                if (!$("#Number").val().match(new RegExp("^[0-9]+$"))) {
                    alert("数量必须为整数！");
                    return false;
                }
                if ($("#Validity").val() <= 0 || $("#Validity").val() % 1 !== 0) {
                    alert("兑换天数必须大于0并是整数！");
                    return false;
                }
                if (!$("#Validity").val().match(new RegExp("^[0-9]+$"))) {
                    alert("兑换天数必须为整数！");
                    return false;
                }
                if ($("#Validity").val() == "") {
                    alert("兑换天数不能为空！");
                    return false;
                }
                if ($("#Describe").val() == "") {
                    alert("请填写优惠券描述！");
                    return false;
                }
                if ($("#CodeType").val() == "请选择") {
                    alert("请选择优惠券类型！");
                    return false;
                }


                var Money = $("#Money").val();
                var MinMoney = $("#MinMoney").val();
                var PromotionType = $('#CodeType').find("option:selected").attr('PromotionType');
                if (PromotionType != 3) {   //非抵扣券
                    if (parseFloat(Money) >= parseFloat(MinMoney)) {
                        alert("金额不能大于等于限制最低金额");
                        return false;
                    }
                    if (MinMoney == 0) {
                        alert("限制最低金额不能为0！");
                        return false;
                    }
                }
                //修补Type 没有赋值
                var Rule = $("#CodeType").val();
                var Type = null;
                switch (Rule) {
                    case "23":
                        Type = "2";
                        break;
                    case "25":
                        Type = "1";
                        break;
                    case "27":
                        Type = "6";
                        break;
                    case "30":
                        Type = "8";
                        break;
                    case "32":
                        Type = "5";
                        break;
                    case "36":
                        Type = "7";
                        break;
                    case "40":
                        Type = "13";
                        break;
                    case "42":
                        Type = "3";
                        break;
                    case "44":
                        Type = "15";
                        break;
                    case "46":
                        Type = "99";
                        break;
                    case "87":
                        Type = "11";
                        break;
                    case "90":
                        Type = "12";
                        break;
                    default:
                        Type = null;

                }

                var rest = {
                    PKID: $("#PKID").val(),
                    Name: $("#Describe").val(),
                    CodeChannel: $("#CodeChannel").val(),
                    CodeStartTime: $("#CodeStartTime").val(),
                    CodeEndTime: $("#CodeEndTime").val(),
                    Validity: $("#Validity").val(),
                    RuleId: Rule,
                    CodeType: Type,
                    Money: $("#Money").val(),
                    MinMoney: $("#MinMoney").val(),
                    Number: $("#Number").val(),
                    IsActive: $("#IsActive").val(),
                    DepartmentId: $("#DepartMentId").val(),
                    IntentionId: $("#IntentionId").val()
                };
                $.ajax({
                    url: "/Promotion/UpdatePromotion",
                    type: "post",
                    data: rest,
                    success: function (data) {
                        if (data == "ok") {
                            $("#div_Window2").dialog("close");
                            history.go(0);
                        }
                    }
                });
            } else if ($("#Validity").val() == "" && $("#CodeStartTime").val() == "" && $("#CodeEndTime").val() == "") {
                alert("有效天数与生效时间不能都为空或者有效天数为“0”");
                return false;
            } else {
                alert("兑换有效天数与开始生效时间只能选填一项");
                $("#Validity").val("");
                $("#CodeStartTime").val("");
                $("#CodeEndTime").val("");
                return false;
            }
        }
    </script>
</head>
<body>
    <div id="loadgif" style="width:66px;height:66px;position:absolute;top:50%;left:50%;">
        <img alt="加载中..." src="../Images/Loading/veryhuo.com_gif_59.gif" />
    </div>
    <table id="tb">
        @foreach (var item in Model.Item1)
            {
            <tr>
                <input type="hidden" id="PKID" value='@item.PKID' />
                <input type="hidden" id="CodeChannel" value="@item.CodeChannel" />
                <td>数量：<input type="text" id="Number" value="@item.Number" /></td>
                <td>
                    <label>优惠券类型：</label>
                    <input type="text" readonly="readonly" style="display:none" id="typeid" value="@item.RuleId" />
                    <select id="CodeType" style="width:100px" ></select>
                </td>
            </tr>
            <tr>
                <td><span class="hint">*</span>优惠券开始生效时间<input type="text" id="CodeStartTime" readonly="readonly" value="@item.CodeStartTime" /></td>
                <td><span class="hint">*</span>优惠券结束生效时间：<input type="text" id="CodeEndTime" readonly="readonly" value="@item.CodeEndTime" /></td>
                <td rowspan="2"><span class="hint">*提示：生效时间与有效天数只能选填一项</span></td>

            </tr>
            <tr>
                <td>优惠券描述：<input type="text" id="Describe" value="@item.Name" /></td>

                <td><span class="hint">*</span>优惠券兑换后有效天数：<input type="text" id="Validity" value="@item.Validity" /></td>
            </tr>
            <tr>
                <td id="tbMonney">金额：<input type="text" id="Money" value="@item.Money" /></td>
                <td id="tbMinMonney">限制最低金额：<input type="text" id="MinMoney" value="@item.MinMoney" /></td>
            </tr>
            <tr>
                <td>
                    <div>
                        部门
                        <select id="DepartMentId" name="DepartMentId" onchange="GetUseList(@JsonConvert.SerializeObject(Model.Item2))">
                            <option value="">请选择部门</option>
                            @if (Model.Item2 != null)
                            {
                                foreach (var item2 in Model.Item2)
                                {
                                    if (item2.Type == "0")
                                    {
                            <option value="@item2.SettingId" @(item2.IsSelected ? "selected='selected'" : "")>@item2.DisplayName</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                </td>
                <td>
                    <div>
                        用途
                        <select id="IntentionId" name="IntentionId">
                            <option value="">请选择用途</option>
                            @if (Model.Item2 != null)
                            {
                                foreach (DepartmentAndUse item2 in Model.Item2)
                                {
                                    if (item2.Type == "1" && item2.ParentSettingId == item.DepartmentId.ToString())
                                    {
                            <option value="@item2.SettingId" @(item2.IsSelected ? "selected='selected'" : "")>@item2.DisplayName</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    是否生效：@*<input type="text" style="display:none" id="ISAid" value="@item.IsActive" />*@
                    <select id="IsActive" autocomplete="off">
                        @*<option value="Null">请选择</option>*@
                        @if (item.IsActive)
                        {
                        <option value="True" selected="selected">是</option>
                        <option value="False">否</option>
                        }
                        else
                        {
                        <option value="True">是</option>
                        <option value="False" selected="selected">否</option>
                        }

                    </select>
                </td>
            </tr>

        }
    </table>
    <div><input type="button" id="EditSubmit" style="display:none;" onclick="return BeforeSubmit();" /></div>
    @*</form>*@
</body>
</html>
