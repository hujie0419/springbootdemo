<#@ template  debug="true" hostSpecific="true" #>
<#@ output extension=".generated.cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 

<# var projectName = Path.GetFileNameWithoutExtension(Host.TemplateFile); #>
using System.Data.Entity;
using Tuhu.Framework.DbCore;
using Tuhu.Provisioning.DataAccess.Entity.Discovery;
namespace  Tuhu.Provisioning.DataAccess
{
<#
	var dbContexts = new Dictionary<string, IDictionary<string, string>>
    {
        {
            "Discovery", new Dictionary<string, string>
            {
                {"Article", "Article"},
                {"ArticleChangeLog", "ArticleChange_Log"},
                {"ArticleFavorite", "ArticleFavorite"},
                {"ArticleCategory", "ArticleCategory"},
                {"Category", "Category"},
                {"CategoryFavorite", "CategoryFavorite"},
                {"UserOperation", "UserOperation"},
				 {"Comment", "Comment"}
            }
        }
    };

    foreach (var dbContext in dbContexts)
    {#>
        [ConnectionStringName("Tuhu_<#= dbContext.Key #>_Db")]
        public partial class <#= dbContext.Key #>DbContext : BaseDbContext
        {        
            public <#= dbContext.Key #>DbContext() : base("name=Tuhu_<#= dbContext.Key #>_Db") { }
            public <#= dbContext.Key #>DbContext(string nameOrConnectionString) : base(nameOrConnectionString) { }

		<#foreach (var entity in dbContext.Value)
		{
			var value = "_" + entity.Value.Substring(0, 1).ToLower() + entity.Value.Substring(1);
		#>
            private DbSet<<#= entity.Key #>> <#= value #>;
            public DbSet<<#= entity.Key #>> <#= entity.Value #>
            {
                get { return <#= value #>; }
                set { <#= value #> = new TuhuDbSet<<#= entity.Key #>>(value); }
            }
	    <#}#>
        }
    <#}
#>
}