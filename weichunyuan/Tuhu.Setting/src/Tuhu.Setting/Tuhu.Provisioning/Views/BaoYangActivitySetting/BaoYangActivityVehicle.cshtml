
@{
    ViewBag.Title = "保养活动特殊车型配置";
}
@section head{
    <link href="~/Content/Public/Public.css" rel="stylesheet" type="text/css" />
    <link href="~/Scripts/kkpager/kkpager_blue.css" rel="stylesheet" />
    <link href="~/Content/BaoYangActivitySetting/Vue.css" rel="stylesheet" />
}
<style>
    fieldset {
        height: auto;
        margin: 0px 0px 15px 0px;
        padding: 15px 20px;
    }

        fieldset > div {
            margin-top: 8px;
        }
</style>
<div id="div">
    <h2>保养活动特殊车型配置</h2>
    <a target="_blank" href="/BaoYangActivitySetting/Index">1.保养活动配置</a>
    <label>2.特殊车型配置</label>
    <a target="_blank" href="/BaoYangActivitySetting/BaoYangActivityRegion">3.特殊地区配置</a>
    <fieldset>
        <div style="display:inline-block;">
            <label>品牌系列:</label>
            <label style="margin-left:10px;">
                <input type="checkbox" value="All" v-model="selectAllBrandCategories" v-on:click="SelectAllBrandCategories($event)" /> <span>全部</span>
            </label>
            <label style="margin-left:10px;" v-for="item in vehicleDepartmentList">
                <input type="checkbox" v-bind:value="item" v-model="searchModel.BrandCategories" /> <span>{{item}}</span>
            </label>
        </div>
        <div>
            <label>价格区间:</label>
            <label style="margin-left:10px;">
                <input type="number" v-model.number="searchModel.MinPrice" /> 到 <input type="number" v-model.number="searchModel.MaxPrice" /> 万元
            </label>
        </div>
        <div>
            <label>品牌车型:</label>
            <label v-for="(value,key,index) in vehicelBrandList" style="margin-left:8px;"><a v-on:click="BrandChange(value)">{{key}}</a> </label>
        </div>
        <div>
            <label v-for="item in vehicleBrands" style="margin-left:8px;"><input type="checkbox" v-bind:value="item" v-model="searchModel.Brands" /><span>{{item}}</span></label>
        </div>
        <div>
            <label>适配了该机油的粘度的车型:</label>
            <select style="margin-left:10px;" v-model="searchModel.OilViscosity">
                <option value="All">全部</option>
                <option v-for="item in oilViscosityList" v-bind:value="item">{{item}}</option>
            </select>
        </div>
        <div>
            <label>适配了该机油的等级的车型:</label>
            <label style="margin-left:10px;" v-for="item in oilLevelList">
                <input type="checkbox" v-bind:value="item" v-model="searchModel.OilLevels" /><span>{{item}}</span>
            </label>
        </div>
        <div>
            <button class="btn btn-primary" v-on:click="Search(1)">查询</button>
            <button style="float:right;margin:5px 5px;" class="btn btn-primary" v-on:click="OpenMultEditDialog()">批量编辑</button>
            <button style="float:right;margin:5px 5px;" class="btn btn-danger" v-on:click="multDeleteDialog.show=true">批量删除</button>
        </div>
    </fieldset>
    <table class="tableContainer">
        <thead>
            <tr>
                <th><input type="checkbox" v-model="checkAllFlag" v-on:click="CheckAll()" />全选</th>
                <th>品牌</th>
                <th>车系</th>
                <th>车价</th>
                <th>粘度级别</th>
                <th>机油等级</th>
                <th>活动ID</th>
                <th>活动名称</th>
                <th>操作</th>
                <th>日志</th>
            </tr>
        </thead>
        <tbody>
            <tr v-if="loading">
                <td colspan="10"><img src="~/Images/loading.gif" /></td>
            </tr>
            <tr v-else-if="SearchResult.length > 0" v-for="(item,index) in SearchResult">
                <td>
                    <input type="checkbox" v-model="multEditModel.vehicleIds" v-bind:value="item.VehicleId" />{{index+1+(pager.pageIndex-1)* pager.pageSize}}
                    <span style="display:none">{{item.VehicleId}}</span>
                </td>
                <td>{{item.Brand}}</td>
                <td>{{item.VehicleSeries}}</td>
                <td>{{item.AvgPrice}}</td>
                <td>{{item.OilViscosity}}</td>
                <td>{{item.OilLevel}}</td>
                <td>{{item.ActivityId}}</td>
                <td>{{item.ActivityName}}</td>
                <td>
                    <button class="btn btn-primary" v-on:click="OpenEditDialog(item)">编辑</button>
                    <button class="btn btn-danger" style="margin-left:5px;" v-on:click="Delete(item)">删除</button>
                </td>
                <td><button class="btn btn-primary" v-on:click="WatchHistroy(item)">查看</button></td>
            </tr>
            <tr v-else>
                <td colspan="10">根据筛选条件未能查询到相关结果</td>
            </tr>
        </tbody>
    </table>
    <div id="kkpager" colspan="12"></div>
    <div>
        <div class="content">
            <modal v-if="editDialog.show" v-on:close="editDialog.show=false">
                <h3 slot="header">编辑</h3>
                <div slot="body" class="dialog">
                    <table>
                        <tr>
                            <th>品牌:</th>
                            <td>
                                <label>{{vehicleModel.Brand}}</label>
                            </td>
                        </tr>
                        <tr>
                            <th>车系:</th>
                            <td>
                                <label>{{vehicleModel.VehicleSeries}}</label>
                            </td>
                        </tr>
                        <tr>
                            <th>活动Id：</th>
                            <td>
                                <input type="text" style="width:90%;" v-model="multEditModel.activityId" />
                            </td>
                        </tr>
                        <tr>
                            <th>活动名称:</th>
                            <td>
                                <label>{{multEditModel.activityName}}</label>
                            </td>
                        </tr>
                    </table>
                </div>
                <div slot="footer">
                    <button class="footBtn" v-on:click="closeEditDialog()">取消</button>
                    <button class="footBtn" v-on:click="Edit()">确认</button>
                </div>
            </modal>
        </div>
        <div class="content">
            <modal v-if="multEditDialog.show" v-on:close="multEditDialog.show=false">
                <h3 slot="header">批量编辑</h3>
                <div slot="body" class="dialog">
                    <table>
                        <tr>
                            <th>活动Id：</th>
                            <td>
                                <input type="text" style="width:90%;" v-model="multEditModel.activityId" />
                            </td>
                        </tr>
                        <tr>
                            <th>活动名称:</th>
                            <td>
                                <label>{{multEditModel.activityName}}</label>
                            </td>
                        </tr>
                    </table>
                </div>
                <div slot="footer">
                    <button class="footBtn" v-on:click="multEditDialog.show=false">取消</button>
                    <button class="footBtn" v-on:click="MultEdit()">确认</button>
                </div>
            </modal>
        </div>
        <div class="content">
            <modal v-if="multDeleteDialog.show" v-on:close="multDeleteDialog.show=false">
                <h3 slot="header">批量删除</h3>
                <div slot="body" class="dialog">
                    <table>
                        <tr>
                            <td>
                                <label>您确认删除这些活动配置数据吗?</label>
                            </td>
                        </tr>
                    </table>
                </div>
                <div slot="footer">
                    <button class="footBtn" v-on:click="multDeleteDialog.show=false">取消</button>
                    <button class="footBtn" v-on:click="MultDelete()">确认</button>
                </div>
            </modal>
        </div>
        <div class="content">
            <modal v-if="showLog.show" v-on:close="multDeleteDialog.show=false">
                <h3 slot="header">日志详情</h3>
                <div slot="body" style="height:600px;" class="dialog">
                    <table>
                        <thead>
                            <tr>
                                <th>操作类型</th>
                                <th>操作人</th>
                                <th>时间</th>
                                <th>操作前活动Id</th>
                                <th>操作后活动Id</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-show="showLog.logs.length>0" v-for="log in showLog.logs">
                                <td>{{log.Remarks}}</td>
                                <td>{{log.OperateUser}}</td>
                                <td>{{log.CreateTime | DatePrase}}</td>
                                <td style="color:green;">{{log.OldValue | GetLogActivity}}</td>
                                <td style="color:red;">{{log.NewValue | GetLogActivity}}</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div slot="footer">
                    <button class="footBtn" v-on:click="showLog.show=false">关闭</button>
                </div>
            </modal>
        </div>
    </div>
</div>

<script type="text/x-template" id="modal-template">
    <transition name="modal">
        <div class="modal-mask">
            <div class="modal-wrapper">
                <div class="modal-container">
                    <div class="modal-header">
                        <slot name="header"></slot>
                    </div>
                    <div class="modal-body">
                        <slot name="body"></slot>
                    </div>
                    <div class="modal-footer">
                        <slot name="footer">
                            <button class="modal-default-button" v-on:click="">OK</button>
                        </slot>
                    </div>
                </div>
            </div>
        </div>
    </transition>
</script>
@section Scripts{
    <script src="~/Scripts/vue.min.js"></script>
    <script src="~/Scripts/kkpager/kkpager.min.js"></script>
    <script type="text/javascript">
        function GetLogActivity(value) {
            var activityId = "";
            if (value) {
                var valObj = /^\s*$/.test(value) ? null : JSON.parse(value);
                if (valObj) {
                    activityId = valObj.ActivityId || "";
                }
            }
            return activityId
        };
        function DatePrase(value) {
            if (value) {
                return eval('new ' + eval(value).source).Format('yyyy-MM-dd hh:mm:ss');
            }
        };
        Vue.filter('DatePrase', DatePrase);
        Vue.filter('GetLogActivity', GetLogActivity);
        Vue.component('modal', {
            template: '#modal-template'
        });
        var vue = new Vue({
            el: "#div",
            data: {
                searchModel: {
                    BrandCategories: [],
                    Brands: [],
                    MinPrice: 0,
                    MaxPrice: 1000,
                    OilViscosity: "All",
                    OilLevels: []
                },
                vehicleModel: {
                    PKID: "",
                    VehicleId: "",
                    Brand: "",
                    VehicleSeries: "",
                    AvgPrice: "",
                    OilViscosity: "",
                    OilLevel: "",
                    ActivityId: "",
                    ActivityName: ""
                },
                multEditModel: {
                    vehicleIds: [],
                    activityId: "",
                    activityName: ""
                },
                pager: {
                    pageIndex: 1,
                    pageSize: 20,
                    totalPage: 0,
                    totalCount: 0
                },
                vehicleDepartmentList: [],
                vehicelBrandList: [],
                vehicleBrands: [],
                oilViscosityList: [],
                oilLevelList: [],
                loading: false,
                SearchResult: [],
                selectAllBrandCategories: "",
                checkAllFlag: false,
                editDialog: {
                    show: false
                },
                multEditDialog: {
                    show: false
                },
                multDeleteDialog: {
                    show: false
                },
                showLog: {
                    show: false,
                    logs: [],
                },
                logDetail: {
                    show: false,
                    oldValue: [],
                    newValue: []
                }
            },
            created: function () {
                var self = this;
                self.GetAllVehicleDepartment();
                self.GetAllVehicleBrand();
                self.GetAllOilViscosity();
                self.GetAllOilLevel();
            },
            watch: {
                "searchModel.BrandCategories": function (item) {
                    var self = this;
                    if (self.searchModel.BrandCategories.length == self.vehicleDepartmentList.length) {
                        self.selectAllBrandCategories
                    }
                },
                "pager.pageIndex": function () {
                    var self = this;
                    self.Search(self.pager.pageIndex);
                },
                "multEditModel.activityId": function () {
                    var self = this;
                    self.GetBaoYangActivityName();
                },
                "multEditModel.vehicleIds": function () {
                    var self = this;
                    if (self.multEditModel.vehicleIds.length == self.SearchResult.length && self.multEditModel.vehicleIds.length > 0) {
                        self.checkAllFlag = true;
                    }
                    else {
                        self.checkAllFlag = false;
                    }
                }
            },
            methods: {
                GetAllVehicleDepartment: function () {
                    var self = this;
                    $.get("GetAllVehicleDepartment", function (result) {
                        if (result && result.Data && result.Data.length > 0) {
                            self.vehicleDepartmentList = result.Data;
                        }
                        else {
                            self.vehicleDepartmentList = [];
                        }
                    });
                },
                SelectAllBrandCategories: function (e) {
                    var self = this;
                    if (e.currentTarget.checked) {
                        self.searchModel.BrandCategories = self.vehicleDepartmentList;
                    }
                    else {
                        self.searchModel.BrandCategories = [];
                    }
                },
                GetAllOilViscosity: function () {
                    var self = this;
                    $.get("GetAllOilViscosity", {}, function (result) {
                        if (result && result.Data && result.Data.length > 0) {
                            self.oilViscosityList = result.Data;
                        }
                        else {
                            self.oilViscosityList = [];
                        }
                    });
                },
                GetAllOilLevel: function () {
                    var self = this;
                    $.get("GetAllOilLevel", {}, function (result) {
                        if (result && result.Data && result.Data.length > 0) {
                            self.oilLevelList = result.Data;
                        }
                        else {
                            self.oilLevelList = [];
                        }
                    });
                },
                GetAllVehicleBrand: function () {
                    var self = this;
                    $.get("GetAllVehicleBrand", {}, function (result) {
                        if (result && result.Data) {
                            self.vehicelBrandList = result.Data;
                        }
                        else {
                            self.vehicelBrandList = [];
                        }
                    });
                },
                BrandChange: function (brands) {
                    var self = this;
                    self.searchModel.Brands = [];
                    self.vehicleBrands = brands;
                },
                CheckAll: function () {
                    var self = this;
                    self.multEditModel.vehicleIds = [];
                    if (self.checkAllFlag) {
                        self.SearchResult.forEach(function (item) {
                            self.multEditModel.vehicleIds.push(item.VehicleId);
                        });
                    }
                },
                Search: function (pageIndex) {
                    var self = this;
                    if (self.searchModel.Brands.length < 1) {
                        alert("请选择车型品牌");
                        return;
                    }
                    if (self.searchModel.BrandCategories.length < 1) {
                        alert("请选择品牌系列");
                        return;
                    }
                    if (self.searchModel.MaxPrice < self.searchModel.MinPrice) {
                        alert("最高价不得低于最低价");
                        return;
                    }
                    self.multEditModel.vehicleIds = [];
                    self.multEditModel.activityId = "";
                    self.multEditModel.activityName = "";
                    self.pager.pageIndex = pageIndex;
                    self.loading = true;
                    $.post("SelectBaoYangActivityVehicle", { model: self.searchModel, pageIndex: self.pager.pageIndex, pageSize: self.pager.pageSize }, function (result) {
                        if (result.Status) {
                            self.SearchResult = result.Data;
                            self.pager.totalCount = result.TotalCount;
                            self.pager.totalPage = result.TotalPage;
                        }
                        else {
                            alert("查询失败" + (result.Msg || ""));
                            self.ServiceCodeList = [];
                            self.pager.totalPage = 0;
                            self.pager.totalCount = 0;
                            self.pager.pageIndex = 1;
                        }
                        self.loading = false;
                        kkpager.generPageHtml({
                            pno: self.pager.pageIndex,
                            mode: 'click',
                            total: self.pager.totalPage,
                            totalRecords: self.pager.totalCount,
                            click: function (n) {
                                self.pager.pageIndex = n;
                            },
                            getHref: function (n) {
                                return 'javascript:void(0);';
                            }
                        }, true);
                    });
                },
                OpenEditDialog: function (item) {
                    var self = this;
                    self.multEditModel.vehicleIds = new Array();
                    self.multEditModel.vehicleIds.push(item.VehicleId);
                    self.multEditModel.activityId = item.ActivityId;
                    self.multEditModel.activityName = item.ActivityName;

                    self.vehicleModel.Brand = item.Brand;
                    self.vehicleModel.VehicleSeries = item.VehicleSeries;
                    self.vehicleModel.ActivityId = item.ActivityId;
                    self.vehicleModel.ActivityName = item.ActivityName;
                    self.editDialog.show = true;
                },
                OpenMultEditDialog: function () {
                    var self = this;
                    self.multEditModel.activityId = "";
                    self.multEditModel.ActivityName = "";
                    self.multEditDialog.show = true;
                },
                closeEditDialog: function () {
                    var self = this;
                    self.multEditModel.vehicleIds = [];
                    self.multEditModel.activityId = "";
                    self.editDialog.show = false;
                },
                Edit: function () {
                    var self = this;
                    var model = self.multEditModel;
                    if (!confirm("是否确认活配置数据 ? ")) {
                        return;
                    }
                    if (model.vehicleIds.length < 1) {
                        return;
                    }
                    if (!(model.activityId)) {
                        alert("活动Id不能为空");
                        return;
                    }
                    if (!(model.activityName)) {
                        alert("没有活动Id对应的活动");
                        return;
                    }
                    $.post("MultiAddOrEditBaoYangActivityVehicle", { vehicleIds: model.vehicleIds, activityId: model.activityId }, function (data) {
                        if (data && data.Status) {
                            alert("更新成功!" + (data.Msg||""));
                            self.closeEditDialog();
                            self.Search(self.pager.pageIndex);
                        }
                        else {
                            alert("更新失败!" + (data.Msg||""));
                        }
                    });
                },
                MultEdit: function () {
                    var self = this;
                    var model = self.multEditModel;
                    if (!confirm("确认批量编辑这些车型的活动配置？")) {
                        return;
                    }
                    if (model.vehicleIds.length < 1) {
                        alert("未选中任何记录");
                        return;
                    }
                    if (!(model.activityId)) {
                        alert("活动Id不能为空");
                        return;
                    }
                    if (!(model.activityName)) {
                        alert("没有活动Id对应的活动");
                        return;
                    }
                    $.post("MultiAddOrEditBaoYangActivityVehicle", { vehicleIds: model.vehicleIds, activityId: model.activityId }, function (data) {
                        if (data && data.Status) {
                            alert("批量更新成功" + (data.Msg||""));
                            self.multEditDialog.show = false;
                            self.Search(self.pager.pageIndex);
                        }
                        else {
                            alert("批量更新失败!" + (data.Msg||""));
                        }
                    });
                },
                Delete: function (item) {
                    var self = this;
                    if (!confirm("确认删除 " + item.VehicleSeries + " 的活动配置?")) {
                        return;
                    }
                    if (!item.VehicleId) {
                        return;
                    }
                    var vehicleIds = new Array();
                    vehicleIds.push(item.VehicleId);
                    $.post("MultDeleteBaoYangActivityVehicle", { vehicleIds: vehicleIds }, function (data) {
                        if (data && data.Status) {
                            alert("删除成功" + (data.Msg || ""));
                            self.Search(self.pager.pageIndex);
                        }
                        else {
                            alert("删除失败!" + (data.Msg || ""));
                        }
                    });
                },
                MultDelete: function () {
                    var self = this;
                    var model = self.multEditModel;
                    if (model.vehicleIds.length < 1) {
                        alert("未选中任何记录");
                        return;
                    }
                    $.post("MultDeleteBaoYangActivityVehicle", { vehicleIds: model.vehicleIds }, function (data) {
                        if (data && data.Status) {
                            alert("批量删除成功" + (data.Msg || ""));
                            self.multDeleteDialog.show = false;
                            self.Search(self.pager.pageIndex);
                        }
                        else {
                            alert("批量删除失败!" + (data.Msg || ""));
                        }
                    });
                },
                GetBaoYangActivityName() {
                    var self = this;
                    var activityId = self.multEditModel.activityId;
                    if (activityId) {
                        $.post("GetBaoYangActivityNameByActivityId", { activityId: activityId }, function (data) {
                            if (data && data.Status) {
                                self.multEditModel.activityName = data.Data;
                            }
                            else {
                                self.multEditModel.activityName = "";
                            }
                        });
                    }
                    else {
                        self.multEditModel.activityName = "";
                    }
                },
                WatchHistroy(item) {
                    var self = this;
                    var identityId = item.VehicleId;
                    var type = "BaoYangActivityVehicle";
                    $.post("GetBaoYangOprLogByIdentityIdAndType", { identityId: identityId, type: type }, function (data) {
                        if (data && data.Status) {
                            self.showLog.logs = data.Data;
                            self.showLog.show = true;
                        }
                        else {
                            alert("查看日志失败!" + (data.Msg || ""));
                        }
                    });
                }
            }
        })
    </script>

}


