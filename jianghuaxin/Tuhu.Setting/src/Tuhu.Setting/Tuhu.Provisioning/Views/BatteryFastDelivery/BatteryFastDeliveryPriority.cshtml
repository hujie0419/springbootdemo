
@{
    ViewBag.Title = "蓄电池服务类地区排序配置";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section head{
    <link rel="stylesheet" href="~/Content/iview/iview.css" />
    <style type="text/css">
        [v-cloak] {
            display: none;
        }

        .div-margin {
            margin-top: 20px;
            margin-bottom: 10px;
        }

        .form-margin {
            margin-top: 10px;
            margin-bottom: 10px;
        }

        .tableContainer {
            width: 100%;
        }

        .tableContainer th {
            height: 32px;
            background: #7d8cd5;
            color: #F3F7FA;
            border: 1px solid #559BD0;
            font-weight: 600;
            font-family: "Microsoft YaHei";
            text-align: center;
        }

        .tableContainer td {
            font-size: 75%;
            padding: 8px 3px 8px 3px;
            font-family: 'Microsoft YaHei';
            text-align: center;
            border: 1px solid #eee;
        }

    </style>
}

<h2 style="margin-top:20px;">蓄电池服务类地区排序配置</h2>

<div id="app" v-cloak>
    <div class="div-margin">
        <row>
            <i-col span="8">
                <label>选择省份:</label>
                <i-select filterable style="width:70%" v-model="filterCondition.provinceId">
                    <i-option :value="-1" :key="-1">请选择</i-option>
                    <i-option :value="0" :key="0">全国</i-option>
                    <i-option v-for="item in provinces" :value="item.id" :key="item.id">{{item.name}}</i-option>
                </i-select>
            </i-col>
            <i-col span="8">
                <label>选择城市:</label>
                <i-select filterable style="width:70%" v-model="filterCondition.cityId">
                    <i-option :value="-1" :key="-1">请选择</i-option>
                    <i-option v-for="item in cities" :value="item.id" :key="item.id">{{item.name}}</i-option>
                </i-select>
            </i-col>
            <i-col span="6">
                <i-button type="success" icon="ios-search" v-on:click="search">查询</i-button>
                <i-button type="primary" v-on:click="append">添加</i-button>
            </i-col>
        </row>
    </div>
    <div class="div-margin">
        <table class="tableContainer">
            <thead>
                <tr>
                    <th>#</th>
                    <th>省份</th>
                    <th>城市</th>
                    <th>品牌规则</th>
                    <th>操作</th>
                </tr>
            </thead>
            <tbody v-if="loading">
                <tr>
                    <td colspan="100">
                        <img src="/Images/loading.gif" style="height: 16px" />
                        <span style="vertical-align: top; margin-left: 5px;">加载中，请稍候！</span>
                    </td>
                </tr>
            </tbody>
            <tbody v-else-if="(list || []).length <= 0">
                <tr>
                    <td colspan="100">
                        <span>暂无数据</span>
                    </td>
                </tr>
            </tbody>
            <tbody v-else>
                <tr v-for="item,index in list" :key="item.PKID" v-bind:style="!item.IsEnabled ? 'color:#8e8e8e' : 'color:#000'">
                    <td>{{index + 1}}</td>
                    <td>{{item.ProvinceName}}</td>
                    <td>{{item.CityName}}</td>
                    <td>{{(item.Priorities || []).join('、')}}</td>
                    <td>
                        <a href="javascript:void(0)" v-on:click="modiffy(item)" style="margin-right:3px;">修改</a>
                        <a href="javascript:void(0)" v-on:click="deleteIt(item)" style="margin-right:3px;">删除</a>
                        <input type="checkbox" :checked="item.IsEnabled" v-on:click="change(item)" />特例城市
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="div-margin">
        <page placement="top" show-sizer show-total
              :total="total" :page-size-opts="[10, 20, 50, 100, 200]" :current.sync="filterCondition.index"
              v-on:on-page-size-change="filterCondition.size=$event">
        </page>
    </div>
    <form-modal :provinces="provinces"
                :brands="brands"
                :modal.sync="showModal"
                :obj="data"
                v-on:submit="submit"
                ref="form">
    </form-modal>
</div>

<script type="text/x-template" id="form-modal">
    <div>
        <Modal title="优先级" v-model="modal" :loading="loading" :mask-closable="false" v-on:on-ok="submit" width="850">
            <row type="flex" justify="space-around" v-bind:align="'middle'" class="form-margin">
                <i-col span="4"></i-col>
                <i-col span="7">
                    <label>省份:</label>
                    <template v-if="obj.pkid <= 0">
                        <i-select filterable style="width:70%" v-model="obj.provinceId">
                            <i-option :value="-1" :key="-1">请选择</i-option>
                            <i-option :value="0" :key="0">全国</i-option>
                            <i-option v-for="item in provinces"
                                      :value="item.id"
                                      :key="item.id">{{item.name}}</i-option>
                        </i-select>
                    </template>
                    <template v-else>
                        <i-input style="width:70%" v-model="obj.provinceName" disabled></i-input>
                    </template>
                </i-col>
                <i-col span="7">
                    <label>城市:</label>
                    <template v-if="obj.pkid <= 0">
                        <i-select filterable style="width:70%" v-model="obj.cityId">
                            <i-option :value="-1" :key="-1">请选择</i-option>
                            <i-option v-for="item in cities"
                                      :value="item.id"
                                      :key="item.id">{{item.name}}</i-option>
                        </i-select>
                    </template>
                    <template v-else>
                        <i-input style="width:70%" v-model="obj.cityName" disabled></i-input>
                    </template>
                </i-col>
                <i-col span="4"></i-col>
            </row>
            <row type="flex" justify="space-around" v-bind:align="'middle'" class="form-margin">
                <i-col span="7">
                    <brand-select :sequence="1" :brands="brands" :values.sync="obj.priorities"></brand-select>
                </i-col>
                <i-col span="7">
                    <brand-select :sequence="2" :brands="brands" :values.sync="obj.priorities"></brand-select>
                </i-col>
                <i-col span="7">
                    <brand-select :sequence="3" :brands="brands" :values.sync="obj.priorities" v-on:on-change="change"></brand-select>
                </i-col>
            </row>
            <row type="flex" justify="space-around" v-bind:align="'middle'" class="form-margin">
                <i-col span="7">
                    <brand-select :sequence="4" :brands="brands" :values.sync="obj.priorities"></brand-select>
                </i-col>
                <i-col span="7">
                    <brand-select :sequence="5" :brands="brands" :values.sync="obj.priorities"></brand-select>
                </i-col>
                <i-col span="7">
                    <brand-select :sequence="6" :brands="brands" :values.sync="obj.priorities"></brand-select>
                </i-col>
            </row>
            <row type="flex" justify="space-around" v-bind:align="'middle'" class="form-margin">
                <i-col span="7">
                    <brand-select :sequence="7" :brands="brands" :values.sync="obj.priorities"></brand-select>
                </i-col>
                <i-col span="7">
                    <brand-select :sequence="8" :brands="brands" :values.sync="obj.priorities"></brand-select>
                </i-col>
                <i-col span="7">
                    <brand-select :sequence="9" :brands="brands" :values.sync="obj.priorities"></brand-select>
                </i-col>
            </row>
            <row type="flex" justify="space-around" v-bind:align="'middle'" class="form-margin">
                <i-col span="7"></i-col>
                <i-col span="7"></i-col>
                <i-col span="7">
                    <checkbox v-model="obj.isEnabled">是否启用</checkbox>
                </i-col>
            </row>
        </Modal>
    </div>
</script>

<script type="text/x-template" id="brand-select">
    <div>
        <label>第{{sequence_text}}优先级:</label>
        <i-select filterable style="width:70%" v-model="values[sequence-1]">
            <i-option value="" key="zero">请选择</i-option>
            <i-option v-for="brand in real_brands"
                      :value="brand"
                      :key="brand">{{brand}}</i-option>
        </i-select>
    </div>
</script>

@section scripts{
    <script type="text/javascript" src="~/Scripts/vue.min.js"></script>
    <script type="text/javascript" src="~/Scripts/iview/iview.min.js"></script>
    <script type="text/javascript">

        Array.prototype.firstOrDefault = function (callback) {
            var array = this;
            for (var i = 0; i < array.length; i++) {
                var value = array[i];
                if (callback(value, i)) {
                    return value;
                }
            }
            return undefined;
        }

        Vue.component('brand-select', {
            props: {
                brands: {
                    type: Array,
                    default: [],
                },
                values: {
                    type: Array,
                    default: new Array(9),
                },
                sequence: {
                    type: String | Number,
                    default: 0,
                }
            },
            template: '#brand-select',
            data: function () {
                return { selected: '' };
            },
            watch: {
                values: function (values) {
                    this.$emit('update:values', values);
                },
            },
            computed: {
                sequence_text: function () {
                    var vm = this;
                    switch (vm.sequence) {
                        case 1:
                            return '一';
                        case 2:
                            return '二';
                        case 3:
                            return '三';
                        case 4:
                            return '四';
                        case 5:
                            return '五';
                        case 6:
                            return '六';
                        case 7:
                            return '七';
                        case 8:
                            return '八';
                        case 9:
                            return '九';
                        default:
                            return '';
                    }
                },
                real_brands: function () {
                    var vm = this;
                    var brands = vm.brands.filter(function (x) {
                        return x === vm.values[vm.sequence - 1] || vm.values.indexOf(x) <= -1;
                    });
                    return brands;
                },
            },
        });
        Vue.component('form-modal', {
            props: {
                brands: {
                    type: Array,
                    default: [],
                },
                provinces: {
                    type: Array,
                    default: [],
                },
                obj: {
                    type: Object,
                    default: {
                        pkid: 0,
                        provinceId: -1,
                        provinceName: '',
                        cityId: -1,
                        cityName: '',
                        priorities: new Array(9),
                        isEnabled: true,
                    }
                },
                modal: {
                    type: Boolean,
                    default:false,
                }
                
            },
            template: '#form-modal',
            data: function () {
                return {
                    loading: true,
                    cities: [],
                };
            },
            watch: {
                'obj.provinceId': function (value) {
                    var vm = this;
                    var provinceName = '';
                    if (value > 0) {
                        provinceName = (vm.provinces.firstOrDefault(function (x) {
                            return x.id === value
                        }) || {}).name || '';
                    } else if (value === 0) {
                        provinceName = '全国';
                    }
                    vm.obj.provinceName = provinceName;
                    if (vm.obj.pkid <= 0) {
                        vm.obj.cityId = -1;
                        vm.getCities(value);
                    }
                },
                'obj.cityId': function (value) {
                    var vm = this;
                    if (vm.obj.pkid <= 0) {
                        vm.obj.cityName = (vm.cities.firstOrDefault(function (x) {
                            return x.id === value
                        }) || {}).name || '';
                    }
                },
                modal: function (value) {
                    console.log(value);
                    this.$emit('update:modal', value);
                },
            },
            methods: {
                getCities: function (id) {
                    var vm = this;
                    if (id < 0) {
                        return;
                    }
                    if (id === 0) {
                        vm.cities = [{ id: 0, name: '全国' }];
                        return;
                    }
                    $.get('GetRegionByRegionId', { regionId: id }, function (res) {
                        vm.cities = (res.Data.ChildRegions || []).map(function (region) {
                            return { id: region.RegionId, name: region.RegionName };
                        });
                    });
                },
                change: function (index, value) {
                    this.obj.priorities[index] = value;
                },
                submit: function () {
                    var vm = this;
                    var data = {
                        PKID: vm.obj.pkid,
                        ProvinceId: vm.obj.provinceId,
                        ProvinceName: vm.obj.provinceName,
                        CityId: vm.obj.cityId,
                        CityName: vm.obj.cityName,
                        IsEnabled: vm.obj.isEnabled,
                        Priorities: (vm.obj.priorities || []).filter(function (x) { return !!x; }),
                    };
                    console.log(data)
                    if (data.ProvinceId < 0 || data.CityId < 0 || data.ProvinceName == '' || data.CityName == '') {
                        vm.$Message.warning('地区不能为空');
                        vm.loading = false;
                        vm.$nextTick(function () {
                            vm.loading = true;
                        });
                        return;
                    }
                    if (!data.Priorities || data.Priorities.length <= 0) {
                        vm.$Message.warning('优先级不能为空');
                        vm.loading = false;
                        vm.$nextTick(function () {
                            vm.loading = true;
                        });
                        return;
                    }
                    var title = data.PKID <= 0 ? '添加' : '修改';
                    var content = data.PKID <= 0 ? '是否添加配置?' : '确认修改配置';
                    vm.$Modal.confirm({
                        title: title,
                        content: content,
                        loading: true,
                        onOk: function () {
                            $.post("AddOrUpdateBatteryFastDeliveryPriority", data, function (result) {
                                if (result.status) {
                                    vm.$emit('update:modal', false);
                                    vm.$Message.info('操作成功！');
                                    vm.$emit('submit', true);
                                    refreshCache(data.ProvinceId, data.CityId, function (res) {
                                        if (!res.status) {
                                            vm.$Message.warning('更新缓存失败!');
                                        }
                                    });
                                } else {
                                    vm.$Message.warning('操作失败！' + (result.msg || ""));
                                    vm.$emit('submit', false);
                                }
                            }).error(function () {
                                vm.$Message.warning('操作失败！');
                                vm.$emit('submit', false);
                            }).complete(function () {
                                vm.$Modal.remove();
                                vm.loading = false;
                                vm.$nextTick(function () {
                                    vm.loading = true;
                                });
                            });
                        },
                        onCancel: function () {
                            vm.loading = false;
                            vm.$nextTick(function () {
                                vm.loading = true;
                            });
                        }
                    });
                },
            }
        });
        var vm = new Vue({
            el: '#app',
            data: {
                loading: false,
                list: [],
                filterCondition: {
                    index: 1,
                    size: 10,
                    provinceId: -1,
                    cityId: -1,
                },
                total: 0,
                provinces: [],
                cities: [],
                brands: [],
                showModal: false,
                data: {
                    pkid: 0,
                    provinceId: -1,
                    provinceName: '',
                    cityId: -1,
                    cityName: '',
                    priorities: new Array(9),
                    isEnabled: true,
                }
            },
            watch: {
                "filterCondition.provinceId": function (value) {
                    this.filterCondition.cityId = -1;
                    console.log(value);
                    this.getCities(value);
                },
                "filterCondition.index": function (value) {
                    var vm = this;
                    if (value <= 0) {
                        vm.filterCondition.index = 1;
                    }
                    vm.getPriorities();
                },
                "filterCondition.size": function (value) {
                    var vm = this;
                    if (vm.filterCondition.index === 1) {
                        vm.getPriorities();
                        return;
                    } else {
                        vm.filterCondition.index = 1;
                    }
                }
            },
            mounted: function () {
                this.getProvinces();
                this.getBrands();
                this.getPriorities();
            },
            methods: {
                search: function () {
                    var vm = this;
                    if (vm.filterCondition.index === 1) {
                        vm.getPriorities();
                    } else {
                        vm.filterCondition.index = 1;
                    }
                },
                append: function () {
                    var vm = this;
                    vm.data = {
                        pkid: 0,
                        provinceId: -1,
                        provinceName: '',
                        cityId: -1,
                        cityName: '',
                        priorities: new Array(9),
                        isEnabled: true,
                    };
                    vm.showModal = true;
                },
                modiffy: function (data) {
                    vm.data = {
                        pkid: data.PKID,
                        provinceId: data.ProvinceId,
                        provinceName: data.ProvinceName,
                        cityId: data.CityId,
                        cityName: data.CityName,
                        priorities: (data.Priorities || []).map(function (x) { return x }),
                        isEnabled: data.IsEnabled,
                    };
                    vm.showModal = true;
                },
                deleteIt: function (item) {
                    var vm = this;
                    var data = {
                        PKID: item.PKID,
                        ProvinceId: item.ProvinceId,
                        ProvinceName: item.ProvinceName,
                        CityId: item.CityId,
                        CityName: item.CityName,
                        Priorities: item.Priorities,
                        IsEnabled: !item.IsEnabled,
                    };
                    vm.$Modal.confirm({
                        title: '删除',
                        content: '是否确认删除此配置?',
                        loading: true,
                        onOk: function () {
                            $.post("DeleteBatteryFastDeliveryPriority", { id: data.PKID }, function (result) {
                                if (result.status) {
                                    vm.$Message.info('操作成功！');
                                    refreshCache(data.ProvinceId, data.CityId, function (res) {
                                        if (!res.status) {
                                            vm.$Message.warning('更新缓存失败!');
                                        }
                                    });
                                    setTimeout(function () {
                                        vm.search();
                                    }, 2000);
                                }
                                else vm.$Message.warning('操作失败！' + (result.msg || ""));
                            }).error(function () {
                                vm.$Message.warning('操作失败！');
                            }).complete(function () {
                                vm.$Modal.remove();
                            });
                        },
                        onCancel: function () {
                            vm.$Modal.remove();
                        }
                    });
                },
                submit: function (value) {
                    var vm = this;
                    if (value) {
                        setTimeout(function () {
                            vm.search();
                        }, 2000);
                    }
                },
                change: function (item) {
                    var vm = this;
                    var data = {
                        PKID: item.PKID,
                        ProvinceId: item.ProvinceId,
                        ProvinceName: item.ProvinceName,
                        CityId: item.CityId,
                        CityName: item.CityName,
                        Priorities: item.Priorities,
                        IsEnabled: !item.IsEnabled,
                    };
                    var content = data.IsEnabled ? '是否确认启用此配置' : '是否确认禁用此配置';
                    vm.$Modal.confirm({
                        title: '修改',
                        content: content,
                        loading: true,
                        onOk: function () {
                            $.post("AddOrUpdateBatteryFastDeliveryPriority", data, function (result) {
                                if (result.status) {
                                    vm.$Message.info('操作成功！');
                                    //vm.search();
                                    item.IsEnabled = !item.IsEnabled;
                                    refreshCache(data.ProvinceId, data.CityId, function (res) {
                                        if (!res.status) {
                                            vm.$Message.warning('更新缓存失败!');
                                        }
                                    });
                                }
                                else vm.$Message.warning('操作失败！' + (result.msg || ""));
                            }).error(function () {
                                vm.$Message.warning('操作失败！');
                            }).complete(function () {
                                vm.$Modal.remove();
                            });
                        },
                        onCancel: function () {
                            item.IsEnabled = !item.IsEnabled;
                            vm.$nextTick(function () {
                                item.IsEnabled = !item.IsEnabled;
                            })
                            vm.$Modal.remove();
                        }
                    });
                },
                getPriorities() {
                    var vm = this;
                    var province = vm.filterCondition.provinceId < 0 ? undefined : vm.filterCondition.provinceId,
                        city = vm.filterCondition.cityId < 0 ? undefined : vm.filterCondition.cityId;
                    vm.loading = true;
                    $.get("GetBatteryFastDeliveryPriorities", {
                        index: vm.filterCondition.index,
                        size: vm.filterCondition.size,
                        province: province,
                        city: city,
                    }, function (res) {
                        vm.total = res.total;
                        vm.list = res.data || [];
                        setTimeout(function () {
                            vm.loading = false;
                        }, 100);
                    });
                },
                getProvinces: function () {
                    var vm = this;
                    $.get('GetAllProvince', function (res) {
                        vm.provinces = (res.Data || []).map(function (region) {
                            return { id: region.RegionId, name: region.RegionName };
                        });
                    });
                },
                getCities: function (id) {
                    var vm = this;
                    if (id < 0) {
                        return;
                    }
                    if (id === 0) {
                        vm.cities = [{ id: 0, name: '全国' }];
                        return;
                    }
                    $.get('GetRegionByRegionId', { regionId: id }, function (res) {
                        vm.cities = (res.Data.ChildRegions || []).map(function (region) {
                            return { id: region.RegionId, name: region.RegionName };
                        });
                    });
                },
                getBrands: function () {
                    var vm = this;
                    $.get('GetBatteryBrands', function (res) {
                        vm.brands = res;
                    });
                },
            }
        });

        function refreshCache(province, city, callback) {
            $.post("RefreshBatteryFastDeliveryPrioritiesCache", {
                provinceId: province,
                cityId: city
            }, function (res) {
                if (callback) {
                    callback(res);
                }
            });
        }
    </script>
}
