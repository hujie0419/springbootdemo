
@{
    ViewBag.Title = "兑换码查询";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}

@section css{
    <link rel="stylesheet" href="~/Content/iview/iview.css" />
    <style type="text/css">
        [v-cloak] {
            display: none;
        }
        /*修改受影响的样式*/
        body {
            background-color: #2f4050;
        }

        .row-spacing {
            margin-bottom: 5px;
            margin-bottom: 10px;
        }
    </style>
}

<div id="div" v-cloak>
    <div>
        <row type="flex" justify="space-around" class="row-spacing">
            <i-col span="4">
                <i-input v-model="condition.code" placeholder="请输入兑换码..." clearable>
                    <span slot="prepend">兑换码</span>
                </i-input>
            </i-col>
            <i-col span="4">
                <i-input v-model="condition.mobile" placeholder="请输入手机号..." clearable>
                    <span slot="prepend">手机号</span>
                </i-input>
            </i-col>
            <i-col span="4">
                <label>选择类型:</label>
                <i-select filterable transfer v-model="condition.codeType" style="width:70%;">
                    <i-option value="BeautyServicePackageCode" key="BeautyServicePackageCode">美容兑换码</i-option>
                    <i-option value="RedemptionCodeRecord" key="RedemptionCodeRecord">通用兑换码</i-option>
                </i-select>
            </i-col>
            <i-col span="4">
                <i-button type="success" icon="ios-search" v-on:click="search">查询</i-button>
            </i-col>
        </row>

        <i-table class="row-spacing"
                 :stripe="true"
                 :data="data"
                 :columns="columns"
                 :loading="loading"
                 :size="'large'"
                 highlight-row></i-table>

        <page show-sizer
              show-total
              placement="top"
              v-on:on-page-size-change="condition.pageSize=$event"
              :current.sync="condition.pageIndex"
              :total="total"
              :page-size-opts="[10, 20, 50, 100, 200]"></page>
    </div>
    <Modal title="服务码信息" v-model="codeModal.showModal" with="800"
           :scrollable="true"
           :mask-closable="false"
           :footer-hide="true">
        <Form model="codeModal.codes" :label-width="90">
            <FormItem>
                <table class="table table-striped" >
                    <thead>
                        <tr>
                            <th></th>
                            <th>服务码</th>
                            <th>发码时间</th>
                            <th>状态</th>
                            <th>核销时间</th>
                            <th>过期时间</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-if="codeModal.codes.length<=0">
                            <td colspan="6" style="text-align:center;height: 100px;line-height: 100px;color: #999;font-size: 20px;">无数据</td>
                        </tr>
                        <tr v-for="(item,index) in codeModal.codes">
                            <td>{{++index}}</td>
                            <td>{{item.ServiceCode}}</td>
                            <td>{{item.CreateTime|formatDate}}</td>
                            <td>{{item.CodeStatus|formatCodeStatus}}</td>
                            <td>{{item.VerifyTime|formatDate}}</td>
                            <td>{{item.OverdueTime|formatDate}}</td>
                        </tr>
                    </tbody>
                </table>
            </FormItem>
        </Form>
    </Modal>
</div>

@section scripts{
    <script type="text/javascript" src="~/Scripts/vue.min.js"></script>
    <script type="text/javascript" src="~/Scripts/iview/iview.min.js"></script>
    <script type="text/javascript">
        function formatDate(value) {
            if (value) {
                var time = value instanceof Date ? value : eval('new ' + value.toString().replace(/\//g, ""));
                var year = time.getFullYear();
                var day = time.getDate();
                var month = time.getMonth() + 1;
                var hours = time.getHours();
                var minutes = time.getMinutes();
                var seconds = time.getSeconds();
                var func = function(value, number) {
                    var str = value.toString();
                    while (str.length < number) {
                        str = "0" + str;
                    }
                    return str;
                }
                if (year == 1) {
                    return "";
                } else {
                    return func(year, 4) + '-' + func(month, 2) + '-' + func(day, 2) + ' '
                }
            }
        }
        function formatCodeStatus(status) {
            var result = "";
            switch (status) {
                case "None":
                    break;
                case "Created":
                case "SmsSent":
                    result="未核销"
                    break;
                case "Verified":
                    result = "已核销";
                    break;
                case "Cancelled":
                case "Reverted":
                    result = "已取消";
                    break;
                case "Overdued":
                    result="已过期"
                    break;
                default:
                    break;
            };
            return result;
        }
        Vue.filter('formatDate', formatDate);
        Vue.filter('formatCodeStatus', formatCodeStatus);

        var vm = new Vue({
            el: "#div",
            data: function () {
                return {
                    data: [],
                    total: 0,
                    loading: false,
                    codeModal: {
                        showModal: false,
                        codes: []
                    },
                    condition: {
                        code: "",
                        mobile: "",
                        codeType: "BeautyServicePackageCode",
                        pageIndex: 1,
                        pageSize: 10
                    },
                    show: false,
                };
            },
            created: function () {
                var vm = this;
                vm.columns = [
                    { title: '兑换码', key: 'RedemptionCode', align: 'center' },
                    { title: '手机号', key: 'Mobile', align: 'center' },
                    {
                        title: '兑换码类型',
                        key: 'RedemptionCodeType',
                        align: 'center',
                        render: function (h, p) {
                            return h('div',
                                p.row.RedemptionCodeType == 'BeautyServicePackageCode' ? '美容兑换码' : '通用兑换码');
                        }
                    },
                    { title: '大客户', key: 'CooperateName', align: 'center' },
                    { title: '配置ID', key: 'ConfigId', align: 'center' },
                    {
                        title: '兑换时间',
                        key: 'ExchangeTime',
                        align: 'center',
                        render: function (h, p) {
                            return h('div', formatDate(p.row.ExchangeTime));
                        }
                    },
                    { title: '车牌号', key:'CarNo',align:'center'},
                    {
                        title: '有效期',
                        width: 200,
                        align: 'center',
                        render: function (h, p) {
                            return h('div', (formatDate(p.row.StartTime) + ' 至 ' + formatDate(p.row.EndTime)));
                        },
                    },
                    {
                        title: '发放时间',
                        key: 'CreateTime',
                        align: 'center',
                        render: function (h, p) {
                            return h('div', formatDate(p.row.CreateTime));
                        }
                    },
                    {
                        title: '状态',
                        key: 'Status',
                        align: 'center',
                        render: function (h, p) {
                            var des = "";
                            switch (p.row.Status) {
                                case "2Redeemed":
                                    des = "已兑换";
                                    break;
                                case "3Invalidated":
                                    des = "已作废";
                                    break;
                                case "0New":
                                    des = "有效";
                                    break;
                            }
                            return h('div', des);
                        }
                    },
                    { title: '批次号', key: 'BatchCode', align: 'center' },
                    { title: '创建人', key: 'CreateUser', align: 'center' },
                    {
                        title: '服务码信息',
                        key: 'ServiceCodes',
                        align: 'center',
                        render: function (h, p) {
                            return h("div", [
                                h(
                                    "Button",
                                    {
                                        props: {
                                            type: "primary",
                                            size: "small"
                                        },
                                        style: {
                                            marginRight: "5px"
                                        },
                                        on: {
                                            click: () => {
                                                vm.GetServiceCodesByRedemptionCode(p.row.RedemptionCode);
                                            }
                                        }
                                    },
                                    "服务码信息"
                                )
                            ]);
                        }
                    }
                ];
            },
            watch: {
                "condition.pageIndex": function () {
                    this.getUnivBeautyRedemptionCodes();
                },
                "condition.pageSize": function () {
                    this.search();
                },
                "condition.codeType": function () {
                    this.getUnivBeautyRedemptionCodes();
                }
            },
            methods: {
                search: function () {
                    var vm = this;
                    if (vm.condition.code == "" && vm.condition.mobile == "") {
                        alert("查询条件不能为空");
                        return;
                    }
                    if (vm.condition.pageIndex !== 1) {
                        vm.condition.pageIndex = 1;
                        return;
                    }
                    vm.getUnivBeautyRedemptionCodes();
                },
                GetServiceCodesByRedemptionCode: function (redemptionCode) {
                    var vm = this;
                    vm.codeModal.showModal = true;
                    vm.codeModal.codes = [];
                    $.get("GetServiceCodesByRedemptionCode", { redemptionCode: redemptionCode, codeType: vm.condition.codeType}, function (result) {
                        vm.codeModal.codes = result;
                    })
                },
                getUnivBeautyRedemptionCodes: function () {
                    var vm = this;
                    vm.loading = true;
                    var data = {
                        code: vm.condition.code,
                        mobile: vm.condition.mobile,
                        codeType: vm.condition.codeType,
                        pageIndex: vm.condition.pageIndex,
                        pageSize: vm.condition.pageSize
                    };
                    $.get("GetUnivBeautyRedemptionCodes",
                        data,
                        function (result) {
                            if (!result.status) {
                                vm.data = [];
                                vm.total = 0;
                                return;
                            }
                            vm.data = result.data;
                            vm.total = result.total;
                        }).error(function () {
                            vm.data = [];
                            vm.total = 0;
                        }).complete(function () {
                            vm.loading = false;
                        });
                }
            }
        });
    </script>
}
