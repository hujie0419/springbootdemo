@using Tuhu.Provisioning.DataAccess.Mapping;
@using Tuhu.Component.Common.Models
@model ListModel<CompetingProductsMonitorEntity>
@{ 
    Layout = null;
}

<style>
    table {
        width: 100%;
    }
        table thead th:last-child {
            text-align: center;
        }
        table tbody td:first-child {
            width: 90px;
        }
        table tbody td:last-child {
            width: 100px;
            text-align: center;
        }
</style>

    <h5>PID：@ViewBag.Pid</h5>
    <h5>产品名称：@ViewBag.ProductName</h5>
    <input id="hidPid" type="hidden" value="@ViewBag.Pid"/>
<table>
    <thead>
        <tr>
            <th>商铺名称</th>
            <th>商铺产品编号及名称</th>
            <th>价格</th>
            <th>最后更新价格</th>
            <th><button type="button" data-bind="click: create">添加监控</button></th>
        </tr>
    </thead>
    <tbody data-bind="foreach: priceMap">
        <tr data-bind="if: Editing">
            <td>
                <select id="ShopCode" name="ShopCode" style="width: 90px;" data-bind="value: ShopCode, valueUpdate: 'input', style: { borderColor: ShopCode() ? '' : 'red' }">
                    <option value="">请选择商铺</option>
                    <option>特维轮</option>
                    <option>京东自营</option>
                    <option>天猫</option>
                    <option>淘宝</option>
                    <option>麦轮胎官网</option>
                    <option>汽配龙</option>
                    <option>汽车超人零售</option>
                    <option>汽车超人批发</option>
                    <option>养车无忧</option>
                    <option>康众官网</option>
                </select>
            </td>
            <td>
                <input id="ItemID" name="ItemID" type="text" maxlength="100" style="width: 200px;" data-bind="value: ItemID, valueUpdate: 'input', style: { borderColor: ItemID() ? '' : 'red' }">
            </td>
            <td></td>
            <td></td>
            <td><button type="button" data-bind="click: $parent.save, enable: ShopCode() && ItemID()">保存</button> <button type="button" data-bind="click: $parent.cancel">取消</button></td>
        </tr>
        <tr data-bind="ifnot: Editing, style: { backgroundColor: LastUpdateDateTime() < Date.now() - 86400000 ? '#ddd' : '' }">
            <td data-bind="text: ShopCode"></td>
            <td>
                <a target="_blank" href="#" data-bind="text: ItemID, attr: { href: ShopUrl }"></a>
                <br />
                <span data-bind="text: Title"></span>
            </td>
            <td data-bind="text: FormatPrice,style:{ backgroundColor:@ViewBag.MinPrice == Price() ? '#7AC5CD' : '' }"></td>
            <td data-bind="text: LastUpdateDateTime().toLocaleDateString(), style: { color: LastUpdateDateTime() < Date.now() - 86400000 ? 'red' : '' }"></td>
            <td><button type="button"  data-bind="click: $parent.delete">删除</button></td>
        </tr>
    </tbody>
</table>
<img class="loading" src="~/Scripts/layer/skin/default/loading-2.gif" style="margin:5% 50%; display:none;" />
<script>
		function viewModel(source)
		{
            var self = this;
			var init = function (obj)
			{
				var obj = {
					ShopCode: ko.observable(obj ? obj.ShopCode : ""),
					Pid: ko.observable(obj ? obj.Pid : ""),
                    //ItemID: ko.observable(obj ? obj.ItemID || obj.SkuID || obj.ItemCode || obj.Pid: ""),
                    ItemID: ko.observable(obj ? obj.ItemID || obj.SkuID || obj.ItemCode: ""),
                    Price: ko.observable(obj ? obj.Price : ""),
                    Title: ko.observable(obj ? obj.Title : ""),
                    ItemCode: ko.observable(obj ? obj.ItemCode : ""),
					LastUpdateDateTime: ko.observable(obj ? new Date(obj.LastUpdateDateTime) : ""),
					Editing: ko.observable(!obj),
					OriginalValue: obj
				};

				obj.FormatPrice = ko.computed(function ()
				{
					if (obj.Price())
						return "￥" + obj.Price().toFixed(2);
				});
				obj.ItemUrl = ko.computed(function ()
				{
                    return "http://item.tuhu.cn/Products/" + obj.Pid + ".html";
				});
				obj.ShopUrl = ko.computed(function ()
				{
					switch (obj.ShopCode())
					{
						case "京东自营":
							return "http://item.jd.com/" + obj.ItemID() + ".html";
						case "麦轮胎官网":
                            return "http://www.mailuntai.cn/product/" + obj.ItemID() + ".html";
                        case "养车无忧":
                            return "http://item.yangche51.com/p-" + obj.ItemID() + ".html";
                        case "汽车超人零售":
                            return "http://www.qccr.com/detail/" + obj.ItemID() + ".html";
                        case "汽车超人批发":
                            return "https://pch.qccr.com/html/goods/itemdetail.html?id=" + obj.ItemID();
                        case "康众官网":
                            return "http://www.carzone.cn/search/p_" + obj.ItemID() + "-c_0-b_0-t_0-a_0-d_0-p_1-l_2-pg_1.html";
                        case "淘宝":
                            return "https://item.taobao.com/item.htm?id=" + obj.ItemID();
						default:
							return 'https://detail.tmall.com/item.htm?id=' + obj.ItemID();
					}
                });
				return obj;
			}
			self.priceMap = ko.observableArray($.map(source, init));
			self.create = function ()
			{
				self.priceMap.unshift(init());
			}
            //保存监控产品
            self.save = function () {
                $(".loading").show();
			    var campaign = this;
			    var price = 0;
                var originalValue = ko.toJS(campaign);

                if (originalValue.ShopCode === "养车无忧" || originalValue.ShopCode === "康众官网") {
                    originalValue.ItemCode = originalValue.ItemID;
                    originalValue.ItemID = 0;
                }
                originalValue.Pid = $("#hidPid").val();
                $.post("/Monitor/PriceMonitorConfig", originalValue).complete(function (ajax) {
                    if (ajax.status == 200) {
                        var result = $.parseJSON(ajax.responseText);
                        if (result.Price) {
                            campaign.Price(result.Price);
                            campaign.Title(result.Title);
                            campaign.LastUpdateDateTime(new Date());
                            campaign.Editing(false);
                        }
                        else if (result == -1)
                            alert("已经存在相同的产品编号");
                        else if (result == -3)
                            alert("已存在相同的数据");
                        else if (result == -4)
                            alert("商铺商品不存在，请重新确认！\n如果确定存在请重新点击“保存”进行重试");
                        else if (result == -5)
                            alert("我们数据库中没有此PID！");
                        else {
                            campaign.Price(price);
                            campaign.Title(result.Title);
                            campaign.LastUpdateDateTime(new Date());
                            campaign.Editing(false);
                        }
                    }
                    else if (ajax.status > 0)
                        alert("服务器错误！");
                    $(".loading").hide();
                });
			}
            //取消
			self.cancel = function ()
			{
                self.priceMap.remove(this);
                $(".loading").hide();
			}
            //删除监控产品
			self.delete = function ()
            {
                var campaign = this;
                var pkid = 0;
                if (this.OriginalValue) {
                    pkid = this.OriginalValue.PKID;
                } else {
                    pkid = campaign.pkid;
                }
			    if (confirm("确定删除此监控吗？"))
			        $.post("@Url.Action("/DeletePriceMonitor")",
                        {
                            "pkid": pkid,
                            "pid": $("#hidPid").val(),
                            "shopCode": campaign.ShopCode(),
                            "itemID": campaign.ItemCode() || campaign.ItemID()
			            })
			            .complete(function(ajax) {
			                if (ajax.status == 200)
			                    self.priceMap.remove(campaign);
			                else if (ajax.status > 0)
			                    alert("服务器错误！");
			            });
			}
		}
		var model = new viewModel(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model)));
		ko.applyBindings(model);
</script>