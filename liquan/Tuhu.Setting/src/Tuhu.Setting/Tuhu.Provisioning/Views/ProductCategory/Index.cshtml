@{
    ViewBag.Title = "选择产品配置类型";
    Layout = "";
}
<link href="~/Scripts/zTree/css/zTreeStyle/zTreeStyle.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.11.2.min.js"></script>
<script src="~/Scripts/zTree/js/jquery.ztree.core-3.5.min.js" type="text/javascript"></script>
<script src="~/Scripts/zTree/js/jquery.ztree.excheck-3.5.min.js" type="text/javascript"></script>
<div style="margin-top:20px;">
    <ul id="CategoryTagTree" class="ztree"></ul>
</div>
<input type="hidden" id="imput_pid_Ids" />

<input type="hidden" id="hid-select-product-ids" />

<input type="hidden" id="hid-url" />
<script type="text/javascript">
    //获取树形菜单的类
    var productTree = {
        //获取产品类型数据
        GetProductCategoryData: function () {
            $.ajax({
                url: '/ProductCategory/GetPrductCategoryData',
                type: 'get',
                data: '',
                beforeSend: function () {
                },
                complete: function () {
                },
                success: function (data) {
                    zTreeSetting.zTreeJson = data;
                    zTreeSetting.zTreeInit();
                },
                error: function () {

                }
            });
        }
    };
    //树形菜单配置项
    var zTreeSetting = {
        setting: {
            data: {
                simpleData: { enable: true }
            },
            check: {
                enable: true,
                chkStyle: "checkbox",
               // chkboxType: { "Y": "s", "N": "s" }
            },
            callback: {
                onClick: function () {
                  //   var d = zTreeSetting.getItems();
                    //$("#PublicCategory").val(d.NodeNo);
                }
            }
        },
        zTreeJson: '',
        zTreeInit: function () {
            $.fn.zTree.init($("#CategoryTagTree"), zTreeSetting.setting, zTreeSetting.zTreeJson);

            var ids = $('#hid-select-product-ids').val();
            if (!ids || ids.length <= 0) {
                return;
            }
            var treeObject = $.fn.zTree.getZTreeObj("CategoryTagTree");
            var idList = ids.split(',');
            for (var i = 0; i < idList.length; i++) {
                var nodeId = idList[i];
                if (nodeId == '') {
                    continue;
                }
                var node = treeObject.getNodeByParam('id', nodeId);//.getNodeByTId(nodeId);
                if (!node) {
                    continue;
                }
                if (node.pId && node.pId != -1) {
                    var parentNode = treeObject.getNodeByParam('id', node.pId);
                    treeObject.expandNode(parentNode, true, true);
                }
                //treeObj.getNodeByTId("10");
                node.checked = true
                treeObject.updateNode(node);
                treeObject.expandNode(node, true, true);
            }
        },
        getItems: function () {
            return $.fn.zTree.getZTreeObj("CategoryTagTree").getSelectedNodes()[0];
        },
        //获取选中的项目
        GetCheckedItems: function () {
            var treeObj = $.fn.zTree.getZTreeObj("CategoryTagTree");
            var nodes = treeObj.getCheckedNodes(true);
            var checkedNodes = [];
            for (var i = 0; i < nodes.length; i++) {
                var node = nodes[i];
                //表示父节点
                if (!node.pId || node.Pid == -1) {
                    var childrens = node.children;
                    if (!childrens || childrens.length <= 0) {
                        checkedNodes.push(node);
                        continue;
                    }
                    //判断子集是否都选中
                    var isExistNotCheck = false;
                    for (var j = 0; j < childrens.length; j++) {
                        if (!childrens[j].checked) {
                            isExistNotCheck = true;
                            break;
                        }
                    }
                    //存在未选中的子节点
                    if (isExistNotCheck) {
                        continue;
                    }
                    checkedNodes.push(node);
                } else {
                    checkedNodes.push(node);
                }
            }
            return checkedNodes;
        },
        TreeObject: $.fn.zTree.getZTreeObj("CategoryTagTree"),
        expandAll: function (isExpandAll) {
            $.fn.zTree.getZTreeObj("CategoryTagTree").expandAll(isExpandAll || false);
        },
        SetNodesCheckedValue: function (ids) {
            $('#hid-select-product-ids').val(ids);
        }
    };

    $(function () {
        productTree.GetProductCategoryData();
    });

</script>

