@using Tuhu.Service.Push.Models.MessageBox
@using Tuhu.Service.Push.Models.Push
@model List<Tuhu.Service.Push.Models.Push.PushTemplate>
@{
    var plan = Model != null ? Model.FirstOrDefault() : null;
    var iosdata = Model == null ? null : Model.FirstOrDefault(x => x.DeviceType == Tuhu.Service.Push.Models.Push.DeviceType.iOS);
    var androiddata = Model == null ? null : Model.FirstOrDefault(x => x.DeviceType == Tuhu.Service.Push.Models.Push.DeviceType.Android);
    var messagebox = Model == null ? null : Model.FirstOrDefault(x => x.DeviceType == Tuhu.Service.Push.Models.Push.DeviceType.MessageBox);
    var dict = new Dictionary<string, string>();
    if (ViewData["dict"] != null)
    {
        dict = ViewData["dict"] as Dictionary<string, string>;
    }

    var navigationTypes = ViewData["NavigationTypes"] as IEnumerable<MessageNavigationType>;
    List<SelectListItem> navigationTypeSelects = new List<SelectListItem>();

    foreach (var item in navigationTypes)
    {
        var selectitem = new SelectListItem()
        {
            Text = item.NavigationName,
            Value = item.PkId.ToString()
        };

        if (iosdata != null && iosdata.MessageNavigationTypeId.HasValue)
        {
            selectitem.Selected = iosdata.MessageNavigationTypeId.Value == item.PkId;
        }
        navigationTypeSelects.Add(selectitem);
    }
    if (!navigationTypeSelects.Any(x => x.Selected))
    {
        navigationTypeSelects[0].Selected = true;
    }
}
<div id="iosinfo" style="display:none">
    <form id="IOSForm" method="post" action="@Url.Action("IOSSubmitTemplate")">
        @Html.Hidden("PKID", iosdata != null ? iosdata.PKID : 0)
        @Html.Hidden("BatchID", plan != null ? plan.BatchID : 0)
        @Html.Hidden("DeviceType", DeviceType.iOS)
        <input type="hidden" id="SubmitType" name="SubmitType" value="1" />
        <input type="hidden" id="phonepreview" name="phonepreview" value="" />
        <table id="iossetting" style="background: #ffffff; font-size: 12px; text-align: center" border="1">
            <tr>
                <th colspan="3">iOS推送创建</th>
            </tr>
            <tr>
                <td>计划ID</td>
                <td colspan="2">
                    @if (plan != null)
                    {
                        <span>@plan.BatchID</span>
                    }
                </td>
            </tr>
            <tr>
                <td>模版ID</td>
                <td colspan="2">
                    @if (iosdata != null)
                    {
                        <span>@iosdata.PKID</span>
                    }
                </td>
            </tr>
            <tr>
                <td colspan="3">内容设置</td>
            </tr>
            <tr>
                <td>推送标题</td>
                <td colspan="2">
                    @Html.TextBox("Title", iosdata == null ? "" : iosdata.Title, new { @style = "width:100%" })
                </td>
            </tr>
            <tr>
                <td>推送副标题</td>
                <td colspan="2">
                    @Html.TextBox("SubTitle", iosdata == null ? "" : iosdata.SubTitle, new { @style = "width:100%" })
                </td>
            </tr>
            <tr>
                <td colspan="3">通知内容</td>
            </tr>
            <tr>
                <td colspan="3">
                    @Html.TextArea("Content", iosdata == null ? "" : iosdata.Content, new { @style = "width:100%" })
                </td>
            </tr>
            <tr id="123">
                <td>通知图片</td>
                <td>预览图片</td>
                <td>
                    @*<input type="file" name="image" id="image" />*@
                    <input type="file" name="imgUpload" id="IOSimgUpload" onchange="upImage(this,'ios')" style="cursor: pointer;" accept=".png,.jpg,.jpeg,.jpe" />
                    <input type="text" name="BigImagePath" id="BigImagePath" style="display: none" value="@(iosdata!=null?iosdata.ImageUrl:"")" />
                    <div algin='center'>
                        <img id="imgUploadUrl" name="imgUploadUrl" src="@(iosdata!=null?iosdata.ImageUrl:"")" />
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="2">键值对</td>
                <td>
                    <input type="button" value="新增" onclick="AddExtra('ios')" />
                </td>
               
            </tr>
            @{
                int index = 0;
            }
            @if (iosdata != null && iosdata.ExtraDict.Count > 0)
            {
                index = 0;
                foreach (var extra in iosdata.ExtraDict)
                {
                    <tr @(string.Format("id=iosextratitle{0}", index))>
                        <td  colspan="2">键(key)</td>
                        <td>值(value)</td>
                    </tr>

                    <tr @(string.Format("id=iosextravalue{0}", index))>
                        <td colspan="2">
                            <input class="iosextrakey" type="text" name="ExtraKey[@index].Key" value="@extra.Key" />
                        </td>
                        <td >
                            <input class="iosextravalue" style="width:80%" type="text" name="ExtraKey[@index].Value" value="@extra.Value" />
                            <input type="button" id="@string.Format("ios{0}",index)" onclick="DeleteExtra(this,'ios')" value="删除" />
                        </td>
                    </tr>
                    index++;
                }
            }
            else
            {

                <tr @(string.Format("id=iosextratitle{0}", index))>
                    <td colspan="2">键(key)</td>
                    <td>值(value)</td>
                </tr>
                <tr @(string.Format("id=iosextravalue{0}", index))>
                    <td colspan="2">
                        <input class="iosextrakey" type="text" name="ExtraKey[@index].Key" value="" />
                    </td>
                    <td>
                        <input class="iosextravalue" style="width:80%" type="text" name="ExtraKey[@index].Value" value="" />
                        <input type="button" id="@string.Format("ios{0}",index)" onclick="DeleteExtra(this,'ios')" value="删除" />
                    </td>
                </tr>
            }
            @Html.Hidden("iosindex", index == 0 ? 0 : index - 1)

            <tr id="appendto">
                <td colspan="3">高级选项</td>
            </tr>
            <tr>
                <td colspan="2">推送时间(单次推送可用)</td>
                <td>
                    @*@Html.TextBox("PushTime", iosdata != null && iosdata.Sendtime.HasValue ? iosdata.Sendtime.Value.ToString() : "", new { @class = "datetimepicker" })*@
                    <input type="text"  style="width: 200px;"  id="IOSPushTime" name="PushTime" value="@(iosdata != null && iosdata.Sendtime.HasValue ? iosdata.Sendtime.Value.ToString() : "")" />
                </td>
            </tr>
            <tr>
                <td colspan="2">消息过期周期</td>
                <td>
                    @*@Html.TextBox("ExpireTime", iosdata != null && iosdata.ExpireTime.HasValue ? iosdata.ExpireTime.Value.ToString() : "", new { @class = "datetimepicker" })*@
                    <input type="text" id="ExpireTime" onclick="SetExpireTime('ios')" name="ExpireTime" value="@(dict.ContainsKey("iOS")?dict["iOS"].ToString():"")" />
                </td>
            </tr>
            <tr>
                <td colspan="2">声音提醒</td>
                <td>
                    @Html.DropDownList("Soundtype", new List<SelectListItem>()
                    {
                        new SelectListItem()
                        {
                            Text = "开启",
                            Value = "1",
                            Selected =iosdata==null||( iosdata != null && !string.IsNullOrEmpty(iosdata.SoundType) && iosdata.SoundType.Equals("default", StringComparison.OrdinalIgnoreCase))
                        },
                        new SelectListItem()
                        {
                            Text = "关闭",
                            Value = "0",
                            Selected = iosdata != null && !(!string.IsNullOrEmpty(iosdata.SoundType) && iosdata.SoundType.Equals("default", StringComparison.OrdinalIgnoreCase))
                        },
                    })
                </td>

            </tr>
            <tr>
                <td colspan="2">角标数字</td>
                <td>
                    @Html.DropDownList("Bdagetype", new List<SelectListItem>()
                    {
                        new SelectListItem()
                        {
                            Text = "开启",
                            Value = "1",
                            Selected = iosdata != null && iosdata.Bdage.HasValue && iosdata.Bdage.Value >0
                        },
                        new SelectListItem()
                        {
                            Text = "关闭",
                            Value = "0",
                            Selected = iosdata == null || !(iosdata.Bdage.HasValue && iosdata.Bdage.Value >0)
                        },
                    }, new { @onchange = "BdageChange()" })
                    @Html.TextBox("Bdage", iosdata != null && iosdata.Bdage.HasValue ? iosdata.Bdage.Value : 0, new { @style = "display:none" })
                </td>

            </tr>
        <tr>
            <td colspan="2">消息类型</td>
            <td>
                @Html.DropDownList("MessageNavigationTypeId", navigationTypeSelects)
            </td>

        </tr>
            <tr>
                <td colspan="3">
                    <input type="button" onclick="SubmitIOS('ios')" value="保存模版" />
                    <input type="button" value="预览" onclick="IOSPreview('ios')" />
                </td>
            </tr>
        </table>
    </form>
</div>