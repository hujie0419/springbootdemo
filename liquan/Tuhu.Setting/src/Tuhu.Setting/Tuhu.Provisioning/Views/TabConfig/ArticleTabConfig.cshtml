@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "发现标签配置";
}
<link rel="stylesheet" href="~/Scripts/artDialog6.0.4/css/ui-dialog.css" />
<link rel="stylesheet" href="~/Content/iview/iview.css" />
<style>
    [v-cloak] {
        display: none;
    }

    .ui-dialog {
        width: auto;
    }
</style>
<div id="div" style="margin-top:20px" v-cloak>
    <div style="margin-top:20px">
        <i-button type="success" v-on:click="AddTagStyleConfig" style="margin-left:15px;height:30px;width:90px">新增</i-button>
        <i-button type="success" v-on:click="RefreshTagStyleConfigCache" style="margin-left:15px;height:30px;width:90px">刷新缓存</i-button>
    </div>
    <i-table style="margin-top:20px" width="table.width" :height="600" :loading="table.loading" :data="table.data" :columns="table.columns"></i-table>
    <div style="margin: 10px;overflow: hidden">
        <div style="float: right;">
            <Page :total="page.total" :page-size="page.pageSize" :current="page.current" :page-size-opts="page.sizes" show-elevator show-sizer v-on:on-change="handlePageChange" v-on:on-page-size-change="handlePageSizeChange"></Page>
        </div>
    </div>
    <Modal v-model="modal.visible" :loading="modal.loading" title="标签样式配置" okText="提交" :transfer="false" cancelText="取消" v-on:on-ok="ok" scrollable="true" width="50%">
        <row>
            <i-col span="2">
                <label>NormalImg：</label>
            </i-col>
            <i-Col span="2" v-show="modal.data.NormalImg!=''">
                <a :href="modal.data.NormalImg" target="_blank"><img :src="modal.data.NormalImg" style='width:50px;height:50px'></a>
            </i-Col>
            <i-Col span="4">
                <Upload action="/RebateConfig/UploadImage?type=NormalImg" :format="['jpg','jpeg','png']" :on-format-error="handleFormatError" :max-size="10000" :on-exceeded-size="handleMaxSize" :on-success="handleSuccess" :show-upload-list="false">
                    <i-button type="ghost" icon="ios-cloud-upload-outline">Upload files</i-button>
                </Upload>
            </i-Col>
            <i-Col span="2" v-show="modal.data.NormalImg!=''">
                <i-button type="warning" icon="refresh" v-on:click="modal.data.NormalImg=''">清除</i-button>
            </i-Col>
        </row>
        <row style="margin-top:20px">
            <i-col span="2">
                <label>SelectedImg：</label>
            </i-col>
            <i-Col span="2" v-show="modal.data.SelectedImg!=''">
                <a :href="modal.data.SelectedImg" target="_blank"><img :src="modal.data.SelectedImg" style='width:50px;height:50px'></a>
            </i-Col>
            <i-Col span="4">
                <Upload action="/RebateConfig/UploadImage?type=SelectedImg" :format="['jpg','jpeg','png']" :on-format-error="handleFormatError" :max-size="10000" :on-exceeded-size="handleMaxSize" :on-success="handleSuccess" :show-upload-list="false">
                    <i-button type="ghost" icon="ios-cloud-upload-outline">Upload files</i-button>
                </Upload>
            </i-Col>
            <i-Col span="2" v-show="modal.data.SelectedImg!=''">
                <i-button type="warning" icon="refresh" v-on:click="modal.data.SelectedImg=''">清除</i-button>
            </i-Col>
        </row>
    </Modal>
</div>
<script type="text/javascript" src="~/Scripts/vue.min.js"></script>
<script type="text/javascript" src="~/Content/My97DatePicker/WdatePicker.js"></script>
<script src="/Scripts/artDialog6.0.4/dist/dialog-min.js"></script>
<script src="/Scripts/artDialog6.0.4/dist/dialog-plus-min.js"></script>
<script src="~/Scripts/vue.common.js"></script>
<script src="~/Scripts/iview/iview.min.js"></script>
<script>
    var vue = new Vue({
        el: "#div",
        data() {
            return {
                table: {
                    loading: true,
                    data: [],
                    width: '1500px',
                    columns: [
                        {
                            title: "#",
                            width: "100px",
                            align: "center",
                            key: "PKID"
                        },
                        {
                            title: "NormalImg",
                            width: "200px",
                            key: "NormalImg",
                            render: (h, params) => {
                                return h("a", {
                                    attrs: {
                                        href: params.row.NormalImg,
                                        target: "_blank"
                                    }
                                }, [h("img", {
                                    attrs: {
                                        src: params.row.NormalImg,
                                        width: 50,
                                        height: 50
                                    }
                                })])
                            }
                        },
                        {
                            title: "SelectedImg",
                            width: "200px",
                            key: "SelectedImg",
                            render: (h, params) => {
                                return h("a", {
                                    attrs: {
                                        href: params.row.SelectedImg,
                                        target: "_blank"
                                    }
                                }, [h("img", {
                                    attrs: {
                                        src: params.row.SelectedImg,
                                        width: 50,
                                        height: 50
                                    }
                                })])
                            }
                        },
                        {
                            title: "创建人",
                            width: "200px",
                            key: "CreateUser"
                        },
                        {
                            title: "创建时间",
                            width: "200px",
                            key: "CreateTime",
                            render: (h, params) => {
                                return h(
                                    "span",
                                    this.formatDate(params.row.CreateTime)
                                );
                            }
                        },
                        {
                            title: "更新时间",
                            width: "200px",
                            key: "UpdateTime",
                            render: (h, params) => {
                                return h(
                                    "span",
                                    this.formatDate(params.row.UpdateTime)
                                );
                            }
                        }
                    ],
                },
                page: {
                    total: 10,
                    current: 1,
                    pageSize: 10,
                    sizes: [5, 10, 20, 50]
                },
                modal: {
                    visible: false,
                    loading: true,
                    data: {
                        NormalImg: "",
                        SelectedImg: "",
                        Source: ""
                    }
                }
            }
        },
        created: function () {
            var self = this;
            self.init(1);
        },
        methods: {
            init(pageIndex) {
                var self = this;
                self.page.current = pageIndex;
                self.table.loading = true;
                self.table.data = [];
                $.get("SelectArticleTabConfig", {
                    pageIndex: self.page.current,
                    pageSize: self.page.pageSize
                }, function (result) {
                    self.table.loading = false;
                    self.table.data = result;
                    self.page.total = result.length > 0 ? result[0].Total : 0;
                });
            },
            ok() {
                var self = this;
                self.modal.loading = true;
                if (!self.modal.data.NormalImg) {
                    self.$Message.warning("请上传展示图片");
                } else if (!self.modal.data.SelectedImg) {
                    self.$Message.warning("请上传选中时展示图片");
                } else {
                    $.post("InsertArticleTabConfig", { config: self.modal.data }, function (result) {
                        if (result) {
                            self.$Message.success("操作成功");
                            self.modal.visible = false;
                            setTimeout(function () {
                                self.init(self.page.current);
                                self.RefreshTagStyleConfigCache();
                            }, 3000);
                        } else {
                            self.$Message.error("操作失败");
                        }
                    })
                }
                self.$nextTick(() => {
                    self.modal.loading = true;
                });
                self.modal.loading = false;
            },
            AddTagStyleConfig() {
                var self = this;
                self.modal.visible = true;
                self.modal.data.NormalImg = "";
                self.modal.data.SelectedImg = "";
            },
            RefreshTagStyleConfigCache() {
                var self = this;
                $.post("RefreshArticleTabConfigCache", function (result) {
                    if (result) {
                        self.$Message.success("缓存刷新成功");
                    } else {
                        self.$Message.error("缓存刷新失败");
                    }
                });
            },
            handlePageChange(pageIndex) {
                var self = this;
                self.init(pageIndex);
            },
            handlePageSizeChange(pageSize) {
                var self = this;
                self.page.pageSize = pageSize;
                self.init(self.page.current);
            },
            handleFormatError(file) {
                var self = this;
                self.$Message.warning("请选择 .jpg  or .png  or .jpeg图片");
            },
            handleMaxSize(file) {
                var self = this;
                self.$Message.warning("请选择不超过100KB的图片");
            },
            handleSuccess(res, file) {
                var self = this;
                if (res.Status) {
                    if (res.Type === "NormalImg") {
                        self.modal.data.NormalImg = res.ImageUrl;
                    } else {
                        self.modal.data.SelectedImg = res.ImageUrl;
                    }
                } else {
                    self.$Message.warning(res.Msg);
                }
            },
            //DelMorePicture(id) {
            //    var self = this;
            //    self.modal.data.ImgList = self.modal.data.ImgList.filter(function (x, index) {
            //        return index != id;
            //    });
            //},
            formatDate(value) {
                if (value) {
                    var time = new Date(
                        parseInt(value.replace("/Date(", "").replace(")/", ""))
                    );
                    var year = time.getFullYear();
                    var day = time.getDate();
                    var month = time.getMonth() + 1;
                    var hours = time.getHours();
                    var minutes = time.getMinutes();
                    var seconds = time.getSeconds();
                    var func = function (value, number) {
                        var str = value.toString();
                        while (str.length < number) {
                            str = "0" + str;
                        }
                        return str;
                    };
                    if (year === 1) {
                        return "";
                    } else {
                        return (
                            func(year, 4) +
                            "-" +
                            func(month, 2) +
                            "-" +
                            func(day, 2) +
                            " " +
                            func(hours, 2) +
                            ":" +
                            func(minutes, 2) +
                            ":" +
                            func(seconds, 2)
                        );
                    }
                }
            }
        }
    });
</script>